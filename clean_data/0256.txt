SECURITY OF DISTRIBUTED PARAMETER CYBER-PHYSICAL SYSTEMS: CYBER-ATTACK DETECTION IN LINEAR PARABOLIC PDES A PREPRINT Tanushree Roy, and Satadru Dey∗ December 17, 2021 ABSTRACT Security of Distributed Parameter Cyber-Physical Systems (DPCPSs) is of critical importance in the face of cyber-attack threats. Although security aspects of Cyber-Physical Systems (CPSs) modelled by Ordinary differential Equations (ODEs) have been extensively explored during the past decade, security of DPCPSs has not received its due attention despite its safety-critical nature. In this work, we explore the security aspects of DPCPSs from a system theoretic viewpoint. Speciﬁcally, we focus on DPCPSs modelled by linear parabolic Partial Differential Equations (PDEs) subject to cyber-attacks in actuation channel. First, we explore the detectability of such attacks and derive conditions for stealthy attacks. Next, we develop a design framework for cyber-attack detection algorithms based on output injection observers. Such attack detection algorithms explicitly consider stability, robustness and attack sensitivity in their design. Finally, theoretical analysis and simulation studies are performed to illustrate the effectiveness of the proposed approach. 1 INTRODUCTION Security of Cyber-Physical Systems (CPSs) with respect to cyber-attacks is essential for safe and reliable operation. Although secure operation and control of CPSs modelled by Ordinary differential Equations (ODEs) has been an active research area during the past decade (see [1, 2], and the references therein), such framework has been signiﬁcantly under-explored for Distributed Parameter Cyber-Physical Systems (DPCPSs) modelled by Partial Differential Equations (PDEs) [3,4]. Here, we present a framework to analyze and design cyber-attack detection algorithms for a class of DPCPSs, namely, CPSs modelled by linear parabolic PDEs. Safety of Distributed Parameter Systems (DPSs) with respect to physical faults has received moderate attention in existing literature. For example, the following are some notable works that designed model-based physical fault diagnosis algorithms for DPSs [5–15]. However, as discussed in [1], physical fault diagnostic algorithms might not be suitable for attacks as the later possesses intelligence and can be launched in a coordinated manner to satisfy speciﬁc malicious objectives [1]. This motivates the need for separate methodologies speciﬁc to cyber-attack analysis and detection [1]. In this context, the objective of our work is to develop a mathematical framework that enable analysis and design of cyber-attack detection algorithms for DPCPSs. There are very few works in existing literature that focus on cyber-attack related issues in DPCPSs. For example, a PDE-based framework is used to analyze the impact of automotive cyber-attacks on highways in [16]. In [17], a PDE model is utilized to evaluate the capability of attackers to launch attacks on the freeway trafﬁc control system. However, these approaches do not discuss design of cyber-attack detection algorithms. In [18], cyber-attack detection algorithms have been designed for a spatially distributed system. However, the problem setting in [18] assumes the existence of multiple in-domain sensor-actuator pairs. Such assumption may not be true for most of the existing distributed parameter systems where only boundary sensing is available. Furthermore, presence of uncertainties make the design of ∗T. Roy and S. Dey are with the Department of Mechanical Engineering, The Pennsylvania State University, University Park, Pennsylvania 16802, USA. {tbr5281,skd5685}@psu.edu. arXiv:2107.14159v2 [eess.SY] 30 Jul 2021 model-based detection algorithms signiﬁcantly challenging. It is desirable that any model-based detection algorithms should be able to reject the effect of uncertainties (minimizing false alarms) at the same time being highly sensitive to cyber-attacks (minimizing miss-detection). However, there exists a fundamental trade-off between these two objectives. Most of the aforementioned detection algorithms do not explicitly consider such trade-off in their design. In summary, a framework for analyzing and designing cyber-attack detection algorithms which (i) focuses on DPCPSs with boundary sensing, and (ii) explicitly considers the trade-off between robustness and attack sensitivity, remains an open problem. In our preliminary work [19], we have studied a similar approach for coupled hyperbolic PDEs with application to trafﬁc networks. However, such framework has not been explored for parabolic PDE systems to the best of our knowledge. In context of the above review, the pivotal contribution of this paper is in the development of a cyber-attack analysis and detection framework for boundary-sensed linear parabolic PDEs considering the trade-off between robustness and attack sensitivity. Speciﬁcally: i) We consider a class of boundary-measured linear parabolic PDEs where cyber-attacks can potentially compro- mise the actuation channels. ii) We explore the fundamental limitations of model-based algorithms by investigating the conditions of launching a stealthy attack. iii) We develop a PDE output injection observer based framework to design model-based algorithms. Speciﬁcally, the framework incorporates several design requirements such as stability, robustness to uncertainties, and sensitivity to cyber-attacks. Furthermore, the framework speciﬁcally detects cyber-attacks allowing for a provision to distinguish them from physical faults. The rest of the paper is organized as follows. Section II details the problem setup. Section III discusses the fundamental shortcomings of the model-based algorithms. Section IV details the design of cyber-attack detection algorithms. Section V presents simulation cases studies that illustrate the performance of the proposed algorithm. Finally, Section VI concludes the work. We have used the following notation, inequalities and lemmas in this paper. Notation: We use the following notation: ut = ∂u/∂t, ux = ∂u/∂x, uxx = ∂2u/∂x2; |X| denotes the absolute value of X; ∥u(.)∥C(D) denotes the supremum norm on the space of continuous functions deﬁned as follows ∥u(.)∥C(D) := supx∈D |u(x)|; ∥u(.)∥denotes the spatial L2 norm given as ∥u(.)∥:= qR 1 0 u2(x)dx; ∥u(.)∥H denotes the following ∥u(.)∥H := q |u(1)|2 + ∥u(.)∥2 + ∥ux(.)∥2. 2 PROBLEM SETUP We consider a class of DPCPSs where the plant resides in the physical layer and the controller resides in the cyber layer. The plant operation is enabled by a communication network which exchanges information between the plant and the controller. The security concerns of such DPCPSs arise from the vulnerability of the communication channels. Speciﬁcally, we consider the cyber-attacks where an adversary can potentially access and modify the information in the actuation channels. Actuator attacks can impact system functionality signiﬁcantly and deserves attention while designing secure CPSs [20–23]. These actuator attacks can be either directly in the actuator (for example, by manipulating the actuator software) or by injecting false data into the actuator command [20]. The physical plant is modelled by the following class of linear PDEs in time t ∈[0, ∞) and space x ∈[0, 1]: ut(x, t) = uxx(x, t) + αu(x, t) + D(x)q(t) + Da(x)δ(t), (1) with boundary conditions ux(0, t) = 0, ux(1, t) = 0, (2) and initial condition u(x, 0) = φ(x) along with the measured boundary state y(t) = u(1, t), (3) where u(x, t) is the distributed state, α is the reaction coefﬁcient, q(t) is the nominal in-domain input applied through the actuation distribution function D(x), δ(t) is the exogenous actuation attack component applied through the distribution function Da(x) ⊆D(x). The assumption of Da(x) being a subset of D(x) is due to the fact that the actuation can be partially compromised. We assume that the distributed parameter plant exhibits stable behavior under the control system, and hence, α < 0. The PDE (1)-(2) represents systems involving diffusion (captured by uxx) and reaction (captured by αu), for example, thermal systems [24–26]. 2 We also consider a class of attack detectors to detect the occurrences of the cyber-attacks. The attack detection algorithm takes the following form: A(.) : {MN, y(t)∀t ≥0} 7→r(t), (4) where MN indicates the nominal model (1)-(2) with δ(t) = 0 and unknown initial condition φ(x), and r(t) is a residual signal which is used for cyber-attack detection based on the following logic. r(t) = 0 ⇒No attack, r(t) ̸= 0 ⇒Attack occurrence. (5) Under this problem setup, our objective is to understand and quantify the fundamental performance limitation of A(.) and develop a framework for designing A(.). 3 FUNDAMENTAL LIMITATION OF ATTACK DETECTOR ALGORITHMS In this section, we analyze the fundamental limitation of A(.) in (4). Speciﬁcally, we derive the conditions under which an attack will be undetectable by A(.), irrespective of their design method. We start with the deﬁnition of stealthy or undetectable attacks adopted from [2]. Deﬁnition 1 (Stealthy Attacks). Denoting the output of the PDE (1)-(3) as y(t, φ(x), δ(t), q(t)), a non-zero attack δ(t) is stealthy or undetectable if and only if y(t, φ1(x), δ(t), q(t)) = y(t, φ2(x), 0, q(t)), t ⩾0 for some initial conditions φ1(x) and φ2(x) satisfying well-posedness of (1)-(3). With this deﬁnition, our objective is to analyze the existence and uniqueness of a stealthy attack in the PDE system (1)-(3). Without loss of generality, we use the following setting in this analysis: q(t) = 0, φ1(x) = φ(x) ̸= 0, and φ2(x) = 0, under which the stealthiness deﬁnition boils down to.: y(t, φ(x), δ(t), 0) = y(t, 0, 0, 0) = 0, ∀t ⩾0. (6) Generally, the forward problem for the PDE (1)-(3) entails solution of the state u(x, t) knowing the system model, initial condition φ(x) and input δ(t). On the other hand, an inverse problem for (1)-(3) boils down to solving the input δ(t) while the state u(x, t) (or, in our case the measurement y(t) = u(1, t)) is known. Accordingly, the question about existence and uniqueness of stealthy attacks can alternatively be framed as the existence of an unique solution to the inverse problem for (1)-(3). In the next, subsection we present a generalized solution for the forward problem of the PDE (1)-(3). 3.1 Generalized solution of the forward problem In order to formulate the generalized solution, we will introduce some important deﬁnitions and assumptions that will be invoked in our analysis. Deﬁnition 2 (Sobolev space H1(Ω)). The Sobolev space H1(Ω) is a Hilbert space with a norm induced by the following inner product: ⟨h, g⟩H1 = Z Ω (h(x)g(x) + h′(x)g′(x))dx Deﬁnition 3 (Spaces H1 0 and H−1). The Hilbert space H1 0(Ω) is a subspace of H1(Ω) and is deﬁned as H1 0(Ω) ={h ∈H1(Ω) : ∃a sequence of hn →h in H1(Ω) norm with hn ∈C∞ 0 (Ω)}, where C∞ 0 is the space of compactly supported smooth functions. On the other hand, the space H−1(Ω) is the dual space of H1 0(Ω) i.e. it consists of all linear functionals of H1 0(Ω). The duality between H−1(Ω) and H1 0(Ω) is given by ⟨., .⟩: H−1(Ω) × H1 0(Ω) →R. Deﬁnition 4 (Space of L2(I; X) ). An element h(., t) ∈L2(I; X(Ω)) is an element in X(Ω) for each t ∈I, with property that ∥h(., t)∥X is a measurable function on I and R I ∥h(., t)∥2 X dt < ∞. With the deﬁnitions of these vector spaces, we are ready to present our assumptions for the derivation of generalized solution of the forward problem. Assumption 1. For T > 0, we assume that (A1) attack Da(.)δ(t) ∈L2([0, T]; C2(Ω) ∩H−1(Ω)), and Da(1) ̸= 0 (A2) initial condition φ(x) ∈C2(Ω) ∩H1(Ω) and φ′(0) = φ′(1) = 0. Assumption (A1) enables the attack to be discontinuous in time as long as it is Lebesgue measurable. 3 Finally we are ready to deﬁne the idea of generalized solution of the PDE (1)-(3) in the following way. Deﬁnition 5 (Generalized Solution of (1)-(3)). A function u(., t) : [0, T] →H1 0(Ω) where Ω= (0, 1) is a weak solution of (1)-(3) if i) u ∈L2([0, T]; H1 0(Ω)) and ut ∈L2([0, T]; H−1(Ω)); ii) for any “test function" Ψ ∈H1 0(Ω)) ⟨ut, Ψ⟩+ b(u, Ψ; t) = δ⟨Da, Ψ⟩, (7) for t point-wise almost everywhere (a.e.) in [0, T] and where b(u, Ψ; t) is the bilinear form given by b(u, Ψ; t) = Z 1 0 uxΨx dx −α Z 1 0 uΨ dx. (8) iii) u(., 0) = φ(.). The time derivative ut in (7) is deﬁned as distributional time derivative: Z T 0 ut(., t)v(t) dt = − Z T 0 u(., t)v′(t) dt for any v : [0, T] →R with v ∈C∞ 0 (0, T). Moreover, a solution u that satisﬁes (7), automatically satisﬁes the condition ux(0, t) = ux(1, t) = 0. This can be proved easily by applying Green’s Theorem to the ﬁrst term of the bilinear form and choosing Ψ = ∂u ∂x|∂Ω. Thus, no additional condition other than u(., 0) = φ(.) is necessary in order for u to be a generalized solution of (1). Remark 1. The integral equation (7) can be obtained by (i) multiplying (1) with any Ψ ∈H1 0(Ω)), (ii) integrating between (0, 1) and (iii) applying divergence theorem. Thus the generalized solution represents the solution of the integral version of the original PDE (1). The advantage of generalized solution compared to classical solution is that they allow solutions of much less restrictive class like L2([0, T]; H−1(Ω)) such as discontinuous attacks. In order to construct the generalized solution of the forward problem, we follow the subsequent steps. Step 1: We construct a sequence of approximate solutions to the desired PDE by constructing regular solutions for an “approximate" version of the original PDE. Step 2: We show these solutions are uniformly bounded. Step 3: Using Banach-Alaoglu theorem, we can then claim the existence of a subsequence from this sequence of approximate solutions, such that they converge “weakly" to a limit. Step 4: Finally, we argue that the limiting solution solves the PDE in the generalized sense. Step 1: Construction of the Galerkin approximate solution: Let χN be a N−dimensional subspace of H1 0(0, 1) and is given by the span{X1, X2, . . . , XN}, where {X1, X2, . . .} are the orthonormal basis vectors of L2(0, 1) as well as for H1 0(0, 1). Next, let us deﬁne an orthogonal projection onto χN, PN : L2(Ω) →χN ⊂L2(Ω) as PN X n∈N TnXn(x) ! = N X n∈N TnXn(x) (9) Deﬁnition 6 (Approximate solution). An approximate solution of (7) is a function uN : [0, T] →χN, if (i) uN ∈L2([0, T]; χN) and uNt ∈L2([0, T]; χN) (ii) ∀w ∈χN, (uNt, w)L2 + b(uN, w; t) = δ⟨PNDa, w⟩, (10) uN(0) = PNφ (11) where PNDa, PNg imples the orthogonal projection of functions Da and g onto χN and are deﬁned as below: Da(x) = X n∈N dnXn(x), PNDa(x) = N X n=0 dnXn(x), (12) φ(x) = X n∈N φnXn(x), PNφ(x) = N X n=0 φnXn(x). (13) 4 Next using Sobolev Embedding theorem [27], we can assert that if uN ∈H1 0(0, T; χN) then uN ∈C(0.T; χN). For test functions in χN, satisfying condition (ii) implies that the solution satisﬁes the weak formulation (7). In order to construct the “Galerkin approximation", we choose the N orthonormal basis vectors of χN to be the eigenfunctions corresponding to the eigenvalues λn of the following Sturm-Liouville problem X ′′ n(x) + (α −λn)Xn(x) = 0, X′ n(0) = 0, X′ n(1) = 0, (14) where λn = α −(nπ)2, Xn(x) = cos(nπx). For uN to be an approximate solution, uN must be in L2([0, T]; χN) and thus can be expressed as the following sum of its basis vectors: uN(x, t) = N X n=0 T N n (t)Xn(x), (15) where T N n (t) : [0, T] →R are scalar coefﬁcient functions that are absolute continuous over [0, T]. Moreover, (15) is a solution of (10) iff T N n , (T N n )t ∈L2([0, T]), ∀n ∈{1, . . . , N}. Plugging in (15) into (10)-(11) and using linearity along with (14), we can assert that (T N n )′ −λnT N n (t) = dnδ(t), T N n (0) = φn. (16) where dn = ⟨Da, Xn⟩and φn = (φ, Xn)L2 as deﬁned previously. To note, φn, dn, represents Fourier coefﬁcient of the even extension of φ and Da respectively. Finally using the solution of (16) into (15), we ﬁnally arrive at the approximate Galerkin solution uN(x, t) = N X n=0 φneλnt cos(nπx) + N X n=0   t Z 0 dnδ(τ)eλn(t−τ)dτ  cos(nπx). Step 2: Uniform Bound on approximate solution: In this step, we invoke the following lemma demonstrating the uniform bound of the approximate solution uN for each N ∈N. The proof of this lemma is in the appendix. Lemma 1 (Uniform Bound on approximate solution). For every approximate Galerkin approximation uN there exists a constant γ which depends on T, Ωand α such that it uniformly bounds the solution and its derivative in the following sense [28]: ∥uN∥L∞(0,T ;L2) + ∥uN∥L∞(0,T ;H1 0) + ∥(uN)t∥L2([0,T ];H−1) ⩽γ  ∥Daδ∥L2([0,T ];H−1) + ∥φ∥L2(Ω)  (17) Step 3: Convergence of approximate solution: Using the next Lemma, we establish the existence of a limiting weak solution derived from the sequence of approximate Galerkin solutions. Lemma 2 ( Convergence of approximate solution). The sequence of approximate solutions uN converges weakly to a unique function u ∈L2([0, T]; H1 0) and ut ∈L2([0, T]; H−1) as N →∞and is given by: u(x, t) = ∞ X n=0 φneλnt cos(nπx) + ∞ X n=0   t Z 0 dnδ(τ)eλn(t−τ)dτ  cos(nπx). (18) Proof. Since the approximate solutions uN are bounded in L2([0, T]; H1 0) (from Lemma 1), we know from the Banach- Alaoglu theorem that there exists a subsequence of uN that weakly converges to a function in L2([0, T]; H1 0). Here we construct the subsequence to be the sequence uN itself and show that it weakly converges to function u ∈L2([0, T]; H1 0) (18) i.e. uN ⇀u in L2([0, T]; H1 0). To prove weak convergence in L2([0, T]; H1 0), we need to show that (i) L2([0, T]; H1 0)-norm of (uN −u) goes to zero as N →∞and (ii) u in (18) belongs to L2([0, T]; H1 0) . Proving (i): We need to prove the following norm goes to zero as N →∞ T Z 0 ∥uN −u∥2 H1 0 dt = T Z 0 ∥uN −u∥2 L2dt + T Z 0 ∥uNx −ux∥2 L2dt Now expanding the second term of the above expression yields T Z 0 ∥uN −u∥2 L2dt ⩽ ∞ X n=N "Z T 0 φ2 ne2λntdt Z 1 0 cos2(nπx)dx # + ∞ X n=N   T Z 0 t Z 0 d2 nδ2(τ)e2λn(t−τ)dτ dt Z 1 0 cos2(nπx)dx  . 5 φn and dn being Fourier coefﬁcients of C2 functions on bounded interval are bounded and thus we can conclude that the right hand side of the inequality is a convergent sum and as N →∞, the norm goes to zero. We can similarly show that R T 0 ∥uNx −ux∥2 L2dt goes to zero as N →∞which in turn proves part(i). Proving(ii): To prove u ∈L2([0, T]; H1 0), we need to show R T 0 ∥u∥2 H1 0 dt < ∞. This again can be proved using similar convergence arguments, as used in part (i). ■ Step 4: Validation of limiting solution: To prove that the limiting function is indeed the generalized solution, we present an important lemma regarding weak convergence. Lemma 3. If uN converges weakly to u (uN ⇀u) in L2([0, T]; H1 0) and ΨN converges strongly to Ψ (ΨN →Ψ) in L2([0, T]; H−1), then ⟨uN, ΨN⟩→⟨u, Ψ⟩. Proof. For any ϵ > 0, there exists a N1 ∈N such that as N > N1 we have R T 0 |⟨uN, ΨN⟩−⟨u, Ψ⟩| dt ⩽ R T 0 |⟨uN, ΨN⟩−⟨u, ΨN⟩| dt + R T 0 |⟨u, ΨN −Ψ⟩| dt< ϵ. ■ Finally, we are ready to demonstrate that the function derived from the weak limit of the approximate Galerkin solutions is in fact the unique solutions of the generalized PDE problem formulated in (7). Theorem 1 (Generalized solution of forward problem). The limiting function u in (18) is the unique generalized solution to (7). Proof. Using Lemma 2, we know that uN ⇀u in L2([0, T]; H1 0) and uNt ⇀ut in L2([0, T]; H−1). Next we choose a sequence of function ΨN such that ΨN ∈χN and substitute ΨN in place of w in (10). It is evident from the deﬁnition of χN that it is dense in H1 0(Ω). This implies there exists a function Ψ ∈H1 0(Ω) such that ΨN →Ψ in L2([0, T]; H−1). It is also trivial to prove that limN→∞PNDa = Da. Moreover, for any h ∈C∞ 0 (0, T) we can infer using Lemma 3 the following: Z T 0 (uNt, hΨN)L2 dt → Z T 0 ⟨ut, hΨ⟩dt. (19) Z T 0 b(uN, hΨN; t) dt → Z T 0 b(u, hΨ; t) (20) Z T 0 δ⟨PNDa, hΨN⟩dt → Z T 0 δ⟨Da, hΨ⟩dt, (21) as map t 7→hΨN is in L2([0, T]; H1 0). Hence, if uN satisﬁes (10) as N →∞, u satisﬁes the following equation: Z T 0 h (⟨ut, Ψ⟩+ b(u, Ψ; t)) dt = Z T 0 hδ⟨Da, Ψ⟩. (22) Considering (22) is true for any h ∈C∞ 0 (0, T), we can conclude that u satisﬁes the generalized PDE (7). ■ 3.2 Existence and Uniqueness of Stealthy Attacks In this subsection, we use the derived generalized solution of the forward problem to construct a solution of the inverse problem in the form of δ(t). Subsequently, we prove the existence and uniqueness of this solution. Theorem 2 (Existence and Uniqueness of Stealthy Attacks). Consider the PDE system (1)-(3) that satisﬁes Assumption 1, with q(t) = 0 and the stealthiness condition (6). Then there exists an unique solution δ(t) ∈L2[0, T] with 0 < T < ∞for which y(t) = u(1, t) = 0. Proof. In this part, we solve the following inverse problem: with the knowledge of y(t) = u(1, t) = 0 and the system dynamics, solve for δ(t). Substituting (3) in (18), we get the following Volterra integral equation of the ﬁrst kind with 6 respect to δ(t): u(1, t) = 0 = −a(t) + t Z 0 δ(τ)b(t, τ) dτ, (23) where a(t) := − ∞ X n=0 (−1)nφneλnt, b(t, τ) := ∞ X n=0 (−1)ndneλn(t−τ). (24) As dn and φn are Fourier coefﬁcient, we can again argue that the series given in a(t) and b(t, τ) converge and are continuously differentiable functions in t under assumptions (A1) and (A2). Next, we prove that limt→0 an(t) exists. This is needed to show that (23) is valid as t →0. Now, the existence of limt→0 an(t) is equivalent to the uniform convergence of the sum of limits for each term. Performing term-by-term limit of (24) yields lim t→0 ∞ X n=0 (−1)nφneλnt = ∞ X n=0 (−1)nφn  lim t→0 eλnt = ∞ X n=0 (−1)nφn. (25) In order to show uniform convergence of (25), we need to ﬁnd a convergent majorizing series. Using integration by parts and condition φ′(0) = φ′(1) = 0 in (A2), we can show that |φn| < 2Cφ n2π2 . This implies the majorizing series ∞ P n=0 2Cφ n2π2 is absolutely convergent. Hence ∞ P n=0 (−1)nφn converges uniformly. This implies that the limit of (24) as t →0 exists and can be obtained by summing the limits of the terms. Finally, we evaluate the limit of a(t) as t →0 we get a(0) = − ∞ X n=0 (−1)nφn = −φ(1) = −u(1, 0) = 0. (26) Hence, it is evident that (23) is valid as t →0. Next, using similar arguments we can evaluate the limit of t →τ for b(t, τ) to obtain b(t, t) = ∞ X n=0 (−1)ndn = Da(1) ̸= 0, t ⩾0 (27) using the condition (A2). This is needed subsequently in the proof. Furthermore, under the conditions (A1) and (A2) and the properties of a(t) and b(t, τ) derived above, we can differentiate (23) to obtain a Volterra integral equation of the second kind as follows: δ(t)b(t, t) + t Z 0 δ(τ)bt(t, τ) dτ = a′(t), (28) which can be equivalently written as δ(t) − t Z 0 K(t, τ)δ(τ) dτ = m(t), (29) where m(t) = at(t) b(t, t) and K(t, τ) = −bt(t, τ) b(t, t) (30) bt(t, τ) = ∞ X n=0 (−1)nλndneλn(t−τ). (31) Let us deﬁne an integral operator K with the kernel K(t, τ) as follows Km(t) = t Z 0 K(t, τ)m(τ) dτ. (32) 7 Since b(t, t) = Da(1) is a non-zero constant function given in (27), using standard iterative methods [29] we obtain a unique function δ(t) that is the solution of (28). The solution is formally given by the following Liouville-Neumann series: δ(t) = m(t) + ∞ X n=1 Knm(t). (33) Now, to assert the L2-convergence of the formal series given in (33), we need to show that (i) the kernel K(t, τ) ∈ L2(I, I) where I = [0, T], T < ∞, (ii) the operator norm of K is ﬁnite over a ﬁnite interval I and (iii) sum in (33) converges in L2(I). To prove the kernel is square-measurable we need to show R T 0 R t 0 |K(t, τ)|2dτdt < ∞. Now ∥K(t, .)∥2 L2 = R t 0 |k(t, τ)|2dτ = 1 |b(t,t)|2 R t 0 |bt(t, τ)|2dτ. Using Cauchy product for |bt(t, τ)|2 and observing |bt(t, τ)|2 ⩽|bt(t, t)|2 (since λn < 0), we can write ∥K(t, .)∥2 L2 < Ct, where C = |bt(t, t)|2/|b(t, t)|2. This implies ∥K∥2 L2 = CT 2/2 < ∞. To prove that the operator K : L2(I) →L2(I) have a ﬁnite operator norm, we chose m(t) ∈L2(I), then ∥K∥2 = sup∥m∥ ∥Km∥2 L2 ∥m∥2 L2 < C R T 0 t2 1 2 dt1 = C T 3 3! < ∞. This means that the operator maps from the space of measurable functions to itself. Similarly, it is straightforward to verify that ∥Knm∥2 L2 < C∥m∥2 L2 T n+2 (n+2)!. Therefore, we can write ∥δ∥L2 ⩽ P∞ n=0 ∥Knm∥2 L ⩽∥m∥L2T P∞ n=0 q (CT )n (n+2)!. Using ratio test it can be easily veriﬁed that this series is convergent. From these three arguments we can infer that the series of measurable functions mapped by the operator converges to a measurable function δ(t). Hence, the existence of a solution of the inverse problem is proven by construction of a series solution (33) to the inverse problem. The iterative method of this construction also guarantees uniqueness of such construction. This concludes the proof of existence of a unique solution δ(t) to the inverse problem (1)-(3). ■ Once we ﬁnd that there exists a unique solution of the inverse problem that provides δ(t), our next objective is to explore the stability of such solution in L2. We know that a solution is locally well-posed in the sense of Hadamard [30] if the following conditions are satisﬁed for some time T > 0 : (i) a solution exists, (ii) it is unique, and (iii) it “continuously" depends on the initial data. Now let us deﬁne a linear operator T δ(t) := tR 0 δ(τ)b(t, τ) dτ). Next referring to (23), we observe that the linear problem T δ(t) = a(t) is ill-posed as T is not continuous but L2. Hence, even though the solution δ(t) exists and is unique, the solution remains ill-posed. This implies that the computation of such solution will not provide a correct answer directly regardless of the uniqueness of the solution. Accordingly, our next objective is to ﬁnd a stable solution using Tikhonov Regularisation so that the solution δ(t) obtained in (33), “continuously" depends on the initial data in the sense of L2-regularity. That is, for arbitrarily small changes in initial data φ(x), the change in δ will also be small in L2 sense. To this end, we ﬁrst introduce the regularisation method. Lemma 4 (Tikhonov Regularisation [31]). The stable solution to an ill-posed linear problem T m(t) = δ(t), where T : L2(I) →L2(I) and m(t), δ(t) ∈L2(I) is given by δγ = argmin w∈L2(I) ∥Tw −a∥2 L2 + γ∥w∥2 L2, (34) where γ is a positive regularization parameter. Theorem 3 (Continuous dependence of stealthy attack upon initial data). Let φ and ˜φ be the nominal and perturbed initial conditions that satisfy the assumptions (A1) and (A2) of Theorem 2, then the change in attack δ to ˜δ depends continuously upon the change in initial data. Proof. Let us ﬁrst denote a and ˜a from (24) corresponding to the nominal and perturbed initial conditions. Then the two linear problems becomes: T δ = a and T ˜δ = ˜a. Using the Tikhonov regularization from Lemma 4, we can claim the regularised solutions to the two ill-posed linear problem are given by δγ to ˜δγ respectively. Now, we can write ∥δ −˜δ∥L2 ⩽∥δ −δγ∥L2 + ∥δγ −˜δγ∥L2 + ∥˜δγ −˜δ∥L2. (35) The ﬁrst and the third terms on the right hand side of this inequality are due to approximation errors occurring from the approximation in the regularization method. Thus these terms can be bounded by a constant. Then it is clear that ∥δ −˜δ∥L2 solely depends on the second term. 8 On the other hand, from [31] we can claim that ∥δγ −˜δγ∥L2 ⩽γ−1∥a −˜a∥L2. (36) and it can be easily derived that ∥a −˜a∥L2 ⩽M∥φ −˜φ∥C(Ω). (37) This completes the proof. ■ 4 DESIGN OF ATTACK DETECTION ALGORITHM In this section, we discuss the detailed design of attack detection algorithm for detectable attacks. We choose the following output error injection based PDE observer as the attack detection algorithm A(.). ˆut(x, t) = ˆuxx(x, t) + αˆu(x, t) + D(x)q(t) + L(x)˜y(t), (38) ˆux(0, t) = 0, ˆux(1, t) = L1˜y(t), ˆu(x, 0) = ˆφ(x), (39) ˆy(t) = ˆu(1, t), r(t) = ˜y(t) = ˜u(1, t), (40) where ˜y(t) = y(t) −ˆy(t) is the output error of the observer, and L(x) and L1 are the observer gains and tuning parameters of the algorithm. Remark 2. We resort to a late lumping approach where the observer design is done in an inﬁnite dimensional space, as opposed to designing it on a ﬁnite dimensional approximation of the original PDE. Such late lumping approach helps the proposed design to eliminate the following issues associated with ﬁnite dimensional approximation: (i) spillover effect [32], and (ii) loss of accuracy and physical signiﬁcance of the original PDE model [12]. In practical settings, the attack detection algorithm and its residual signal should have the certain desirable properties. First, stability is the primary requirement for the residual signal dynamics. Next, the residual signal should be robust with respect to model uncertainties. Finally, the residual signal should be highly sensitive to the attacks. Besides robustness to uncertainties, another relatively less obvious challenge in attack detection lies in distinguishing cyber attacks from physical faults. Although cyber attacks and physical faults both can negatively impact the system, the subsequent management could be very different for these two types of anomalies. Hence, it is essential to distinguish their occurrences, if possible. However, under certain scenarios it might be impossible to distinguish them, for example, if the adversary deliberately designs the attack to mimic a physical fault scenario. Apart from these scenarios, we resort to the following approach to distinguish the faults from attacks [33]. We consider the physical faults as undesirable disturbances and subsequently desensitize their effect on the residual signal. In effect, we design our residual signal generator to be robust towards both uncertainties and physical faults. In order to do the same, knowledge about probable physical faults in system would be useful which can be acquired by performing a thorough apriori physical Failure Modes and Effect Analysis (FMEA) study [34]. Accordingly, the proposed algorithm will only raise a ﬂag when there is a cyber-attack. In the next subsections, we formulate the observer design problem that considers these aforementioned properties. Remark 3. The proposed framework allows for a provision to distinguish between cyber-attacks and physical faults. One possible solution can be running this algorithm in parallel with another fault detection algorithm. In case of a cyber-attack, the proposed algorithm will raise a ﬂag whereas the fault detection algorithm will not. By comparing the outputs of these two algorithms, one can distinguish between cyber-attacks and faults. Remark 4. The attacks considered in this section are detectable attacks. That is, they exclude the attack set discussed in the previous section. The analysis in the previous section discusses existence of undetectable attacks which cannot be detected by the algorithm A(.). Indeed, it is possible to generate such perfectly stealthy attacks if the adversary possesses detailed knowledge of the system, as discussed in [2]. On the other hand, it is still difﬁcult to detect detectable attacks that are generated based on partial knowledge of the system due to the presence of uncertainties. The goal of A(.) discussed in this section is to minimizes the effect of such uncertainties and maximizes the detectability of such detectable attacks. 4.1 Residual Signal Generation and Design Requirements First, we re-write the PDE dynamics (1)-(3) as: ut(x, t) = uxx(x, t) + αu(x, t) + D(x)q(t) + Da(x)δ(t) + η(x, t), (41) ux(0, t) = 0, ux(1, t) = 0, u(x, 0) = φ(x), (42) 9 y(t) = u(1, t), (43) where η(x, t) represents the effect of distributed modeling uncertainty and physical faults. Subtracting the observer dynamics (40) from the system dynamics (41)-(42), we write the residual signal dynamics as ˜ut(x, t) = ˜uxx(x, t) + α˜u(x, t) + Da(x)δ(t) + η(x, t) −L(x)˜u(1, t), (44) ˜ux(0, t) = 0, ˜ux(1, t) = −L1˜u(1, t), (45) r(t) = ˜u(1, t), (46) where ˜u(x, t) = u(x, t) −ˆu(x, t) is the distributed error with ˜u(x, 0) = ˜u0(x) = φ(x) −ˆφ(x) being the initial error. Next, we state the following design requirements. Design Requirement 1. (Exponential Stability) In case of η(x, t) = 0, δ(t) = 0, the residual should exponentially approach zero. We mathematically express this requirement as: |r(t)|2 ⩽K1e−K2t |r(0)|2 , (47) where K1 ∈R and K2 ∈R+ are some constants. Design Requirement 2. (Attack/Uncertainty-to-Residual Stability) In case of η(x, t) ̸= 0, δ(t) ̸= 0, the residual signal should be bounded. We mathematically express this requirement as: |r(t)|2 ⩽K3e−K4t |r(0)|2 + K5(t) |δ(t)|2 + K6 ∥η(., t)∥2 H , (48) where K3, K4, K5, K6 ∈R+. Design Requirement 3. (Robustness) The residual signal should be robust with respect to the uncertainty and physical faults. We mathematically express this requirement as: Z ∞ 0 |r(τ)|2 dτ ⩽β2 1 Z ∞ 0 ∥η(., τ)∥2 H dτ + ϵ, η(x, t) ̸= 0, δ(t) = 0, (49) where β1 ∈R+ is an user-deﬁned constant representing desired robustness level, and ϵ ∈R+ is a constant that depends on initial observer errors. Design Requirement 4. (Attack Sensitivity) The residual signal should be sensitive to the attack. We mathematically express this requirement as: Z ∞ 0 |r(τ)|2 dτ ⩾β2 2 Z ∞ 0 ∥Da(., τ)∥2 H |δ(τ)|2 dτ −ϵ, η(x, t) = 0, δ(t) ̸= 0, (50) where β2 ∈R+ is an user-deﬁned constant representing desired sensitivity level, and ϵ ∈R+ is a constant that depends on initial observer errors. Remark 5. The Design Requirements 3 and 4 are inspired by the H∞/H−criteria used in fault detection of ODE systems [35]. Furthermore, the term ϵ in (49) and (50) can be interpreted following the notion of Input-to-State Practical stability [36]. 4.2 Backstepping Transformation of Residual Dynamics In this section, we use a backstepping transformation to transform the residual dynamics (44)-(45) to a target system dynamics [37]. Such target system dynamics will be useful for analyzing and designing the residual signal properties. The following transformation ˜u(x, t) 7→ψ(x, t) ˜u(x, t) = ψ(x, t) − Z 1 x P(x, y)ψ(y, t)dy, (51) transforms (44)-(45) to the following target system dynamics: ψt(x, t) = ψxx(x, t) −cψ(x, t) + D(x)δ(t) + θ(x, t), (52) ψx(0, t) = 0, ψx(1, t) = −cψ(1, t), (53) where c > 0 is a design parameter to be determined, and D(x) and θ(x, t) are the transformed versions of Da(x) and η(x, t), respectively, given by η(x, t) = θ(x, t) − Z 1 x P(x, y)θ(y, t)dy, (54) 10 Da(x) = D(x) − Z 1 x P(x, y)D(y)dy. (55) Starting from the transformation (51), and subsequently comparing the original residual dynamics (44)-(45) and the target system (52)-(53), it turns out that the kernel P(x, y) must satisfy the following PDE [37]: Pyy(x, y) −Pxx(x, y) = (c + α)P(x, y), (56) P(x, x) = −(c + α) 2 x, Px(0, y) = 0. (57) with the following closed-form solution P(x, y) = −(c + α)y I1( p (c + α)(y2 −x2)) p (c + α)(y2 −x2) , (58) where I1(.) is the modiﬁed Bessel function of ﬁrst kind. Furthermore, the observer gains can be computed as: L(x) = −cP(x, 1) −Py(x, 1), L1 = c −P(1, 1). (59) Next, we focus on the inverse transformation Q(x, y) 7→P(x, y) which is given by ψ(x, t) = ˜u(x, t) + Z 1 x Q(x, y)˜u(y, t)dy. (60) The condition on the kernel Q(x, y) is derived following a similar approach as the backstepping kernal P(x, y). It turns out that Q(x, y) must satisfy the following PDE: Qyy(x, y) −Qxx(x, y) = −(c + α)Q(x, y), (61) Q(x, x) = −(c + α) 2 x, Qx(0, y) = 0. (62) with the following closed-form solution Q(x, y) = −(c + α)y J1( p (c + α)(y2 −x2)) p (c + α)(y2 −x2) , (63) where J1(.) is the Bessel function of ﬁrst kind. Consequently, the inverse relationships of (54) and (55) can be written as: θ(x, t) = η(x, t) + Z 1 x Q(x, y)η(y, t)dy, (64) D(x) = Da(x) + Z 1 x Q(x, y)Da(y)dy. (65) Remark 6. Due to the existence of an inverse transformation (60), we can conclude that the stability properties of target system dynamics (52)-(53) conﬁrm the stability of the original system dynamics (44)-(45). Lemma 5. The upper bounds of Q(x, y) and Qx(x, y) are given by: |Q(x, y)| ⩽Q = sup 0⩽x⩽y⩽1 |Q(x, y)| = c + α 2 , (66) |Qx(x, y)| ⩽Qx = sup 0⩽x⩽y⩽1 |Qx(x, y)| = c + α 16 . (67) Proof. Staring from (63) and using properties of Bessel functions [37], the upper bounds can be found equating the ﬁrst derivative of Q(x, y) and Qx(x, y) to zero, and subsequently computing the supremum values of the functions. ■ Lemma 6. The upper bounds of D(x) and θ(x, t) in (52) are given by: |D(1)| = |Da(1)| , ∥D(.)∥⩽  1 + c + α 2  ∥Da(.)∥, (68) ∥Dx(.)∥⩽  1 + c + α 16  ∥Dax(.)∥, (69) |θ(1, t)| ⩽|η(1, t)| , ∥θ(., t)∥⩽  1 + c + α 2  ∥η(., t)∥, (70) ∥θx(., t)∥⩽  1 + c + α 16  ∥ηx(., t)∥, (71) Proof. Staring from (64)-(65), and using the results from Lemma 5 and Cauchy-Schwarz inequality, the proof is straightforward. ■ 11 4.3 Main Result of Attack Detection Algorithm In this section, we present the main result of the attack detection algorithm. First, we make the following assumptions. Assumption 2. Consider the target system (52)-(53). The initial conditions are bounded as follows: ∥ψ(x, 0)∥⩽ψ0 < ∞, ∥ψx(x, 0)∥⩽ψx0 < ∞, (72) 0 < ψ10 ⩽|ψ(1, 0)| ⩽ψ10 < ∞. (73) Next, the following theorem establishes the conditions on the design parameter c in target system (52)-(53) which will lead to the satisfaction of the Design Requirements 1-4. Theorem 4. Consider the residual signal deﬁnition (40), Design Requirements (47)-(50) and the target system dynamics (52)-(53). If there exists a c > λ > 0 that satisﬁes the following conditions: A ⩽0, B ⩾0, (74) where λ being an arbitrary positive constant and A = [Aij] ∈R6×6 with A11 = 1 −c2 + cα1λ1 2 , A22 = −c + (1 + c + α 2 )α2λ2 2 , A33 = −c + (1 + c + α 16 )α3λ3 2 , A44 = cα1 2λ1 −β2 1, A55 = (1 + c + α 2 ) α2 2λ2 −β2 1, A66 = (1 + c + α 16 ) α3 2λ3 −β2 1, A14 = A41 = c(1 −α1) 2 , A25 = A52 = (1 + c+α 2 )(1 −α2) 2 , A36 = A63 = (1 + c+α 16 )(1 −α3) 2 , (75) and rest of the elements Aij = 0; B = [Bij] ∈R6×6 with B11 = 1 + c2 −cα4λ4 2 , B22 = +c −(1 + c + α 2 )α5λ5 2 , B33 = +c −(1 + c + α 16 )α6λ6 2 , B44 = −cα4 2λ4 −β2 2, B55 = −(1 + c + α 2 ) α5 2λ5 −β2 2, B66 = −(1 + c + α 16 ) α6 2λ6 −β2 2, B14 = B41 = −c(1 −α4) 2 , B25 = B52 = −(1 + c+α 2 )(1 −α5) 2 , B36 = B63 = −(1 + c+α 16 )(1 −α6) 2 , (76) and rest of the elements Bij = 0 with αi ∈R, λi > 0, i ∈{1, 2, .., 6}; then the following statements (P1)-(P4) are true: (P1) In the absence of uncertainty and attack, i.e. η(x, t) = 0, δ(t) = 0, the residual signal will exponen- tially converge to zero as follows: |r(t)|2 ⩽K1e−K2t |r(0)|2 , (77) where K1 = 2 c( c 2 + ψ0+ψx0 2ψ10 ), and K2 = 2c. (P2) In the presence of uncertainty and attack, i.e. η(x, t) ̸= 0, δ(t) ̸= 0, the residual signal is Input-to-State (ISS) stable with respect to the attack and uncertainty as follows: |r(t)|2 ⩽K3e−K4t |r(0)|2 + K5 sup t⩾0  ∥Da(.)∥2 H |δ(t)|2 + ∥η(., t)∥2 H  , (78) where K3 = 2 c  c 2 + ψ0+ψx0 2ψ10  , K4 = 2(c −λ), K5 = M2 c(c−λ), and M2 = max n c2 2γ ,  1 + c+α 2 2 2γ , (1 + c+α 16 )2 2γ o . (79) 12 (P3) The residual signal satisﬁes the robustness requirement (49) as Z ∞ 0 |r(τ)|2 dτ ⩽β2 1 Z ∞ 0 ∥η(., τ)∥2 H dτ + ϵ, (80) with η(x, t) ̸= 0, δ(t) = 0 where ϵ = c 2ψ 2 10 + ψ 2 0 + ψ 2 x0. (P4) The residual signal satisﬁes the attack sensitivity requirement (50) as Z ∞ 0 |r(τ)|2 dτ ⩾β2 2 Z ∞ 0 ∥Da(., τ)∥2 H |δ(τ)|2 dτ −ϵ, (81) with η(x, t) = 0, δ(t) ̸= 0 where ϵ = c 2ψ 2 10 + ψ 2 0 + ψ 2 x0. Proof. Considering the target system dynamics (52)-(53), we start with the following Lyapunov functional candidate: W(t) = c 2 |ψ(1, t)|2 + 1 2 ∥ψ(., t)∥2 + 1 2 ∥ψx(., t)∥2 . (82) Differentiating W with respect to t along the trajectory of (52)-(53), and applying integration by parts and Cauchy- Schwarz inequality multiple times, we can write the upper bound of ˙W as ˙W ⩽−c2 |ψ(1)|2 −c ∥ψx∥2 −c ∥ψ∥2 + c |δ| |D(1)| |ψ(1)| + |δ| ∥ψ∥∥D∥+ |δ| ∥ψx∥∥Dx∥ +c |θ(1)| |ψ(1)| + ∥ψ∥∥θ∥+ ∥ψx∥∥θx∥. (83) Now, we are ready to present the proofs of the parts separately. Proof of the statement (P1): In the absence of uncertainty and attack, i.e. θ(x, t) = 0, δ(t) = 0, (83) becomes ˙W ⩽−c2 |ψ(1)|2 −c ∥ψx∥2 −c ∥ψ∥2 = −2cW, (84) the solution of which can be written using comparison principle as W(t) ⩽e−2ctW(0). Considering the bounds in assumption 2, we can write W(0) ⩽( c 2 + ψ0+ψx0 2ψ10 ) |ψ(1, 0)|2. Furthermore, by the choice of (82), we have c 2 |ψ(1, t)|2 ⩽W(t). Considering these two facts, and r(t) = ˜u(1, t) = ψ(1, t), we arrive at (77). Proof of the statement (P2): In the presence of uncertainty and attack, i.e. θ(x, t) ̸= 0, δ(t) ̸= 0, we apply the upper bounds from Lemma 6 and re-write (83) as ˙W ⩽−c2 |ψ(1)|2 −c ∥ψx∥2 −c ∥ψ∥2 + c |δ| |Da(1)| |ψ(1)| +  1 + c + α 2  |δ| ∥ψ∥∥Da∥ (85) +  1 + c + α 16  |δ| ∥ψx∥∥Dax∥+ c |η(1)| |ψ(1)| +  1 + c + α 2  ∥ψ∥∥η∥+  1 + c + α 16  ∥ψx∥∥ηx∥. (86) Next, we apply Young’s inequality on the last six terms of right hand side of (86) and get ˙W ⩽−c2 |ψ(1)|2 −c ∥ψx∥2 −c ∥ψ∥2 + λ 2 |ψ(1)|2 + c2 2λ |Da(1)|2 |δ|2 + (1 + c+α 2 )2 2λ ) ∥Da∥2 |δ|2 (87) + λ 2 ∥ψ∥2 + λ 2 ∥ψx∥2 + (1 + c+α 16 )2 2λ ∥Dax∥2 |δ|2 + λ 2 |ψ(1)|2 + c2 2λ |η(1)|2 + λ 2 ∥ψ∥2 (88) + (1 + c+α 2 )2 2λ ∥η∥2 + λ 2 ∥ψx∥2 + (1 + c+α 16 )2 2λ ∥ηx∥2 . (89) ⇒˙W ⩽−2(c −λ)W + M2(∥D∥2 H |δ|2 + ∥η∥2 H). (90) where λ is a constant and M2 is given in (79). Applying comparison principle, the solution of the differential inequality (90) can be written as W(t) ⩽e−2(c−λ)tW(0) + M2 2(c −λ) sup t⩾0  ∥D∥2 H |δ|2 + ∥η∥2 H  . (91) 13 Again, considering the facts W(0) ⩽( c 2 + ψ0+ψx0 2ψ10 ) |ψ(1, 0)|2, c 2 |ψ(1, t)|2 ⩽W(t), and r(t) = ˜u(1, t) = ψ(1, t), we arrive at (78). Proof of the statement (P3): Consider (86) under the condition η(x, t) ̸= 0, δ = 0. The seventh term of right hand side of (86) can be written as: c |η(1)| |ψ(1)| = α1c |η(1)| |ψ(1)| + (1 −α1)c |η(1)| |ψ(1)| , (92) where α1 ∈R is a constant. Furthermore, we apply Young’s inequality on the ﬁrst term of the right hand side of (92) and get c |η(1)| |ψ(1)| ⩽α1cλ1 2 |η(1)|2 + α1c 1 2λ1 |ψ(1)|2 + (1 −α1)c |η(1)| |ψ(1)| , (93) with λ1 > 0. In a similar manner, we can write the upper bounds of the eighth and ninth term of right hand side of (86) as  1 + c + α 2  ∥ψ∥∥η∥⩽  1 + c + α 2 α2λ2 2 ∥ψ∥2 + α2 2λ2 ∥η∥2 + (1 −α2) ∥ψ∥∥η∥  , (94)  1 + c + α 16  ∥ψx∥∥ηx∥⩽  1 + c + α 16 α3λ3 2 ∥ψx∥2 + α3 2λ3 ∥ηx∥2 + (1 −α3) ∥ψx∥∥ηx∥  , (95) with α2, α3 ∈R are constants and λ2, λ3 > 0. Next, applying the upper bounds (93)-(95), we can write the upper bound ˙W ⩽B1 where B1=|ψ(1)|2 −c2+cα1λ1 2  +∥ψ∥2 −c+(1+c+α 2 )α2λ2 2  +∥ψx∥2 −c+(1+c+α 16 )α3λ3 2  +|η(1)|2cα1 2λ1  (96) +∥η∥2 (1+c+α 2 ) α2 2λ2  +∥ηx∥2 (1+c+α 16 ) α3 2λ3  +|ψ(1)||η(1)|(c(1−α1))+∥ψ∥∥η∥((1+c+α 2 )(1−α2)) (97) +∥ψx∥∥ηx∥((1+c+α 16 )(1−α3)). (98) Next, we deﬁne the following metric K1 = Z ∞ 0  |ψ(1)|2 −β2 1 |η(1)|2 −β2 1 ∥η∥2 −β2 1 ∥ηx∥2  dτ. (99) Note that the condition K1 −ϵ ⩽0 is same as the condition (80). Furthermore, we know from (98) that W(∞) −W(0) − Z ∞ 0 B1dτ ⩽0. (100) Hence, proving K1 −ϵ ⩽W(∞) −W(0) − Z ∞ 0 B1dτ, (101) would be sufﬁcient to achieve K1 −ϵ ⩽0. Furthermore, noting W(∞) ⩾0 and W(0) −ϵ ⩽0 with the choice ϵ = c 2ψ 2 10 + ψ 2 0 + ψ 2 x0, we ﬁnd that K1 + Z ∞ 0 B1dτ ⩽0, (102) is a sufﬁcient condition for proving (101). Using (99), we can write the condition (102) as Z ∞ 0  |ψ(1)|2 −β2 1 |η(1)|2 −β2 1 ∥η∥2 −β2 1 ∥ηx∥2 + B1  dτ ⩽0. (103) Finally, we ﬁnd that proving |ψ(1)|2 −β2 1 |η(1)|2 −β2 1 ∥η∥2 −β2 1 ∥ηx∥2 + B1 ⩽0, (104) would be sufﬁcient for proving (103). In summary, proving (104) would automatically satisfy the original robustness con- dition (80). The condition (104) can be expressed as XT 1 AX1 ⩽0 with X1 = [|ψ(1)| , ∥ψ∥, ∥ψx∥, |η(1)| , ∥η∥, ∥ηx∥]T and where A is deﬁned in (75). Consequently, satisfying the LMI A ⩽0 would be sufﬁcient to satisfy the robustness 14 condition (80). Proof of the statement (P4): Consider (86) under the condition η(x, t) = 0, δ(t) ̸= 0. Following the same approach as in (P3), we can write the upper bound ˙W ⩽B2 where B2=|ψ(1)|2 −c2+cα4λ4 2 ! +∥ψ∥2 −c+  1+c+α 2 α5λ5 2 ! +∥ψx∥2 −c+  1+c+α 16 α6λ6 2 ! +|δ|2|Da(1)|2 cα4 2λ4 ! +|δ|2∥Da∥2  1+c+α 2  α5 2λ5 ! +|δ|2∥Dax∥2  1+c+α 16  α6 2λ6 ! +|ψ(1)||δ||Da(1)|c(1−α4) +∥ψ∥|δ|∥Da∥  1+c+α 2  (1−α5)+∥ψx∥|δ|∥Dax∥  1+c+α 16  (1−α6), (105) with α4, α5, α6 ∈R are constants and λ4, λ5, λ6 > 0. Next, we deﬁne the following metric K2 = Z ∞ 0  |ψ(1)|2 −β2 2 |δ|2 |Da(1)|2 −β2 2 |δ|2 ∥Da∥2 −β2 2 |δ|2 ∥Dax∥2  dτ. (106) Note that the condition K2 + ϵ ⩾0 is same as the condition (81). Next, following a similar approach as in (P3), we ﬁnd that K2 − Z ∞ 0 B2dτ ⩾0, (107) is a sufﬁcient condition for proving (81) and consequently, proving |ψ(1)|2−β2 2|δ|2|Da(1)|2−β2 2|δ|2∥Da∥2−β2 2|δ|2∥Dax∥2−B2⩾0, (108) would be sufﬁcient for satisfying (81). The condition (108) can be expressed as XT 2 BX2 ⩾0 with X2 = [|ψ(1)| , ∥ψ∥, ∥ψx∥, |δ| |Da(1)| , |δ| ∥Da∥, |δ| ∥Dax∥]T and where B is deﬁned in (76). Consequently, satisfying the LMI B ⩾0 would be sufﬁcient to satisfy the sensitivity condition (81). ■ Remark 7. For design purposes, one can solve the Linear Matrix Inequalities (LMIs) (74) along with the condition c > λ > 0. The parameters αi ∈R and λi > 0 can be utilized as tuning parameters. To account for the presence of uncertainty in the system, we modify the attack detection logic (5) as: r(t) ⩽ϵth ⇒No attack, r(t) > ϵth ⇒Attack. where ϵth is a pre-deﬁned threshold. There are multiple ways one can compute such threshold, for example, ϵth = maxδ=0,η̸=0 r(t). 5 SIMULATION CASE STUDIES In this section, we perform simulation studies to illustrate the performance of attack detection algorithms. We consider battery under cyber-attack. Cyber-attacks on electric vehicle or power-grid batteries can have severe implications [38]. Speciﬁcally, we focus on cyber-attacks that attempt manipulate battery current to cause over-temperature conditions. We adopt the battery model from [24]. Under the assumption sufﬁcient boundary insulation and applying transformation of time and spatial variables, the battery model can be written as: Tt(x, t) = Txx(x, t) + D(x)q(t) + D(x)δ(t), (109) Tx(0, t) = 0, Tx(1, t) = 0, (110) where T(x, t) is the distributed battery temperature; D(x) = K, ∀x ∈[0, 1] where the constant K depends on battery dimension and thermal properties; the measured output is the boundary temperature y(t) = T(1, t); q(t) is the nominal heat generated within the battery due to current ﬂow and δ(t) is the attack signal that modiﬁes the heat generation by corrupting battery current. The distributed state response under constant current discharge and nominal conditions (i.e. no attack and no uncertainty) are shown in Fig. 1. Next, we present the following case studies to illustrate the ideas presented in the previous sections. In the ﬁrst study, we illustrate the existence of a stealthy cyber-attack in the sense of Deﬁnition 1. We compare two cases: (i) Case 1: where the system is subjected to initial condition T(x, 0) = 290K and a short pulse type stealthy cyber-attack δ(t) applied at t = 0. (ii) Case 2: where the system is subjected to initial condition T(x, 0) = 298K and no cyber-attack has been applied. Note that the initial conditions fall within reasonable range for both cases and the response under attack resembles the response under nominal scenario. The responses for these cases are shown in Fig. 2. Hence, by Deﬁnition 1, the applied cyber-attack possesses stealthiness. 15 Figure 1: Distributed battery temperature response under constant current scenario. Figure 2: Comparison of boundary temperature response with and without attack. In the next study, we illustrate the performance of the attack detection algorithm discussed in Section IV. We illustrate the results in ψ-domain. The states of the PDE observer were initialized incorrectly to verify the convergence. We consider three scenarios: (i) without any uncertainty and attack, (ii) with uncertainty and no attack, and (iii) with uncertainty and attack. The uncertainty is chosen as N(0, 1) distributed spatially. The attack signal is chosen as δ(t) = 0.0015(1 −e−0.0003(t−Ta)) with Ta = 10s being the attack injection time. The threshold ϵth has been chosen according to Remark 7. The responses of the residual signal under these three scenarios are shown in Fig. 3. As proved in Theorem 3, the residual signal (i) exponentially converges to zero in the absence of any attack or uncertainty, (ii) exhibits Input-to-State (ISS) stability in the presence of attack and/or uncertainty, (iii) remains bounded within the threshold in the absence of an attack, and (iv) crosses the threshold 2 s after the attack occurrence thereby detecting the attack. In summary, the statements of Theorem 3 have been veriﬁed by this case study. Figure 3: Residual responses under uncertainty and attack. 6 CONCLUSION In this paper, we have explored security of DPCPSs modelled by linear parabolic PDEs with boundary measurements. The focus is on cyber-attacks that affect the actuation channel. First, we consider the detectability aspects of such cyber-attacks. Subsequently, we analyze existence of stealthy attacks under a special class of algorithms utilizing system model and measurements. Next, we develop a design framework that explicitly considers stability, and the trade-off 16 between robustness and attack sensitivity in its design phase. As a future work, we plan to extend the framework to n-dimensional PDE systems. References [1] A. Teixeira, I. Shames, H. Sandberg, and K. H. Johansson, “A secure control framework for resource-limited adversaries,” Automatica, vol. 51, pp. 135–148, 2015. [2] F. Pasqualetti, F. Dörﬂer, and F. Bullo, “Attack detection and identiﬁcation in cyber-physical systems,” IEEE Transactions on Automatic Control, vol. 58, no. 11, pp. 2715–2729, 2013. [3] M. J. Lighthill and G. B. Whitham, “On kinematic waves ii. a theory of trafﬁc ﬂow on long crowded roads,” Proceedings of the Royal Society of London. Series A. Mathematical and Physical Sciences, vol. 229, no. 1178, pp. 317–345, 1955. [4] M. Parashar, J. S. Thorp, and C. E. Seyler, “Continuum modeling of electromechanical dynamics in large-scale power systems,” IEEE Transactions on Circuits and Systems I: Regular Papers, vol. 51, no. 9, pp. 1848–1858, 2004. [5] A. Armaou and M. A. Demetriou, “Robust detection and accommodation of incipient component and actuator faults in nonlinear distributed processes,” AIChE Journal, vol. 54, no. 10, pp. 2651–2662, 2008. [6] M. Demetriou and A. Armaou, “Dynamic online nonlinear robust detection and accommodation of incipient component faults for nonlinear dissipative distributed processes,” International Journal of Robust and Nonlinear Control, vol. 22, no. 1, pp. 3–23, 2012. [7] N. H. El-Farra and S. Ghantasala, “Actuator fault isolation and reconﬁguration in transport-reaction processes,” AIChE Journal, vol. 53, no. 6, pp. 1518–1537, 2007. [8] S. Ghantasala and N. H. El-Farra, “Robust actuator fault isolation and management in constrained uncertain parabolic {PDE} systems,” Automatica, vol. 45, no. 10, pp. 2368 – 2373, 2009. [9] Z. Yao and N. H. El-Farra, “Data-driven actuator fault identiﬁcation and accommodation in networked control of spatially-distributed systems,” in 2014 American Control Conference, pp. 1021–1026, June 2014. [10] A. Baniamerian and K. Khorasani, “Fault detection and isolation of dissipative parabolic pdes: Finite-dimensional geometric approach,” in 2012 American Control Conference (ACC), pp. 5894–5899, June 2012. [11] R. M. G. Ferrari, T. Parisini, and M. M. Polycarpou, “An algebraic approach for robust fault detection of input-output elastodynamic distributed parameter systems,” in Control Conference (ECC), 2013 European, pp. 2445–2452, July 2013. [12] H. Ferdowsi and S. Jagannathan, “Fault diagnosis of a class of distributed parameter systems modeled by parabolic partial differential equations,” in 2014 American Control Conference, pp. 5434–5439, June 2014. [13] Demetriou, Michael A., “A model-based fault detection and diagnosis scheme for distributed parameter systems: A learning systems approach,” ESAIM: COCV, vol. 7, pp. 43–67, 2002. [14] M. A. Demetriou, K. Ito, and R. C. Smith, “Adaptive monitoring and accommodation of nonlinear actuator faults in positive real inﬁnite dimensional systems,” IEEE Transactions on Automatic Control, vol. 52, pp. 2332–2338, Dec 2007. [15] J. Deutscher, “Fault detection for linear distributed-parameter systems using ﬁnite-dimensional functional ob- servers,” International Journal of Control, vol. 89, no. 3, pp. 550–563, 2016. [16] M. Ghanavati, A. Chakravarthy, and P. P. Menon, “Analysis of automotive cyber-attacks on highways using partial differential equation models,” IEEE Transactions on Control of Network Systems, vol. 5, no. 4, pp. 1775–1786, 2018. [17] J. Reilly, S. Martin, M. Payer, and A. M. Bayen, “Creating complex congestion patterns via multi-objective optimal freeway trafﬁc control with application to cyber-security,” Transportation Research Part B: Methodological, vol. 91, pp. 366–382, 2016. [18] M. A. Demetriou, “Detection of communication attacks on spatially distributed systems with multiple intercon- nected actuator/sensor pairs,” in 2018 IEEE Conference on Decision and Control (CDC), pp. 2896–2901, IEEE, 2018. [19] T. Roy and S. Dey, “Secure trafﬁc networks in smart cities: Analysis and design of cyber-attack detection algorithms.” to appear in the Proceedings of 2020 American Control Conference. 17 [20] H. Fawzi, P. Tabuada, and S. Diggavi, “Secure estimation and control for cyber-physical systems under adversarial attacks,” IEEE Transactions on Automatic control, vol. 59, no. 6, pp. 1454–1467, 2014. [21] X. Jin, W. M. Haddad, and T. Yucelen, “An adaptive control architecture for mitigating sensor and actuator attacks in cyber-physical systems,” IEEE Transactions on Automatic Control, vol. 62, no. 11, pp. 6058–6064, 2017. [22] D. I. Urbina, J. A. Giraldo, A. A. Cardenas, N. O. Tippenhauer, J. Valente, M. Faisal, J. Ruths, R. Candell, and H. Sandberg, “Limiting the impact of stealthy attacks on industrial control systems,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pp. 1092–1105, 2016. [23] P. Guo, H. Kim, L. Guan, M. Zhu, and P. Liu, “Vcids: Collaborative intrusion detection of sensor and actuator attacks on connected vehicles,” in International Conference on Security and Privacy in Communication Systems, pp. 377–396, Springer, 2017. [24] M. Muratori, M. Canova, and Y. Guezennec, “A spatially-reduced dynamic model for the thermal characterisation of li-ion battery cells,” International Journal of Vehicle Design, vol. 58, no. 2-4, pp. 134–158, 2012. [25] T. W. Rees, T. B. Fisher, P. J. Bruce, J. A. Merriﬁeld, and M. K. Quinn, “Experimental characterization of the hypersonic ﬂow around a cuboid,” Experiments in Fluids, vol. 61, no. 7, pp. 1–22, 2020. [26] H. Li, Y. Xu, and J. Zhou, “A free boundary problem arising from dcis mathematical model,” Mathematical Methods in the Applied Sciences, vol. 40, no. 10, pp. 3566–3579, 2017. [27] L. Evans, Partial Differential Equations. Graduate studies in mathematics, American Mathematical Society, 2010. [28] J. K. Hunter, “Notes on partial differential equations.” https://www.math.ucdavis.edu/~hunter/pdes/ pde_notes.pdf, 2014. [29] F. B. Hildebrand, Methods of Applied Mathematics. Dover, 2 ed., 1956. [30] J. W. Lee and R. B. Guenther, Partial Differential Equations of Mathematical Physics and Integral Equations. Dover, 1996. [31] P. C. Hansen, “Perturbation bounds for discrete tikhonov regularisation,” Inverse Problems, vol. 5, pp. L41–L44, aug 1989. [32] M. J. Balas and C. R. Johnson, “Adaptive control of distributed parameter systems: The ultimate reduced-order problem,” in Decision and Control including the Symposium on Adaptive Processes, 1979 18th IEEE Conference on, vol. 2, pp. 1013–1017, Dec 1979. [33] Y. Li, H. Fang, and J. Chen, “Anomaly detection and identiﬁcation for multiagent systems subjected to physical faults and cyber attacks,” IEEE Transactions on Industrial Electronics, 2019. [34] D. H. Stamatis, Failure mode and effect analysis: FMEA from theory to execution. Quality Press, 2003. [35] J. L. Wang, G.-H. Yang, and J. Liu, “An lmi approach to h-index and mixed h−/h∞fault detection observer design,” Automatica, vol. 43, no. 9, pp. 1656–1665, 2007. [36] E. D. Sontag and Y. Wang, “New characterizations of input-to-state stability,” IEEE Transactions on Automatic Control, vol. 41, no. 9, pp. 1283–1294, 1996. [37] M. Krstic and A. Smyshlyaev, Boundary control of PDEs: A course on backstepping designs, vol. 16. Siam, 2008. [38] S. Dey and M. Khanra, “Cybersecurity of plug-in electric vehicles: Cyber attack detection during charging,” IEEE Transactions on Industrial Electronics, 2020. 18