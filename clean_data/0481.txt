arXiv:2502.08742v1 [eess.SY] 12 Feb 2025 ”Active Neighbour”: A Novel Monitoring Model for Cyber-Physical Systems Vasileios Apostolidis-Afentoulis Department of Applied Informatics, School of Information Sciences, University of Macedonia, 156 Egnatia Str., GR-54636 Thessaloniki, Greece vapostolidis@uom.edu.gr Abstract Over the past decade, advancements in technol- ogy have enabled Cyber-Physical Systems (CPS) to monitor sensor networks through various method- ologies. However, these developments have concur- rently introduced signiﬁcant security challenges, ne- cessitating robust protective measures. As a result, securing CPS has become a critical area of research. This paper reviews existing CPS monitoring models and introduces an innovative role-based monitoring model designed to meet contemporary security re- quirements. The proposed model is implemented within the COOJA simulator of the Contiki OS and evaluated under three distinct security conﬁgura- tions. Preliminary results demonstrate promising outcomes, although further comprehensive testing is ongoing. Keywords: IoT, Cyber-Physical Systems, Secu- rity, Monitoring, Contiki OS 1 Introduction This paper examines the monitoring challenges associated with Cyber-Physical Systems (CPS), an essential domain in research and development (R&D) [18]. Ensuring the security of CPS moni- toring procedures is paramount for preserving net- worked computational resources and managing the multi-physical interactions inherent to CPS. Since 2010, the European Research and Industrial Com- munity has identiﬁed CPS as a key paradigm for the future of complex systems. A crucial aspect of CPS monitoring is security, as any vulnerabilities may lead to operational dis- ruptions, particularly in real-time environments. If a monitoring system lacks adequate security mea- sures, fundamental properties such as conﬁdential- ity, privacy, and data integrity are at risk [10]. Ef- fective CPS monitoring requires the capability to aggregate data from multiple network nodes and present it in a structured and meaningful way to system administrators. 1.1 Monitoring and Speciﬁcation of CPS The eﬀective monitoring of CPS does not solely rely on centralized decision-making and informa- tion management centers; instead, it is fundamen- tally dependent on distributed sensor networks [19]. The dynamic nature of certain cyber threats limits the eﬀectiveness of traditional management centers in detecting and mitigating attacks in real time, particularly when sensor data is compromised. In scenarios where human intervention is not feasible due to environmental constraints, alternative pro- tective mechanisms must be implemented. In large-scale CPS deployments, complex inter- actions exist between semi-autonomous entities, ne- cessitating the application of well-deﬁned software principles and architectural abstractions to facili- tate system composition and management. Over the past 15 years, research eﬀorts have fo- cused on integrating monitoring capabilities into networks and systems. Three primary approaches have emerged: polling-based models, trust manage- ment models, and community-based models. Each model employs distinct evaluation techniques for CPS monitoring; however, many fail to incorporate adequate security mechanisms in their communica- tion protocols, which can negatively impact system stability and performance. To address these limitations, we propose an in- novative role-based monitoring model known as the ”Active Neighbour” (AN) model. This model in- troduces two novel security-enhancing mechanisms and is structured around a dynamic role hierar- chy. By ensuring eﬃciency, security, and authen- tication, AN strengthens communication robust- Page 1 ness. The dynamic role-assignment feature main- tains continuous network operation, while its adap- tive and protective capabilities provide enhanced resilience against cyber threats. The integrated se- curity mechanisms within the AN model improve both the safety and speed of communications. The remainder of this paper is structured as fol- lows. Section 2 provides an in-depth review of ex- isting CPS monitoring models. Section 3 presents the ”Active Neighbour” model, detailing its archi- tectural design and implementation. Section 4 dis- cusses a case study along with the results of simu- lated experiments. Finally, Section 5 concludes the paper and outlines directions for future research. 2 Related Work The scientiﬁc community has proposed several models for monitoring CPS to ensure their proper operation. These models can be broadly catego- rized into three main types: 1. Polling Models: They periodically query the network’s monitoring services to assess the sta- tus of individual nodes. 2. Trust Management Models: They facili- tate the exchange and sharing of trust and rep- utation information based on nodes’ behavior within the network, such as their communica- tion and cooperation with other nodes. 3. Community Models: They assign roles to participating nodes, each governed by distinct policies that deﬁne permitted and prohibited actions. This approach enables the formation of mission-oriented, dynamically self-managing communities tailored to application-speciﬁc re- quirements. 2.1 Polling Models Big Brother (BB) [12] was the ﬁrst monitoring sys- tem to use the Internet as an interconnection point for users. This system allows users to gain a holis- tic view of network operations in a simpliﬁed man- ner. BB employs a client-server model and incorpo- rates both push and pull data transmission mech- anisms. Clients periodically send status updates to the monitoring server, while the network is as- sessed by polling all available monitoring services. Results are displayed in a central management unit, with each reference including an expiration date to indicate its validity. Typically, network monitor- ing models require dedicated software installation, limiting administrative ﬂexibility. A distinguishing feature of BB is its web-based interface, which pro- vides real-time status visualization accessible from any internet-connected device. Zenoss [1] is an open-source platform that utilizes the Simple Network Management Protocol (SNMP) [6, 21] to monitor networks, servers, applications, and services. The primary advantage of Zenoss is its open architecture, which allows for extensive customization. Since SNMP serves as the underly- ing protocol, the notiﬁcation mechanism supports both polling and traps. Additionally, Zenoss en- ables the storage of historical data, facilitating per- formance analysis and insight into past operations. 2.2 Trust Management Models The Agent-Based Trust and Reputation Manage- ment (ATRM) model [2] is designed for wireless sensor networks (WSNs), where trust and reputa- tion are managed locally with minimal overhead in terms of messaging and time delays. However, as mobile agents traverse the network and execute on remote nodes, they must be initiated by trusted en- tities. Another agent-based trust model for WSNs [4] employs a watchdog mechanism to observe node behavior and broadcast trust ratings. Sensor nodes receive these ratings from agent nodes, which are re- sponsible for trust information collection, process- ing, and dissemination. The reputation-based scheme DRBTS [20] en- ables beacon nodes (BNs) to monitor each other and provide trustworthiness information to sensor nodes (SNs) based on a voting mechanism. To vali- date a BN’s information, a sensor node must receive trust votes from at least half of its common neigh- bors. BTRM-WSN [7] is a bio-inspired trust and rep- utation model for WSNs that identiﬁes the most reliable path to the most reputable node oﬀer- ing a particular service. Each node maintains a trace—analogous to pheromones in biological sys- tems—for each neighbor. The CONFIDANT model [3] extends routing protocols with a reputation-based mechanism to isolate nodes that deviate from expected behavior. Each node monitors the behavior of its next-hop neighbor, with trust relationships and routing de- cisions based on observed, experienced, or reported routing and forwarding actions. Page 2 The SORI scheme [9] incentivizes packet forward- ing and discourages selﬁsh behavior. A node’s rep- utation is quantiﬁed using objective measures, and reputation propagation is secured via a hash chain- based authentication mechanism. 2.3 Community Models The abstract model [17] for policy-based collabora- tion relies on task-oriented roles within sensor com- munities. Each role is associated with two policy classes: 1. Obligations: Deﬁne adaptive actions that a role must perform in response to speciﬁc events (e.g., device failures or contextual changes). 2. Authorizations: Deﬁne permitted or pro- hibited actions between roles. The frame- work supports a uniﬁed speciﬁcation mecha- nism for both application-speciﬁc and manage- ment roles. Node role assignment is constrained to ensure integrity, conﬁdentiality, and availability. Cardi- nality constraints specify the minimum and max- imum number of nodes per role, while separation- of-duty constraints prevent conﬂicting role assign- ments. This role-based model explicitly distributes management responsibilities across community par- ticipants, enhancing scalability and robustness by avoiding single points of failure. 2.4 Comparison of the Existing Models Both Zenoss and BB have been extensively used in industry. Due to their wide applicability and ease of installation, they remain integral to many monitoring frameworks [8]. Comparative analysis indicates that Zenoss is superior to BB for several reasons. Notably, Zenoss supports IPv6, which is crucial for managing the vast number of devices in a CPS. Furthermore, Zenoss leverages SNMP fea- tures to collect remote device information, making it a robust monitoring solution. Trust management models play a crucial role in safeguarding large-scale CPSs against malicious at- tacks. These mechanisms foster cooperation among distributed entities, identify unreliable sources, and aid decision-making. The ATRM model mitigates network congestion by optimizing communication latency. DRBTS is well-suited for dense networks and can adapt to speciﬁc security needs. BTRM- WSN meets CPS requirements for security, scalabil- ity, and resource eﬃciency, consistently delivering robust and accurate results in dynamic, variable, and static networks. Even when malicious servers exceed 60%, reliable server selection remains above 90%, with a standard deviation of approximately 7.5%. The CONFIDANT model eﬀectively detects, warns, and responds to data forwarding and rout- ing attacks. While introducing slight communica- tion delays, it remains scalable and performs well even when 60% of CPS nodes are compromised. The SORI model eﬃciently identiﬁes and addresses problematic nodes using three key mechanisms: 1. Objective quantiﬁcation of node reputation. 2. Secure reputation propagation via an authen- tication hash chain. 3. Localized reputation propagation to minimize communication delays. Community models facilitate autonomous system collaboration through dynamic community forma- tion. Their structural models, task distribution, and communication frameworks oﬀer promising av- enues for designing large-scale CPSs. Architectural models abstract sensor functions, enhancing inter- operability and reuse. Collaborative CPS architec- tures can retrospectively implement new structures, streamlining large-scale CPS composition. While polling, trust management, and commu- nity models oﬀer distinct advantages, each has lim- itations. Polling models are vulnerable to node cloning, leading to false results. Trust management models enhance security but remain insuﬃcient in addressing emerging threats. Community models rely on predeﬁned hierarchies, limiting adaptabil- ity. Given evolving security threats [16, 13] and the emergence of new vulnerabilities [14, 11], more eﬀective and secure models are required to meet contemporary CPS security demands. 3 Proposed Scheme – The “Active Neighbour” 3.1 Key Features of the Model The proposed model, “Active Neighbour,” intro- duces dynamic role-assignment procedures to en- hance the security of sensor networks and their communications. It builds upon the foundational principles of the “Community Sensor Model based on Roles” while incorporating three critical exten- sions: Page 3 1. Dynamic Role Assignment: This feature reinforces self-conﬁguration mechanisms by al- lowing hierarchical role adaptations based on network conditions and node requirements. For instance, a sensor initially assigned an ad- ministrative role may be dynamically down- graded to a lower-level role, thereby mitigating security threats. By ensuring that privileged nodes are not static targets, this mechanism strengthens network resilience against attacks. 2. Time-based One-Time Authentication Algorithm (TOTA): Unlike the Time-based One-Time Password Algorithm (TOTP) [15], the TOTA mechanism employs a sequence of rapid authentication challenges based on pre- established network knowledge. This method ensures secure communications both between individual sensors and between sensors and the broader system. 3.2 Advantages The “Active Neighbour” model oﬀers several ad- vantages: 1. Adaptive Role Assignment: Sensor roles are dynamically adjusted to align with network requirements, ensuring continuous monitoring while preserving operational integrity. 2. Enhanced Security: The model proactively defends against malicious attacks through real-time monitoring by “active neighbours.” Threats targeting speciﬁc nodes are mitigated via continuous updates to the central manage- ment unit. 3. Secure Communication: The incorporation of TOTA ensures robust authentication mech- anisms, reducing vulnerabilities in sensor-to- sensor and sensor-to-system communications. 3.3 Architectural Design The architectural framework of the “Active Neigh- bour” model (Figure 1) consists of three primary entities: the Central Management Unit (CMU), High-Rank Nodes (HRNs), and Low-Rank Nodes (LRNs). 1. Central Management Unit (CMU): The CMU holds the highest level of authority, re- sponsible for creating and assigning roles, gen- erating cryptographic keys, and maintaining hardware identiﬁers for network nodes. Once initial assignments are made, the CMU tran- sitions to a supervisory role, intervening only when anomalies are detected. 2. High-Rank Nodes (HRNs): These nodes perform frequent monitoring tasks, assuming various roles such as administrators, policy en- forcers, and authenticity providers. In addition to their supervisory duties, HRNs participate in general network communications. 3. Low-Rank Nodes (LRNs): Although LRNs primarily execute tasks as directed, they serve a crucial role as the network’s foundational structure. These nodes facilitate communica- tion, process environmental data, and support overall network operations. The functional responsibilities of HRNs are clas- siﬁed as follows: 1. Administrator: Periodically broadcasts sta- tus messages, assigns roles to new nodes, and maintains network topology awareness. 2. Policy Applier: Ensures compliance with network policies by monitoring and reassigning roles as needed. Policy enforcement dictates permissible actions and mandatory procedures for addressing network issues. 3. Authenticity Provider: Veriﬁes the identity of nodes attempting to join the network, ensur- ing secure community membership. All inter-entity communications (as depicted in Figure 1) are encrypted and authenticated using Digital Signature Algorithm (DSA) and the IPSec protocol with 256-bit ECCDH (Elliptic Curve Cryptography Diﬃe–Hellman), providing security equivalent to RSA-3072. The CMU, as the high- est authority, can request data streams on demand or in response to communication failures. Infor- mational messages propagate through HRNs and LRNs to maintain network synchronization. HRNs autonomously monitor LRNs and notify the net- work of any malfunctioning nodes, ensuring opera- tional continuity. 3.4 Dynamic Role-Assignment Algo- rithm In order to dynamically assign roles to the sensors of the CPS’s network, a sequence of steps is fol- lowed. This dynamic process not only gives the Page 4 Figure 1: Active Neighbour’s architectural design. model its adaptive character but also enhances the security of the underlying communications. The details of this dynamic role-assignment procedure are outlined in Algorithm 1. In brief, the nodes are periodically queried by the CMU and, according to their role type and status are treated accordingly. The “queries” are in the form of request/response messages that get exchanged between the commu- nicating nodes. The role assignment procedure is triggered whenever a node is not working properly (for the sake of simplicity, it is currently examined whether it is dropping packets). Role assignment follows a structured selection process, prioritizing candidates based on network topology. Each node pings its peers, and response times are evaluated to determine the optimal candi- date for reassignment. If the selected node becomes unresponsive, the next best candidate is chosen, en- suring robust network operation. 3.5 Network Instability Scenarios In cases where communication or monitoring qual- ity is compromised, the “Active Neighbour” model issues speciﬁc warnings and informational mes- sages, enabling prompt corrective actions. 3.5.1 Fire Sensor Notiﬁcations When a ﬁre sensor experiences any of the following issues: 1. Loss of a single data packet triggers a warning. 2. Loss of three consecutive data packets results in an alert. Upon detecting three consecutive packet losses, the following steps are taken: 1. The network issues an informational message indicating the removal of the ﬁre sensor due to communication failure. 2. A diagnostic mechanism initiates periodic test data transmissions to the removed sensor at one-minute intervals. 3.5.2 Administrator Sensor Notiﬁcations If the administrator sensor experiences: 1. A single data packet loss, a warning is gener- ated. 2. Three consecutive packet losses, an alert is is- sued, triggering role reassignment to the next suitable sensor in the hierarchy. Upon three consecutive packet losses, the follow- ing steps are executed: 1. An informational message is generated, con- ﬁrming the removal of the administrator sensor due to communication failure. 2. A notiﬁcation speciﬁes the newly designated administrator sensor. 3. The previous administrator sensor undergoes a reassignment process and is designated as a low-rank sensor upon network reentry. 4 Case Study and Obtained Results 4.1 Experimental Setup To evaluate the ”Active Neighbour” model, experi- ments were conducted in a simulation environment. Speciﬁcally, the COOJA simulator of Contiki OS v2.7 was utilized [5]. Contiki OS is an open-source operating system designed for resource-constrained devices. The objective was to create a sensor net- work within a CPS to monitor climate conditions in a forest environment. The experiments were run on a system equipped with an Intel i7 4770 processor and 8 GB of RAM. To align the hierarchical structure of the archi- tectural model with the experimental setup, the fol- lowing mapping was established: in the case of the High-Responsibility Node (HRN), an administra- tor role was assigned to a designated node, whereas Low-Responsibility Nodes (LRNs) were represented by ﬁre sensors. Three simulation proﬁles were designed to assess the model under diﬀerent conditions: Page 5 Algorithm 1 Active Neighbor’s Dynamic Role Assignment in CPS Start Specify the number of sensors that comprise the CPS. Detect the sensor with the highest processing power and assign it an administrator’s role. Inspect the sensors’ function. if all sensors operate properly then All roles remain the same Terminate else Begin dynamic role assignment process end if Inspect the function of the sensor with the administrator’s role. if administrator sensor operates properly then Begin inspection of the function of the remaining sensors. else Assign the administrator’s role to the next sensor in hierarchy. Transmit informational message to the rest of the sensors. end if Inspect the function of the remaining sensors. if all sensors operate properly then Move to the next step else Locate malfunctioning sensor from its neighbors. Transmit informational message about the change. end if Re-inspect the operation of the sensors. if CPS network operates properly then Terminate else Go back to Step 4 end if End 4.2 Case 1: Plain “Active Neigh- bour” In this scenario, WiSMote-type nodes were de- ployed to create the virtual network. Each node is represented as a numbered circle, corresponding to its identiﬁer. As illustrated in Fig. 2, the node with identiﬁer 1 was assigned the role of administra- tor (HRN) and is depicted in green. The remaining nodes, with identiﬁers ranging from 2 to 7, were designated as ﬁre sensors (LRNs) and are shown in yellow. The blue arrows indicate communication links between CPS nodes. 4.3 Case 2: “Active Neighbour” with Message Authentication In this case, the security of the ”Active Neighbour” model was enhanced through the implementation of the Digital Signature Algorithm (DSA) to ensure message authenticity. This authentication mecha- nism provides a security level comparable to RSA- 1024. Upon algorithm initiation, the number of nodes was speciﬁed (six in this scenario). The nodes were initialized, and their roles were assigned based on the network topology. The administrator node re- quired high processing power for its assignment. Following this, all network nodes were authorized by the Central Management Unit (CMU), which in- volved registering the nodes’ unique hardware iden- tiﬁers in a database. Subsequently, each communication data packet was authenticated using a combination of the nodes’ IDs and the DSA. The system then per- formed an operational inspection of the sensors. If all nodes functioned correctly, the algorithm termi- nated, maintaining the assigned roles. Otherwise, the dynamic role assignment process was triggered. During this process, the administrator node was in- Page 6 Figure 2: Implementation of the “Active Neigh- bour” model in Contiki OS. spected ﬁrst. If it remained functional, the inspec- tion proceeded to the other nodes. If the adminis- trator node malfunctioned, the role was reassigned to the next hierarchical node, and an informational message was transmitted. The inspection process continued for the remaining nodes, and the overall network functionality was evaluated. If the net- work operated as expected, the algorithm termi- nated; otherwise, it reverted to the node inspection phase before concluding. 4.4 Case 3: “Active Neighbour” with IPSec and Message Au- thentication In this scenario, security measures were further re- inforced by integrating the IPSec protocol alongside DSA. For key establishment, Elliptic Curve Cryp- tography Diﬃe–Hellman (ECCDH) was employed, providing a security level equivalent to RSA-3072. At the onset, the number of nodes was set to seven. Nodes were initialized and assigned roles ac- cording to the network topology, with the adminis- trator node requiring high processing power. As in the previous case, all network nodes underwent au- thorization by the CMU, including the registration of their unique hardware IDs. Each communication data packet was then authenticated and encrypted using a combination of the nodes’ IDs, DSA, and IPSec. The subsequent steps involved sensor functional- Figure 3: Comparison of the monitoring cases. ity veriﬁcation. If all nodes operated correctly, the algorithm terminated while maintaining assigned roles. Otherwise, the dynamic role assignment pro- cess was activated, beginning with an inspection of the administrator node. If the administrator node was functional, the process proceeded to inspect the remaining nodes. If the administrator node failed, its role was reassigned to the next hierar- chical node, accompanied by an informational mes- sage. The overall network functionality was then assessed. If the network functioned correctly, the algorithm terminated; otherwise, it reverted to the node inspection phase before completion. 4.5 Evaluation Figure 3 summarizes the experimental results. The ﬁndings indicate that utilizing DSA alone for mes- sage authentication introduces minimal data over- head to network communications. This approach is suitable for scenarios where conﬁdentiality is not a primary concern. Conversely, the combined use of IPSec and DSA signiﬁcantly increases data over- head, nearly quadrupling the overhead compared to the plain model and tripling it relative to the DSA-only conﬁguration. 5 Conclusions This study introduced an innovative monitoring model tailored for Cyber-Physical Systems. The primary feature of the proposed model is its capa- bility to dynamically assign roles to CPS nodes, en- abling the formation of autonomous CPS communi- ties. Ongoing and future work involves an extensive evaluation of the model, focusing on computational and data overhead, as well as energy consumption, through the analysis of various performance param- eters. Page 7 References [1] Michael Badger. Zenoss Core Network and System Monitoring. Packt Publishing, 2008. [2] A. Boukerch, L. Xu, and K. EL-Khatib. Trust- based security for wireless ad hoc and sen- sor networks. Computer Communications, 30(11):2413–2427, 2007. Special issue on se- curity on wireless ad hoc and sensor networks. [3] Sonja Buchegger and Jean-Yves Le Boudec. Performance analysis of the conﬁdant protocol. In Proceedings of the 3rd ACM International Symposium on Mobile Ad Hoc Networking & Computing, MobiHoc ’02, page 226–236, New York, NY, USA, 2002. Association for Com- puting Machinery. [4] Haiguang Chen, Huafeng Wu, Xi Zhou, and Chuanshan Gao. Agent-based trust model in wireless sensor networks. In Eighth ACIS In- ternational Conference on Software Engineer- ing, Artiﬁcial Intelligence, Networking, and Parallel/Distributed Computing (SNPD 2007), volume 3, pages 119–124, 2007. [5] A. Dunkels, B. Gronvall, and T. Voigt. Con- tiki - a lightweight and ﬂexible operating sys- tem for tiny networked sensors. In 29th Annual IEEE International Conference on Local Com- puter Networks, pages 455–462, 2004. [6] Mark Fedor, Martin Lee Schoﬀstall, James R. Davin, and Dr. JeﬀD. Case. Simple Network Management Protocol (SNMP). RFC 1157, may 1990. [7] F´elix G´omez M´armol and Gregorio Mart´ınez P´erez. Providing trust in wire- less sensor networks using a bio-inspired technique. Telecommunication Systems, 46(2):163–180, Feb 2011. [8] Udit Gupta. Monitoring in IOT enabled de- vices. CoRR, abs/1507.03780, 2015. [9] Qi He, Dapeng Wu, and P. Khosla. Sori: a secure and objective reputation-based incen- tive scheme for ad-hoc networks. In 2004 IEEE Wireless Communications and Network- ing Conference (IEEE Cat. No.04TH8733), volume 2, pages 825–830 Vol.2, 2004. [10] Aaron Kane, Thomas Fuhrman, and Philip Koopman. Monitor based oracles for cyber- physical system testing: Practical experience report. In 2014 44th Annual IEEE/IFIP In- ternational Conference on Dependable Systems and Networks, pages 148–155, 2014. [11] Chenyang Lu, Abusayeed Saifullah, Bo Li, Mo Sha, Humberto Gonzalez, Dolvara Gunati- laka, Chengjie Wu, Lanshun Nie, and Yixin Chen. Real-time wireless sensor-actuator net- works for industrial cyber-physical systems. Proceedings of the IEEE, 104(5):1013–1024, 2016. [12] Sean MacGuire. Big brother: a web-based unix system and network monitor. Sys Admin, 6(3):43–54, March 1997. [13] Fei Miao, Quanyan Zhu, Miroslav Pajic, and George J. Pappas. Coding schemes for securing cyber-physical systems against stealthy data injection attacks. IEEE Transactions on Con- trol of Network Systems, 4(1):106–117, 2017. [14] Robert Mitchell and Ing-Ray Chen. Model- ing and analysis of attacks and counter de- fense mechanisms for cyber physical systems. IEEE Transactions on Reliability, 65(1):350– 358, 2016. [15] David M’Raihi, Johan Rydell, Mingliang Pei, and Salah Machani. TOTP: Time-Based One- Time Password Algorithm. RFC 6238, May 2011. [16] Abdullah Yasin Nur and Mehmet Engin Tozal. Defending cyber-physical systems against dos attacks. In 2016 IEEE International Confer- ence on Smart Computing (SMARTCOMP), pages 1–3, 2016. [17] Alberto Schaeﬀer-Filho, Emil Lupu, Morris Sloman, Sye-Loong Keoh, Jorge Lobo, and Seraphin Calo. A role-based infrastructure for the management of dynamic communities. In David Hausheer and J¨urgen Sch¨onw¨alder, ed- itors, Resilient Networks and Services, pages 1–14, Berlin, Heidelberg, 2008. Springer Berlin Heidelberg. [18] Erwin Schoitsch, Francoise Lamnabhi- Lagarrigue, and Maria Domenica Di Benedetto. Cyber-physical systems (in- troduction to the special theme). ERCIM News, 97:6–7, 2014. [19] Jianhua Shi, Jiafu Wan, Hehua Yan, and Hui Suo. A survey of cyber-physical sys- tems. In 2011 International Conference on Page 8 Wireless Communications and Signal Process- ing (WCSP), pages 1–6, 2011. [20] Avinash Srinivasan, Joshua Teitelbaum, and Jie Wu. Drbts: Distributed reputation-based beacon trust system. In 2006 2nd IEEE In- ternational Symposium on Dependable, Auto- nomic and Secure Computing, pages 277–283, 2006. [21] William Stallings. SNMP, SNMPv2, and CMIP: the practical guide to network manage- ment. Addison-Wesley Longman Publishing Co., Inc., USA, 1993. Page 9