1 Characterizing Cyber Attacks against Space Systems with Missing Data: Framework and Case Study Ekzhin Ear, Jose L. C. Remy, Antonia Feffer, and Shouhuai Xu Department of Computer Science University of Colorado Colorado Springs {eear, jcastano, afeffer2, sxu}@uccs.edu Abstract—Cybersecurity of space systems is an emerging topic, but there is no single dataset that documents cyber attacks against space systems that have occurred in the past. These incidents are often scattered in media reports while missing many details, which we dub the missing-data problem. Nevertheless, even “low- quality” datasets containing such reports would be extremely valuable because of the dearth of space cybersecurity data and the sensitivity of space systems which are often restricted from disclosure by governments. This prompts a research question: How can we characterize real-world cyber attacks against space systems? In this paper, we address the problem by proposing a framework, including metrics, while also addressing the missing- data problem, by “extrapolating” the missing data in a principled fashion. To show the usefulness of the framework, we extract data for 72 cyber attacks against space systems and show how to extrapolate this “low-quality” dataset to derive 4,076 attack technique kill chains. Our findings include: cyber attacks against space systems are getting increasingly sophisticated; and, success- ful protection against on-path and social engineering attacks could have prevented 80% of the attacks. Index Terms—Space cybersecurity, satellite security incidents, cybersecurity metrics, cyber threat model, ATT&CK, SPARTA I. INTRODUCTION Space systems, such as satellites, spacecraft, and space stations, are man-made objects that orbit the planet. They have become an underpinning of modern society because their missions include services that support many land, air, mar- itime, and cyber operations, such as Positioning, Navigation, and Timing (PNT) for the global stock market [1], Satellite Communications (SATCOM) for global beyond-line-of-sight (BLOS) terrestrial voice and data requirements, and remote sensing for space domain awareness and planetary defense (e.g., detecting and deflecting large debris from hitting Earth). The space domain is interwoven with and enabled by the cy- ber domain, with real-time cyber-physical systems comprising the space segment. Consequently, cyber attacks can affect space systems, as evidenced by numerous space-related security incidents [2]–[5]. Space incidents have occurred as early as 1977, with the hijacking of a satellite’s audio transmission to broadcast the attacker’s own message [4]. In 1998, a U.S.- German RoSat (sensing satellite) experienced a malfunction that led to the satellite turning its x-ray sensor towards the sun, causing permanent damage. While it is debatable whether this incident was caused by cyber attacks, the cyber attack at the Goddard Space Flight Centre, where the RoSat is controlled, shows that cyber attacks can cause physical damage to space systems [6]. Although cyber threats against space systems have become a reality, there is no systematic understanding of cyber threats against space systems, likely due to the lack of data. In this paper, we initiate the study on the problem of characterizing real-world cyber attacks against space systems with missing data. Ideally, we should have well documented attacks with significantly detailed descriptions (e.g., through digital forensics) to serve as input to this characterization study. Unfortunately, cyber attacks, especially against space systems, are rarely well-documented owing to a variety of reasons (e.g., sensitivity), which explains why we must embrace the fact of missing data. The problem is important to deepen our understanding of cyber attacks against space systems, which are not yet understood, and to gain insights into making future space systems secure. Our contributions. We make two technical contributions. First, we propose a novel framework to characterize real- world cyber attacks against space systems with missing data. The framework has three features: (i) It is general because it can accommodate both cyber attacks against space systems that occurred in the past and attacks that may occur in the future. (ii) It is practical because it offers approaches to deal with missing details of attacks, which is often the case with real-world datasets. At a high level, our idea is to leverage the Aerospace Space Attack Research and Tactic Analysis (SPARTA) [7] and the MITRE Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK) [8] frameworks to ex- trapolate the missing details of attacks. (iii) It offers two metrics for measuring attack consequence and attack sophistication, where each metric is a hierarchy of sub-metrics. These metrics may also be of independent value. Second, we apply the framework to characterize the cyber attacks that are described in a dataset, which is prepared by this study and is, to our knowledge, the first comprehensive dataset of cyber attacks against space systems. The dataset is extracted from four publicly available datasets documenting space-related incidents, which are not geared toward cyber attacks. We manually extract 72 cyber attacks against space systems. Since many details of these 72 attacks are missing, we extrapolate them into 72 attack tactic chains (i.e., one attack tactic chain per attack) and 4,076 attack technique chains; we will make this dataset publicly available. This allows us to draw a number of insights, such as: attacks against space systems Copyright © 2023 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works. arXiv:2309.04878v1 [cs.CR] 9 Sep 2023 can be effectively mitigated by hardening the ground segment; average-sophisticated cyber attacks can be effective against space systems, but attacks are getting increasingly sophisticated because of the increasing employment of defense; successful protection against on-path and social engineering attacks could have prevented 80% of the attacks. Paper outline. Section II describes the framework. Section III presents a case study. Section IV discusses limitations. Sec- tion V reviews prior studies. Section VI concludes the paper. II. FRAMEWORK A. Framework Requirements and Overview To analyze cyber attacks against space systems, we need a framework that satisfies the following requirements. • Requirement 0: The framework is general enough to accommodate all of the past cyber attacks (i.e., the ones that have been observed) and possible future attacks against space systems. • Requirement 1: The framework is practical by accom- modating real-world datasets with missing attack details. • Requirement 2: The framework provides metrics for characterizing cyber attacks against space systems. To address Requirement 0, we propose a system model that can be leveraged to describe past and future attacks. To address Requirement 1, we propose methods to “extrapolate” a given dataset to incorporate hypothetical but plausible missing de- tails. To address Requirement 2, we define attack consequence and attack sophistication metrics. Prepare Dataset Attack Characterization Metrics Extrapolated Kill Chain Dataset Space System Model Attack Consequence Attack Sophistication Threat-Centric Taxonomies Raw Cyber Attack Datasets Leveraging Metrics to Answer Research Questions Fig. 1. The framework. Fig. 1 highlights the framework, which has four major components: (i) designing the system model; (ii) preparing the dataset; (iii) defining metrics to quantitatively characterize cyber attacks; and (iv) leveraging the metrics to answer research questions. B. System Model We observe that space systems often consist of four seg- ments: space, link, ground, and user [4], [9], [10]. This prompts us to propose the system model described in Fig. 2. In the space segment, there are multitudes of space systems (e.g., satellites, spacecraft, and space stations). A space system Bus System facilitates tracking, telemetry, and command re- quirements (TT&C) and typically contains the following com- ponents [11], [12]: electrical power, attitude control, commu- nication, command and data handling, propulsion, and thermal control. The Payload of space systems include communication (e.g., antennas and transmitters for relaying voice and data), navigation (e.g., Global Navigation Satellite System (GNSS) receivers for position and timing), scientific experiment (e.g., telescopes and spectrometers for research), remote sensing (e.g., sensors and cameras for terrestrial environmental moni- toring), and national security (e.g., military equipment). Bus System Payload Electrical Power Attitude Control Commu- nication Cmd & Data Propul- sion Thermal Control Communication Navigation Scientific Remote Sensing Defense Ground Station Tracking Ranging Trans- mission Recep- tion Mission Control Telemetry Command Analysis and Support Data Processing Center Mission Analysis Payload Process User Segment User Transmission Reception Processing Remote Terminal Network Access Software Access Link Segment Space Segment Ground Segment Fig. 2. System model showing the four segments that comprise space systems. In the ground segment, Ground Stations contain the hard- ware and software to transmit and receive RF communication signals, as well as tracking and ranging space systems. Mission Control centers process telemetry data to assess the health of space systems, send commands to control space systems, conduct analyses to plan orbital maneuvers and assess conjunc- tions, and manage other aspects of space system operations. Data Processing Centers conduct deeper analyses of space system missions and process payload data. Remote Terminals provide a light-weight software stack and network connectivity to other elements of the ground segment. The user segment is geographically dispersed across conti- nents and oceans, often requiring space system services around the clock. GNSS is an example of such a service used across the land, air, and maritime domains in automobiles, airplanes, and ships across the world. The user segment typically receives data directly from GNSS satellites while satellite communications (SATCOM) users also transmit traffic to satellites. The link segment is concerned with inter- (e.g., satellite to ground) and intra-segment (satellite to satellite) data connec- tions. Satellites can communicate by passing data through the link segment with other satellites, ground stations, as well as directly to user terminals, potentially via its payload (e.g., for voice and data transfer) or bus (i.e., for TT&C). It possesses a variety of physical and especially electromagnetic properties across the spectrum. For our purpose, it suffices to consider the link segment from a cyber perspective that is concerned with the data that transits the link segment, rather than the physical properties of the link segment. C. Preparing the Dataset 1) Properties of Ideal Datasets: We inherit the following terms from ATT&CK [13]: attack tactic specifies what an attacker wants to achieve; attack technique specifies how an attacker achieves the objective of an attack tactic; attack procedure is an instantiation of an attack technique. Inspired by ATT&CK, we propose the following variant concepts: space cyber kill chain is a vector containing attack tactics, attack techniques, and attack procedures that may traverse segments of a space system to achieve attack objectives against the space system; and, space attack campaign is an instantiation of a space cyber kill chain to achieve certain attack objectives. Note that attack procedure is to attack technique what space attack campaign is to space cyber kill chain. It would be ideal that a dataset of cyber attacks against space systems possesses the following properties: • Comprehensiveness: This property deals with the coverage of a dataset, namely the aspects that are important for describing cyber attacks against space systems. Ideally, a dataset should contain every phase of attack including attack tactics, techniques, and procedures. • Accuracy: The details about attack tactics, techniques, and procedures described in a dataset should be accurate, leaving no room for ambiguity or misinterpretation. This property is also hard to guarantee because descriptions in real-world datasets are often ambiguous. • Zero Missing Data: This property means that every aspect of an attack that should be described in a dataset is indeed described in the dataset. The accuracy property implies that these descriptions should be accurate. Unfortunately, real-world datasets miss a lot of due data. 2) Addressing the Problem of Missing Data: We propose leveraging threat-centric cybersecurity taxonomies, such as SPARTA [7] and ATT&CK [8] to populate the missing data (e.g., attack tactics and attack techniques). To illustrate this idea, we describe one approach to take the best of both SPARTA and ATT&CK, which are chosen because they col- lectively contain details of attacker tactics, techniques, and procedures against space systems. Nevertheless, our framework can incorporate various other threat-centric taxonomies. Our use of SPARTA and ATT&CK is novel because we use them to guide us in populating the missing attack tactics and attack techniques of cyber attacks against space systems in a principled fashion. We use them together to create more holistic space cyber kill chains that can encompass all segments of space systems. This is important because ATT&CK focuses on enterprise systems (e.g., IT networks in the ground segment) while the majority of SPARTA elements focus on the space segment. This is non-trivial because SPARTA and ATT&CK do not provide an explicit approach to compile attack tactics into feasible space cyber kill chains. For this purpose, we define the following concepts: • Objective activity: an activity conducted by an attacker to achieve one attack goal from the cyber attack. This aligns to the SPARTA and ATT&CK tactics of Exfiltration and Impact and their associated attack techniques. • Milestone activity: an activity that directly progresses a space cyber kill chain towards a particular objective ac- tivity (as defined above). We categorize the SPARTA and ATT&CK tactics of Initial Access, Execution, Privilege Escalation, and Command & Control and their associated attack techniques as milestone activities. • Enabling activity: an activity that establishes or modifies a current state of a system environment to facilitate a mile- stone activity. We categorize the SPARTA and ATT&CK tactics of Resource Development, Persistence, Defense Evasion, Lateral Movement, and Credential Access as enabling activities. • Information discovery activity: an activity that provides necessary information to support an enabling or milestone activity. We categorize the SPARTA and ATT&CK tactics of Reconnaissance, Discovery, and Collection as informa- tion discovery activities. • Milestone block: a vector comprised of information dis- covery, enabling, and milestone activities that compre- hensively describes the requisite activities to accomplish a milestone activity. Milestone blocks are the building blocks for composing space cyber kill chains. At a high level, these concepts will be used to construct space cyber kill chains as follows: objective activities are constructed first to represent the sketch of space cyber kill chains; the sketch is enriched with lower-level milestone activities, and then further enriched with milestone blocks consisting of the lowest level enabling activities and information discovery activities. Our method has three steps. First, we extract all of the objective activities, in terms of attack tactics and attack techniques, of the cyber attacks from a given cyber attack dataset. If this is not possible for an attack because of missing data, we use our domain expertise to identify the most probable (i.e., hypothetical but most plausible) ones for the attack. For example, if the dataset does not give an explicit description of any objective activity but does describe that an attacker laterally moves into a sensitive development network, we can identify the objective activity as “exfiltrating proprietary secrets.” Then, we arrange the resulting objective activities in chronological order. Second, we identify all of the milestone activities for each objective activity and arrange them in chronological order. If there is any gap because of missing data, we use our domain expertise to populate hypothetical but plausible additional milestone activities accordingly. For example, if the cyber attack data discusses the attacker escalating to administrator privileges to establish a command & control (C2) channel via a web shell to exfiltrate sensitive data, then we can assume the attacker compromised a public-facing web application as an initial access milestone activity. Third, we construct a milestone block for each milestone activity by identifying all of the associated enabling and infor- mation discovery activities. We compensate for missing data by reasoning the requirements for each milestone block. For example, if an attacker established a C2 channel to an internal server that endured for months, we can assume the attacker conducted a reconnaissance information discovery activity to identify the network routing required and a persistence enabling activity to facilitate C2 beaconing. The resulting attack tactics and techniques constitute space cyber kill chains. By applying this method to space cyber attack datasets, we obtain a space cyber kill chain dataset. D. Defining Metrics to Characterizing Attacks We define two metrics to characterize cyber attacks against space systems: attack consequence and attack sophistication, with each being a multi-dimensional vector which can be aggregated into a single number if desired. 1) Attack Consequence Metric: Given that space systems have four segments and that attack consequences may be manifested at some or all of the four segments, we define a vector of vectors, denoted by (⃗sS,⃗gG, ⃗uU,⃗lL), to represent the attack consequences to the space segment (S), ground segment (G), user segment (U), and link segment (L), respectively. The 4 vectors are defined as follows. Consequence to space segment (⃗sS). We define the attack consequence to a Space Segment S as ⃗sS = (⃗sBS,⃗sPL), where vector ⃗sBS denotes the consequence to the Bus System (BS) and vector ⃗sPL denotes the consequence to the Payload (PL). • We define ⃗sBS = (sBS,1, . . . , sBS,6) as a vector of attack consequences to the 6 components of the Bus System: electrical power (sBS,1), attitude control (sBS,2), com- munication (sBS,3), command & data (sBS,4), propulsion (sBS,5), and thermal control (sBS,6). We define sBS,j ∈ [0, 1], 1 ≤j ≤6, as the degree of the functionality (i.e., availability) of the corresponding component being de- graded because of the attack in question, where sBS,j = 0 (or 1) means the functionality is 0% (or 100%) degraded. • We define ⃗sPL = (sPL,1, . . . , sPL,5) as a vector of attack consequences to the 5 payload components: communi- cation (sPL,1), navigation (sPL,2), scientific application (sPL,3), remote sensing (sPL,4), and national security (sPL,5), with sPL,j ∈[0, 1] in the same fashion as sBS,j. The preceding definition of ⃗sS has several salient features, which also apply to the subsequent metrics corresponding to the other segments. First, we differentiate “defining what to measure” from “how to measure what we need to measure.” The present study addresses the former. Note also that our def- initions remain valid when considering the inter-dependencies between different segments. Concerning the latter, it would be ideal that measurements of these metrics are provided to analysts for purposes such as our present study; or alterna- tively, there is a community-wide agreement on the degrees of degradation mentioned above. In the absence of both, one can use their own domain expertise to estimate these metrics. Second, we make the number of components specific to the system model described in Figure 2 (e.g., 6 components in the Bus System) to make the definitions easier to follow. The definitions can trivially generalize to accommodate an arbitrary number of components. Third, the “fine-granularity” of ⃗sBS and ⃗sPL makes them suitable to compare the consequences of multiple attacks and to make statements like “Attack 1 is more powerful than Attack 2.” Fourth, if desired and permissible to lose nuances from the fine granularity, one can aggregate the vector metrics into a single number. For example, ⃗sBS can be aggregated into ¯sBS via some mathematical function f, namely ¯sBS = f(sBS,1, . . . , sBS,6), where f can be for instance the (weighted) algebraic average function which makes cyberse- curity sense because they deal with the same property (i.e., availability). We can similarly aggregate ¯sBS and ¯sPL into a single number. Consequence to ground segment (⃗gG). We define the attack consequence to a Ground Segment G as ⃗gG = (⃗gGS,⃗gMC, ⃗gDPC,⃗gRT), where ⃗gGS is the consequence to the Ground Station (GS), ⃗gMC is the consequence to Mission Control (MC), ⃗gDPC is the consequence to the Data Processing Center (DPC), ⃗gRT is the consequence to the Remote Terminal (RT). • We define ⃗gGS = (gGS,1, . . . , gGS,4) as a vector of consequences to the 4 components of the Ground Station: tracking (gGS,1), ranging (gGS,2), transmission (gGS,3), and reception (gGS,4), where gGS,j ∈[0, 1], 1 ≤j ≤4, and 0 (1) means 0% (100%) functionality degradation. • We define ⃗gMC = (gMC,1, gMC,2, gMC,3) as a vector of consequences to the 3 components of the Mission Control: telemetry processing (gMC,1), commanding (gMC,2), and analysis and support (gMC,3), where gMC,j ∈[0, 1], 1 ≤ j ≤3, in the same fashion as gGS,j. • We define ⃗gDPC = (gDPC,1, gDPC,2) as a vector of conse- quence to the 2 components of the Data Processing Center: mission analysis (gDPC,1) and payload processing (gDPC,2), where gDPC,j ∈[0, 1] as similiar to gGS,j. • We define ⃗gRT = (gRT,1, gRT,2) as a vector of con- sequence to the components of the Remote Terminal: network access (gRT,1) and software access (gRT,2), where gRT,j ∈[0, 1] as with gGS,j, Note that ⃗gG has the same salient features as ⃗sS. Consequence to user segment (⃗uU). We define the attack consequence to a User Segment U as ⃗uU = (u1, u2, u3), whose elements respectively measure the consequence to components of U: transmission (u1), reception (u2), and processing (u3), with uj ∈[0, 1], 1 ≤j ≤3, as with sBS,j. Note that ⃗uU has the same salient features as ⃗sS or specifically ⃗sBS. Consequence to link segment (⃗lL). We define the attack con- sequence to a Link Segment as ⃗lL = ({⃗lS}, {⃗lG}, {⃗lSS}, {⃗lGG}, {⃗lSG}, {⃗lSU}, {⃗lGU}, {⃗lUU}), where the elements respectively correspond to a set of links within a space system affected by an attack, within a ground wide-area network (WAN), between two space systems, between two ground WANs, between a Space Segment and a Ground Segment, between a Space Segment and a User Segment, between a Ground Segment and a User Segment, and between two users. We further define: • ⃗lS = (lS,C, lS,I, lS,A) as the consequences to a link between the Bus System and the Payload, where lS,C, lS,I, lS,A ∈ [0, 1] are respectively the consequence to the confidential- ity, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lG = (⃗lGS,MC,⃗lGS,DPC,⃗lGS,RT,⃗lMC,DPC,⃗lMC,RT,⃗lDPC,RT) as the consequences to links of components in a Ground Segment, where ⃗lGS,MC = (lGS,MC;C, lGS,MC;I, lGS,MC;A) ∈[0, 1]3 are respectively the consequence to the confi- dentiality, integrity, and availability of the link between a Ground Station (GS) and a Mission Control (MC), with 0 (1) meaning 0% (100%) degradation. The other elements of ⃗lG are defined in the same fashion. • ⃗lSS = (⃗lSS,C,⃗lSS,I,⃗lSS,A) as the consequences to a link be- tween two space systems, where ⃗lSS,C,⃗lSS,I,⃗lSS,A ∈[0, 1]3 are respectively the consequence to the confidentiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lGG = (⃗lGG,C,⃗lGG,I,⃗lGG,A) as the consequences to a link between two ground WANs, where ⃗lSS,C,⃗lSS,I,⃗lSS,A ∈ [0, 1]3 are respectively the consequence to the confiden- tiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lSG = (⃗lSG,C,⃗lSG,I,⃗lSG,A) as the consequences to a link between a Space Segment and a Ground Segment, where ⃗lSG,C,⃗lSG,I,⃗lSG,A ∈[0, 1]3 are the consequence to the confidentiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lSU = (⃗lSU,C,⃗lSU,I,⃗lSU,A) as the consequences to a link between a Space Segment and User Segment, where ⃗lSU,C,⃗lSU,I,⃗lSU,A ∈[0, 1]3 are the consequence to the confidentiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lGU = (⃗lGU,C,⃗lGU,I,⃗lGU,A) as the consequences to a link between a Ground Segment and User Segment, where ⃗lSS,C,⃗lSS,I,⃗lSS,A ∈[0, 1]3 are the consequence to the confidentiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. • ⃗lUU) = (⃗lUU,C,⃗lUU,I,⃗lUU,A) as the consequences to a link between two users, where ⃗lUU,C,⃗lUU,I,⃗lUU,A ∈[0, 1]3 are the consequence to the confidentiality, integrity, and availability assurance of the link, with 0 (1) meaning 0% (100%) degradation. Note that lL has the same salient features as ⃗sS except how metrics may be aggregated. For example, it would not make good cybersecurity sense to aggregate (lS,C, lS,I, lS,A) via a (weighted) algebraic average because confidentiality, integrity, and availability metrics describe different properties. One may suggest to aggregate them via 1−[(1−lS,C)(1−lS,I)(1−lS,A)], which is reminiscent of the aggregation of Common Vulnera- bility Scoring System (CVSS) scores [14]. However, this does not appear sound as this aggregation function appears rooted in Probability Theory, which however does not apply here because the events, even if (lS,C, lS,I, lS,A) can be interpreted as probabilities, are not independent (e.g., the three assurances may be degraded at will by an attacker, rather than degrading independently of each other). Accordingly, we define: Definition 1 (Attack Consequence): We define the attack consequence of a cyber attack against space systems as  ∪S{⃗sS}, ∪G {⃗gG}, ∪U {⃗uU}, ∪L {⃗lL}  , where the union is over all the Space Segments (S), Ground Segments (G), User Segments (U), and Link Segments (L) that are affected by the attack. 2) Attack Sophistication Metric: We define this metric to characterize how sophisticated a cyber attack against a space system is, through the lens of attack tactics and attack tech- niques. Suppose for each cyber attack we extrapolate it into a set of n space cyber kill chains, denoted by SKC = {SKC1, . . . , SKCn}, where SKCi (1 ≤i ≤n) denotes the ith space cyber kill chain that is possibly associated with the cyber attack in question (when there is missing data describing the attack). Suppose SKCi is associated with a set of u attack tactics, denoted by TAi = {TAi,1, . . . , TAi,u}, and with a set of v attack techniques, denoted by TEi = {TEi,1, . . . , TEi,v}, where TAi,j and TEi,j are respectively associated with a given sophistication score αTAi,j and αTEi,j. For SKCi, we define its tactic sophistication as the maximum element among the ele- ment of TAi, namely max(TAi) = max({αTAi,1, . . . , αTAi,u}), and define its attack technique sophistication as max(TEi) = max({αTEi,1, . . . , αTEi,v}), which respectively correspond to the most sophisticated attack tactic and attack technique used by the attacker. Now we are ready to define: Definition 2 (Attack Sophistication): For an attack described by a set of hypothetical but plausible space cyber kill chains SKC = {SKC1, . . . , SKCn}, we define its possible high- est sophistication as vector (αTA+, αTE+), where αTA+ = max({max(TA1), . . . , max(TAn)}) which corresponds to the most sophisticated attack tactic that is used among the possible kill chains, and αTE+ = max({max(TE1), . . . , max(TEn)}) which corresponds to the most sophisticated attack technique that is used among the possible kill chains. We define its possible lowest sophistication as vec- tor (αTA−, αTE−), where αTA− = min({max(TA1), . . . , max(TAn)}) which corresponds to the least sophisticated attack tactic that is necessary for the attack to succeed, and αTE−= min({max(TE1), . . . , max(TEn)}) which cor- responds to the least sophisticated attack technique that is necessary for the attack to succeed. Note that Definition 2 can be easily extended to define the metric of, for example, possible average sophistication. E. Leveraging the Metrics to Answer Research Questions Given a dataset of cyber attacks against space systems, the metrics defined above can be leveraged to specify interesting research questions, such as: (i) What is the attack consequence of each cyber attack against space systems that has occurred in practice? Is there any trend exhibited by the attacks in terms of their attack consequence? (ii) What is the attack sophistication of each cyber attack against space systems that has occurred in practice? Is there any trend exhibited by the attacks in terms of their attack sophistication or attack entry points? III. CASE STUDY We apply the framework to characterize cyber attacks against space systems based on a specific dataset of real-world space cyber incidents. A. Preparing a Dataset 1) Raw Datasets: In search of publicly available datasets, we queried “satellite incidents”, “space attack data”, “space incidents data” in Google Scholar (with no limiting parameters) which returned 45 papers; we reviewed the top 50 results of a Google Search of “satellite, space, incidents, attack, dataset”; and we consulted with industry practitioners for viable datasets. Consequently, there are only four publicly available datasets that contain information about space incidents [2]–[5], which will be referred to as raw datasets. They span four decades (1977-2019): 70 incidents reported in [2]; 112 in [3]; 59 in [4]; and 1,847 in [5]. However, most incidents described in these raw datasets are not about cyber attacks against space systems (e.g., incidents related to solar flare anomalies). Thus, we use domain expertise to manually extract the incidents by identifying those related to cyber attacks. This leads to a dataset of 72 cyber attack incidents, among which 65 are extracted from three sources [2]–[4] that substantially overlap with each other, and 7 are extracted from [5]. We refer to this resulting dataset as the raw cyber attack dataset. The (cyber attack) incidents are reported using different descriptions. Three datasets [2], [3], [5] describe incidents in terms of: (i) year of incident occurrence; (ii) category of the attack / incident (e.g., jamming); (iii) attack target (e.g., the USA-193 recon satellite); (iv) attacker identification (e.g., nation-state); (v) narrative of facts concerning the incident, which are all brief; (vi) high-level attack objective (e.g., state- espionage); and, (vii) source references such as news articles reporting the incident. The fourth dataset [4] only provides (i), (ii), (v), and (vii). Even so, they all miss some data. Consequently, it is difficult to gauge the veracity of the 72 attacks described in the raw cyber attack dataset as there is a lack of information across all segments related to the space systems involved in the attacks to gain ground-truth about what actually transpired in these incidents. For example, in the RoSat incident, a report claims causation between the cyber intrusion of the Goddard Space Flight Centre and the satellite’s subsequent destructive maneuver [4], [6], [15], [16]. However, an interview with a scientist on the RoSat project refutes this causation [17], which another source resonates [18]. 2) Extrapolating Raw Data with Possible Missing Infor- mation: To make the raw cyber attack dataset suitable for our research, we address this missing-data problem manually, which is possible because there are only 72 cyber attacks. As described in the framework, we leverage SPARTA and ATT&CK to populate the missing data and construct attack tactic chains and attack technique chains, as follows. We begin by reviewing each incident’s narrative to construct a chronological vector of events and actions from both the attacker and the defender, because the defense can inform us of the necessary actions of the attacker. We review each incident’s sources referenced and conduct our own search for additional details concerning the incident and add the new findings to our chronological vector of events. At least 25% of the incidents contained sources that provided contradicting details of the associated events. When this occurred, we favored the accounts that made the most cybersecurity sense and provided the most details as this aligns more with the objective of the present study. We also consider the other attributes of the incident in the dataset, e.g., a nation-state actor versus a private actor, when characterizing our vector of events. Then, we correlate the chronological vector of events to SPARTA and ATT&CK tactics and techniques to build a preliminary attack tactic chain and attack technique chain. For example, a source for the RoSat incident describes the use of phished account credentials to gain access to the ground station; this attack tactic can be mapped to the Initial Access tactic within the milestone activities category with the corresponding Valid Accounts: Local (T1078.003) technique. It is the case for all 72 of the incidents that this chain is incomplete. We populate missing attack tactics by selecting objective activities of attack tactics (defined in Section II-C2) according to the context provided in the raw cyber attack data, and by making plausible assumptions about the system based on our domain expertise (e.g., cybersecurity hygiene, defensive posture, and network architecture). Accordingly, we add plau- sible but missing milestone activities and blocks to support the objective activities. The resulting series of tactics constitutes an attack campaign. We repeat this step to create multiple attack campaign scenarios by modifying our assumptions (e.g., services running with elevated privileges do not require the attacker to employ the privilege escalation tactic and hence decreases the number of milestone activities required). This means that each attack will be extrapolated into multiple hypothetical but possible attack campaigns. For example, one attack campaign may involve gaining initial access, privi- lege escalation, and lateral movement while a second attack campaign can progress straight from initial access to lateral movement because of the exploited service running as root. We populate missing attack techniques by leveraging the attack campaigns extrapolated from an attack as each campaign describes the attack from beginning to end. We leverage our domain expertise to first identify hypothetical cyber threat actors for the campaign and then hypothetical but plausible attack techniques for each attack tactic according to the attack procedures in the ATT&CK matrix for the particular threat actors [19]. In this process, we further consider the affinity of details in the raw cyber attack data to particular ATT&CK or SPARTA techniques. For example, given that data confirms RoSat attackers used FTP bounce as an Exploit for Defense Evasion (ATT&CK technique T1211) [6], it is plausible to determine that the subsequent attack tactic and technique would be Reconnaissance and Active Scanning (T1595), respectively. 3) Generating Extrapolated Kill Chain Dataset: We con- struct hypothetical but plausible space cyber kill chains for each attack by leveraging the populated attack tactics and techniques according to the constructed attack campaign mentioned above. For example, an attack campaign we re-constructed for the RoSat incident contains 14 ATT&CK or SPARTA attack tactics, 9 of which come from the raw cyber attack data, each with one associated attack technique per the reported details. Of the 5 extrapolated attack tactics, we associate each with different choices of extrapolated attack techniques, ranging from 2 to 6 extrapolated techniques. Consequently, we populate 1,296 hypothetical but plausible kill chains corresponding to all the combinations. Impact Execution Initial Access Compromise Gnd System (PER-0003) Modify On-Board: Attitude (EX-0012.08) Disruption (IMP-0002) Destruction (IMP-0005) Lateral Movement Defense Evasion Reconnaissance Phishing for Info (T1598) Wordlist Scanning (T1595.003) Valid Accounts: Local (T1078.003) Exploit for Defense Evasion (T1211) Remote Services (T1021) Persistence Privilege Escalation Lateral Movement Reconnaissance Reconnaissance Valid Accounts: Default (T1078.001) Exploit of Remote Services (T1210) Gather Info: Net Typology (T1590.004) Active Scanning (T1595) Create . . . Systemd Service (T11543.002) SPARTA or ATT&CK Tactic SPARTA technique mapped to actual event ATT&CK technique mapped to actual event Technique mapped to synthesized event Fig. 3. One example kill chain (out of the 1,296 hypothetical but plausible chains) we constructed via our extrapolation for the RoSat 1998 attack. Fig. 3 depicts one example of these kill chains constructed for the RoSat incident. If we follow the attack tactic chain, we see at a high level that the attackers conducted a thorough reconnaissance to gain initial access to a particular system at a ground station. They then conducted defense evasion and further reconnaissance to enable lateral movement deeper into the networks where they conducted further reconnaissance to laterally move into a position to affect the space segment. There they escalated their privileges to establish persistence on the network and enable execution of their cyber payloads to ultimately impact the RoSat satellite and destroy its x-ray sensing device. Following the attack technique chain would provide us more details on how these tactics could have been accomplished. We organize the resulting hypothetical and plausible space cyber kill chains into what we call the Kill Chain Table for each attack. There are 4,076 space kill chains in total. We will make this table publicly available. B. Characterizing Cyber Attacks We analyzed the 72 cyber attacks, divided into 8 categories: 25 jamming incidents, 17 Computer Network Exploitation (CNE) incidents, 16 hijacking incidents, 4 control incidents, 3 Denial-of-Service (DoS) incidents, 3 eavesdropping incidents, 1 theft-loss incident and 3 spoofing incidents. It is somewhat surprising to observe that 11 (15%) attacks involved social engineering attacks, especially phishing. This means that cyber social engineering attacks are a threat to space cybersecurity. We also observe that 71% of the attacks fall into three related categories: political, state espionage, and criminal. C. Leveraging the Metrics to Answer Research Questions 1) Attack Consequence Analysis: We leverage Definition 1, our space system model, our raw cyber attack dataset, and our extrapolated kill chain dataset to holistically consider the attack consequence of each cyber attack in our dataset, namely in terms of the cyber attack’s consequence to the space, ground, user, and link segments. For each cyber attack, we apply our domain expertise to assess the attack consequence for each segment by assigning a score between 0 and 1 from least to most consequential. Fig. 4 illustrates that attack consequence for the space segment is generally low (i.e., 0.4 or below) with less than 15% scoring 0.8 or higher: 5 jamming, 3 control, 1 theft, and 1 DOS attacks. The 1998 RoSat incident scored the highest as it demonstrated the ability to physically destroy an asset in the space segment via cyber means. Fig. 4 also depicts a contrasting trend for the link segment. Two-thirds of the cyber attacks sustained an attack consequence score of 0.6 or greater. Of the most consequential attacks (0.9 or greater): 8 were hijacking and 2 were eavesdropping. The Russian Turla Hacking Group attained the highest score of 1.0 for their 2007 abuse of the link segment via asynchronous satellite internet connections to enable their global C2 reach. 0 0.2 0.4 0.6 0.8 1 1977 1982 1987 1992 1997 2002 2007 2012 2017 Space Segment Link Segment Fig. 4. Attack consequence in the space and link segments for the 72 attacks over time. Fig. 5 shows almost 80% of the incidents have an attack consequence of 0.6 or greater for the ground segment while over 50% of the incidents score 0.6 or greater against the user segment. These incidents cover all the categories of attacks, including those intended to compromise other segments, e.g., jamming and control attacks. This reveals how vital it is to protect the ground and user segments in order to protect the other segments in the space system model. 0 0.2 0.4 0.6 0.8 1 1977 1982 1987 1992 1997 2002 2007 2012 2017 Ground Segment User Segment Fig. 5. Attack consequence in the ground and user segments for the 72 attacks over time. How can we prioritize the hardening of space system segments and components to mitigate the damage caused by cyber attacks? We observe that 16 of 17 CNE and 3 of 4 control attacks possessed an attack consequence score of 0.6 or greater for the ground segment. Further, the extrapolated kill chain dataset reveals the victims’ potentially weak security hygiene, e.g., default credentials, and unpatched public facing application vulnerabilities. This leads to the following insight: Insight 1: CNE incidents can be mitigated by prioritizing hardening measures within the ground segment. 2) Attack Sophistication Analysis: There are 14 attack tac- tics and 79 attack techniques in the extrapolated space kill chains corresponding to the 72 attacks. For the 14 attack tactics, we manually score each from 0 to 1 considering that 0.5 is the average sophistication required to accomplish an attack tactic. For example, we score the Initial Access tactic as 0.5 because the majority of successful cyber attacks should gain initial access to its target. We assign a score of 0.8 or higher for the tactics requiring high sophistication. For example, the Defense Evasion tactic is scored at 0.9 as it requires additional effort and more advanced capabilities. For the 79 attack techniques, we assign the sophistication score of each while bearing in mind whether the score should be less than, the same as, or higher than that of the associated attack tactic. Phishing is more commonplace and may require little technical capabilities when compared to other Initial Access techniques, and hence receives a score of 0.3. We then compute attack sophistication according to Definition 2. 0.4 0.5 0.6 0.7 0.8 0.9 1 1975 1980 1985 1990 1995 2000 2005 2010 2015 2020 Hijacking Jamming Control CNE DOS Eavesdropping Theft-Loss Spoofing Fig. 6. Attack tactic sophistication of the 72 attacks over time. Fig. 6 depicts the possible highest sophistication of the 72 attacks via αTA+, while noting that several plots overlap and hide other plots from view. We observe that hijacking attacks consistently scored 0.5, with one exception. In 2007, the Russian Turla Hacking Group’s employment of the C2 tactic (ATT&CK ID TA0011) by leveraging SATCOM connections scored 0.8, which we consider as high sophistication. Jamming attacks also consistently scored 0.5 except for four attacks that attained a score of 0.8, each due to the successful employment of the Persistence tactic (SPARTA ID ST0005): Libyan cyber actors sustained jamming for six months in 2006 and again in 2011; protesters repeatedly jammed Thailand government television broadcasts in 2014; and North Korea successfully disrupted GPS signals, jamming a total of 553 aircraft over the course of a week. 50% (2 of 4) of attacks to control a satellite attained high sophistication scores, in 1998 and 2008, namely for the successful employment of the Defense Evasion tactic (ATT&CK ID TA0005) to overcome ground control station defenses. Almost half of the CNE attacks scored above 0.5 with one incident from 2011 that scored 0.9 by employing both Defense Evasion and Persistence tactics that enabled a series of 46 subsequent attacks against the ground segment. The only theft-loss incident in our dataset, also from 2011, scored 0.8 successfully employing the Persistence tactic for 2 years. All DOS, eavesdropping, and spoofing attacks in our dataset scored 0.5. Overall, attacks are getting more sophisticated. Fig. 7 depicts the possible highest sophistication of each attack via αTE+. We observe that αTE+ and αTA+ identify the same set of highly sophisticated cyber attacks. The notable attack techniques employed by these attacks to support the Defense Evasion tactic are: Indicator Removal (T1070) and Exploit (i.e., of a vulnerability) for Defense Evasion (T1211). The attacks that employed the Persistence tactic also employed the following attack techniques: Event Triggered Execution (T1546), Create or Modify System Process (T1543), and Ex- ploit Hardware/Firmware Corruption (EX-0005). 0.25 0.35 0.45 0.55 0.65 0.75 0.85 0.95 1975 1980 1985 1990 1995 2000 2005 2010 2015 2020 Hijacking Jamming Control CNE DOS Eavesdropping Theft-Loss Spoofing Fig. 7. Attack technique sophistication of the 72 attacks over time. In comparing the results of our αTA+ and αTE+ measure- ments, we observe that they generally follow the same trend per incident, but αTE+ scores are slightly more dispersed than αTA+. This is reasonable considering that attack tactics are at one level of abstraction higher than attack techniques. Hence, αTE+ will exhibit greater sensitivity in measurement. Nevertheless, 66% of the incidents have both αTA+ and αTE+ scores of 0.5 or less. This leads to the following insight: Insight 2: Cyber attacks of average sophistication can be successful against space systems. How many attacks would have been stopped by using sim- ple countermeasures? We observe that 48 attacks employed techniques to establish an on-path attack position, and that the αTE+ score for these attacks are 0.4 or less. Though these attacks typically target the user segment, they leverage the weakness of the link segment. This leads to the insight: Insight 3: Proper security of the link segment between the space and user segments (e.g., using cryptography) could have thwarted two-thirds of the observed cyber attacks. We observe the sizeable frequency of social engineering techniques employed. The αTE+ score we assigned to the attacks that employed these techniques is 0.4. However, this is at the attack technique level of abstraction. We acknowledge that social engineering sophistication is highly nuanced at the implementation level, but simple defenses can be effective against phishing attacks, such as email filtering services, and application whitelisting. This leads to the following insight: Insight 4: Traditional IT security controls against social engineering attacks could have thwarted 50% (11/22) of the cyber attacks against the ground segment. Successful protection against on-path and social engineering attacks could have prevented 80% of the cyber attacks against space systems. IV. LIMITATIONS The present study has several limitations. First, we address the missing-data problem in a manual, rather than automated, fashion. Future research needs to investigate automated and objective methods for this process. Second, our metrics can be refined. For example, the attack consequence metrics, ex- cept those associated with Link Segments, are geared toward availability because the raw dataset lacks information about what kinds of confidential data are processed by these space systems. Third, we assume the measurements of the “building- block” metrics are given as input. While reasonable because of the focus of the present study, it is an important future research to investigate how to obtain these measurements, which may require a community effort. Fourth, the uncertainty associated with the populated attack tactics, attack techniques, space cyber kill chains, and space attack campaigns is not quantified. This issue is relevant because some scenarios may be more probable than others. Fifth, our case study has limited generalizability due to the lack of publicly available data. V. RELATED WORK There are studies on analyzing space-related incidents [3]– [5], [18], [20], [21]. For example, [3] considers incidents in terms of the payload, signal, and ground aspects; [4] provides narrative descriptions concerning NASA, jamming, hijacking, and control attack categories; [5] analyzes 1,847 space-related incidents according to their risk taxonomy for space. By contrast, we are the first to analyze cyber attacks against space systems, while preparing the first dataset with 72 cyber attacks. There are studies on threat models for space applications, such as leveraging LEO constellations to jam GEO targets [22], creating attack trees against CubeSats [23], demonstration of command injection via a software-defined radio [24], charac- terizing the transmission layer’s susceptibility to eavesdropping [25], leveraging the ATT&CK framework [26], and nanosatel- lites as attack platforms [27]. By contrast, we analyze real- world cyber attacks, while aiming to leverage our findings to make future abstract threat models more realistic and holistic. Moreover, our framework is innovative, including metrics that have not appeared in the literature [28]–[31]. VI. CONCLUSION We presented an initial study on characterizing cyber attacks against space systems. We proposed an innovative framework with precisely defined metrics, while addressing the missing- data problem. We prepared the first dataset of cyber attacks against space systems, including hypothetical but plausible at- tack details. By applying the framework to the dataset, we drew a number of insights. The limitations represent outstanding open problems for future research. Acknowledgement. We thank the reviewers for their com- ments. This work was supported in part by Colorado State Bill 18-086. REFERENCES [1] S. Madry and S. Madry, “Applications of pnt systems,” Global Navigation Satellite Systems and Their Applications, pp. 71–82, 2015. [2] S. S. Info, “Space attacks open database project.” https://www. spacesecurity.info/en/space-attacks-open-database/, Last accessed: Dec 15, 2022. [3] J. Pavur and I. Martinovic, “Building a launchpad for satellite cyber- security research: lessons from 60 years of spaceflight,” Journal of Cybersecurity, vol. 8, no. 1, p. tyac008, 2022. [4] J. Fritz, “Satellite hacking: A guide for the perplexed,” Culture Mandala, vol. 10, no. 1, p. 5906, 2013. [5] G. Falco and N. Boschetti, “A security risk taxonomy for commercial space missions,” in ASCEND 2021, p. 4241, 2021. [6] M. Wess, “Asat goes cyber,” in Proceedings of the U.S. Naval Institute, vol. 147/2/1416, UNI, 2021. [7] Aerospace, “Sparta: Space attack research & tactic analysis,” 2022. [8] B. Strom, “Att&ck 101: Cyber threat intelligence,” 2018. [9] P. Tedeschi, S. Sciancalepore, and R. Di Pietro, “Satellite-based com- munications security: A survey of threats, solutions, and research chal- lenges,” Computer Networks, p. 109246, 2022. [10] H. Guo, J. Li, J. Liu, N. Tian, and N. Kato, “A survey on space-air- ground-sea integrated network security in 6g,” IEEE Communications Surveys & Tutorials, vol. 24, no. 1, pp. 53–87, 2021. [11] V. S. Chippalkatti, R. C. Biradar, and S. Rana, “Recent technology trends in satellite communication subsystems,” in CONECCT, IEEE, 2021. [12] T. M. Nguyen, “Future satellite system architectures and practical design issues: An overview,” Satellite Systems-Design, Modeling, Simulation and Analysis, 2020. [13] B. E. Strom, A. Applebaum, D. P. Miller, K. C. Nickels, A. G. Pen- nington, and C. B. Thomas, “Mitre att&ck: Design and philosophy,” in Technical report, The MITRE Corporation, 2018. [14] E. FIRST, “Common vulnerability scoring system version 3.1: Specifi- cation document,” 2019. [15] B. Schneier, “Cyberattacks against nasa.” https://www.schneier.com/blog/ archives/2008/12/cyberattacks ag.html, 2008. Last accessed: May 2023. [16] K. Epstein and B. Elgin, “Network security breaches plague nasa,” BusinessWeek, 2008. Last accessed: May 20, 2023. [17] J. McDowell, “Jonathan’s space report: Rosat hacking claim.” https:// planet4589.org/space/jsr/back/news.649.txt, 2011. Last accessed: May 20, 2023. [18] S. Soesanto, “Terra calling: Defending and securing the space economy,” Cyberdefense Report, ETH Zurich: Center for Security Studies (CSS). Accessed, vol. 6, p. 2021, 2021. [19] A. Pennington, A. Applebaum, K. Nickels, T. Schulz, B. Strom, and J. Wunder, “Getting started with att and ck,” tech. rep., MITRE CORP MCLEAN VA, 2019. [20] N. Boschetti, N. G. Gordon, and G. Falco, “Space cybersecurity lessons learned from the viasat cyberattack,” in ASCEND 2022, p. 4380, 2022. [21] J. Pavur, D. Moser, M. Strohmeier, V. Lenders, and I. Martinovic, “A tale of sea and sky on the security of maritime vsat communications,” in S&P, pp. 1384–1400, IEEE, 2020. [22] F. Rawlins, R. Baker, and I. Martinovic, “Death by a thousand cots: Disrupting satellite communications using low earth orbit constellations,” arXiv preprint arXiv:2204.13514, 2022. [23] G. Falco, A. Viswanathan, and A. Santangelo, “Cubesat security attack tree analysis,” in SMC-IT, pp. 68–76, IEEE, 2021. [24] B. Lin, W. Henry, and R. Dill, “Defending small satellites from malicious cybersecurity threats,” in International Conference on Cyber Warfare and Security, vol. 17, pp. 479–488, 2022. [25] C. Richardson, M. Reith, and W. Henry, “Ensuring the security of space systems from eavesdropping attacks,” in International Conference on Cyber Warfare and Security, vol. 17, pp. 522–526, 2022. [26] D. Ormrod, J. Slay, and A. Ormrod, “Cyber-worthiness and cyber- resilience to secure low earth orbit satellites,” ICCWS, 2021. [27] J. Pavur, M. Strohmeier, V. Lenders, and I. Martinovic, “In the same boat: On small satellites, big rockets, and cyber trust,” in CyCon, pp. 151–169, IEEE, 2021. [28] M. Pendleton, R. Garcia-Lebron, J.-H. Cho, and S. Xu, “A survey on systems security metrics,” ACM Comput. Surv., vol. 49, pp. 62:1–62:35, Dec. 2016. [29] J.-H. Cho, S. Xu, P. M. Hurley, M. Mackay, T. Benjamin, and M. Beau- mont, “Stram: Measuring the trustworthiness of computer-based sys- tems,” ACM Comput. Surv., vol. 51, no. 6, pp. 128:1–128:47, 2019. [30] J. Mireles, E. Ficke, J. Cho, P. Hurley, and S. Xu, “Metrics towards measuring cyber agility,” IEEE Transactions on Information Forensics and Security, vol. 14, no. 12, pp. 3217–3232, 2019. [31] S. Xu, “Sarr: A cybersecurity metrics and quantification framework,” in Third International Conference on Science of Cyber Security (SciSec’2021), pp. 3–17, 2021.