IT PROFESSIONAL MAGAZINE 1 Security by Design Issues in Autonomous Vehicles Martin Higgins∗, Devki Nandan Jha§,∗, David Blundellψ and David Wallom∗ Abstract—As autonomous vehicle (AV) technology advances towards maturity, it becomes imperative to examine the security vulnerabilities within these cyber-physical systems. While con- ventional cyber-security concerns are often at the forefront of discussions, it is essential to get deeper into the various layers of vulnerability that are often overlooked within mainstream frame- works. Our goal is to spotlight imminent challenges faced by AV operators and explore emerging technologies for comprehensive solutions. This research outlines the diverse security layers, spanning physical, cyber, coding, and communication aspects, in the context of AVs. Furthermore, we provide insights into potential solutions for each potential attack vector, ensuring that autonomous vehicles remain secure and resilient in an evolving threat landscape. Index Terms—Autonomous vehicles, security by design, system security, cyber-physical. I. INTRODUCTION A S of 2020, the autonomous car market was valued at USD 1.45 billion and projected to grow substantially over the next decade with some expecting the market to grow to 800 billion by 2035 [1]. Despite the huge potential of autonomous vehicles (AV) there is trepidation about their roll-out into com- mercial environments. The inherent risks associated with AVs, including potential loss of life and financial repercussions, continue to hinder their widespread commercial adoption [2]. Operators are worried not just about operational failures but also deliberate attacks on AVs which may pose substantial security concerns. Given the obvious danger of an out-of- control AV, cyber-security of AVs is a growing concern [3]. A. Motivation, Objectives, and Contribution In this work, we attempt to outline a full design-stack security view of AVs. We proceed layer by layer across the sensing, processing, coding and encryption layers of an AV and outline some fundamental security questions. We make suggestions on how these vulnerabilities could be fixed and aim to provide a high-level overview of what cyber-physical security means for contemporary AVs. We also outline some potential solutions in the layer for each vulnerability type. By reviewing this document the reader should have a broad understanding of the type, location and potential solution of a wide range of cyber-physical vulnerabilities to modern AVs. ∗Author is with Oxford e-Research centre, University of Oxford, Holywell House, 64 Osney Mead, Oxford, OX2 0ES, United Kingdom. § Author is with Newcastle University, 1 Science Square, Newcastle Upon Tyne, NE4 5TG, United Kingdom. ψ Author is with CyberHive Ltd., Newmarket House, Newbury, RG14 5DP, United Kingdom. II. CYBER-PHYSICAL SYSTEM STACK System security has often been considered in the context of the individual components of the system. However, authors are increasingly taking a holistic approach to security that includes both the cyber, physical and communication layers. A cyber-physical system is one which exhibits a hierarchy of interaction between analogue, continuous signals and the quantized 0 & 1s interpretable to a computer. Often the physical layer refers to an analogue sensing system often upstream of the cyber network. However, it can also refer to the downstream physical elements of a device which are dependent on continuous measurement phenomena such as the actuators in a robotic arm. Conventional cyber-security has understandably received much more direct focus than physical layer-style security. However, we still believe there are some under-served areas within this part of the network stack that could use some due focus. There is also the encrypted communications layer which dictates interactions with the AV central authority. In this work we examine cyber, physical and communication network vulnerabilities. In figure 1 we outline the attack types outlined and discussed within this work. III. PHYSICAL LAYER ATTACKS Often we consider cyber-security in terms of the cyber layer only. However, physical later attacks can often bypass pro- tections such as authentication, encryption and other security features outright by attacking the infrastructure upstream of these defensive processes. Here we outline some examples of physical layer processing attacks and some proposals for methods to solve these attacks. A. Passive Sensor Attacks Increasingly, AVs are reliant on visual data from camera sensors for travel. In fact, one of the leaders in the field, Tesla boasts about their reliance on cameras over other methods as they provide a generalized solution to self-driving vehicle navigation. Camera spoofing attacks have already shown to be possible for AVs [4]. At the most simplistic level, Blinding attacks can be performed using a diode point laser by focusing the laser on the camera. Depending on how the AV responds to this kind of scenario the vehicle might stop leaving it vulnerable to theft or further manipulation by the attacker. AVs have also been shown to be susceptible to False classification. In the past, self-driving cars have been fooled by billboards, fast food signs and other environmental features (including the moon). Attackers can replicate these events by creating fictional images in the camera’s view. These kind of attacks are sometimes known as Scenery attacks as the attacker changes arXiv:2501.04104v1 [eess.SY] 7 Jan 2025 IT PROFESSIONAL MAGAZINE 2 Fig. 1. Taxonomy of potential attacks for the Autonomous vehicles the background scenery to force a response from the car. Also, images which appear normal to the passenger can be subtly altered to fool the underlying classification algorithm. So called adversarial images embed noise into the image scenery to cause misclassification [5]. Given these potential vulnerabilities, AVs often incorporate some additional ’reflec- tive’ sensing such as LIDAR or ULTRASONICS to measure distance in real-time. However, these are also susceptible to attack. B. Active Sensors Attacks Resolving images in real-time for AVs requires substantial processing power and this is not always possible. Therefore, to ensure AVs can operate on orders of magnitude faster than real-time image processing, AVs will often incorporate Time- of-Flight (ToF) sensors such as LIDAR (travel) or ultrasonics for range detection. However, these methods of sensing can often be easily spoofed. For example, a ToF sensor for assisted braking device could easily be spuriously triggered by simply covering the sensor mid-journey i.e. with a simple bug controlled remotely. If timed appropriately this could cause traffic accidents or other outcomes with a relatively simple Sensor spoof [6]. One of the best ways to prevent upstream sensing attacks is the corroboration of a sensor measurement by another measurement i.e. Sensor corroboration. The deterministic re- lationship between different measurements can be used to examine or evaluate when sensors have been compromised or have embedded errors. Residual error detection used in state estimation in power systems [7] is an example of this approach. By using the expected relationships between local measure- ments minor errors can be overcome and erroneous measure- ments discarded. This approach is not full proof. Deception style attacks like False data injection (FDI) attacks such as those outlined in [8]. These attacks demonstrate that if an attacker is aware of the relationship between measurements, they can often structure their attack to bypass measurement corroboration techniques such as Residual error or even Prob- abilistic detection. However, this often requires the attacker to compromise multiple sensors simultaneously. A popular type of defence against deception-style attacks is Moving Target Defence (MTD). The fundamental issue with countermanding physical layer attacks is the lack of defensive capability when interpret- ing physical phenomena. Analytic-based defences can help to address this. Analysis of inbound data measurements to ensure the inbound dataset is statistically reasonable given the constraints of reality. An example of this might be to examine inbound ToF sensor data and try to assess the potential acceleration rate based on the inbound data. C. Side-Channel Attacks Side-channel attacks can be leveraged against the physical layer to exploit unintended information leakage from hardware components. As anyone can purchase an AV, the hardware components will have limited physical protections. Attackers maybe able to analyze physical phenomena to extract cryp- tographic keys or other confidential information by observing patterns that correlate with specific operations. IV. CYBER LAYER ATTACKS The cyber-layer concerns what we might consider more conventional cyber-security concerns i.e. zero-day vulnerabil- ities, back-doors, and social engineering. Broadly, cyber layer vulnerabilities have been well considered with solutions such as encryption, password protection and information security. However, there are some key areas of cyber layer defence IT PROFESSIONAL MAGAZINE 3 which we believe are less well considered and require new solutions. A. Code Vulnerabilities Coding languages can come with embedded vulnerabilities which an AV manufacturer should be cognizant of. C++ is a language commonly used in low-level programming for AVs and there are several attack types which emerge from the code base directly [9]. These include (but are not limited to); Code injections (LDAP, Xpth, SQL etc.) whereby code is injected along with the normal query to access additional results. Memory corruption attacks due to C++’s lack of spatial memory safety. Code re-use attacks where code is repurposed to find arbitrary solutions. Attackers can also take advantage of data leakage from C++ in order to perform Denial of Service (DoS) attacks. There are several approaches to prevent bad code in AVs. Automotive coding standards such as the Motor Industry Soft- ware Reliability Association (MISRA) can formalise coding structures for code reviews [10]. By providing formal stan- dards, it aims to minimise bugs and potential vulnerabilities. However, even when reviewed under formal standards code can still contain bugs which which may result in issues such as Buffer overflows and Memory slippages. RUST is compar- atively safer than C++ but can still be run in unsafe operating modes. Consequently, some projects have looked into how to formalize and ensure safe coding by design via a combination of in-memory architecture and coding structures. One such novel method is the Capability Hardware Enhanced RISC Instructions (CHERI) C/C++. CHERI C/C++ is a ground- up implementation aimed at providing fine-grained memory protection in coded C [11]. While low-level languages such as C are more susceptible, these kinds of faults, and memory vulnerabilities are not limited to C with JavaScript, Python and other popular languages having similar embedded security issues. B. Adversarial Machine Learning Adversarial machine learning refers to a branch of software attacks specifically targeting the system’s machine learning processes [12]. Broadly, these attacks can be classified into attacks against training data, attacks against the model itself and attacks against the federated system. Evasion attacks are a form of model attack whereby the system is fed data in an attempt to create an error or misclassification in the machine learning model. A particularly relevant example of Evasion attacks for AVs are adversarial images. 1) Adversarial Images: Image processing is arguably the most important element of navigation for AVs. Image pro- cessing can be corrupted by alterations made to the underlying code base without the user being aware. Simple corruption of the image processing code base would likely render a vehicle inoperable. However, a worse outcome might occur when an attacker changes the underlying code base to misclassify events with the aim of creating dangerous scenarios. This could be done by changing the setup of the underlying classification algorithms or the image base upon which the classification is dependent. For example, swapping the classi- fication of green and red light traffic light images could cause a car drive through a red light when it should be stopping. Defence against these attacks using code verification or version control should be trivial during times when the manufacturers’ central authority can be reached. However, in the case of a self- driving vehicle there may be cases where the two code bases can’t be compared (such as in a tunnel). This could represent an attacking opportunity for an adversary to intervene and produce differences between the local and established code bases. Therefore, strong tampering prevention techniques are needed when out of range of the central authority perhaps by locking down the code and making it read-only during non- communication. 2) Model Extraction: Model extraction involves extracting the model training data which often has proprietary or com- mercial value. Often, with sufficient time and data gathering. It can be possible for an adversary to replicate a model outright from the data extracted. This can raise security concerns and increase the success rates for attacks like adversarial images. It can also have severe financial repercussions for the company if a sophisticated machine learning model can be replicated by a third party. 3) Federated Systems Attacks: Federated learning can be deployed in AVs allowing the algorithm to learn from multiple independent systems. For example, in the case of a fleet of self- driving cars you might seek to enhance the collision detection model by feeding back data from each individual car. The issue with this kind of learning model is the potential for Byzantine attacks. By capturing a large portion of the fleet, attackers can inject false data which maybe considered true if it is consistent with a large portion of the fleet. Federated systems can allow the adversary to perform data poisoning attacks by corrupting the underlying datasets. V. COMMUNICATIONS LAYER ATTACKS AVs place heavy reliance on fast and reliable network communications for getting real-time relevant information for continued operation (e.g. traffic data, street maps, GPS, weather information) or communicating with the cloud. There are 4 types of communication networks involved, a) vehicle-to- vehicle (V2V), b) vehicle-to-infrastructure (V2I), c) vehicle- to-pedestrian (V2P) and d) vehicle-to-network (V2N). V2X (vehicle-to-everything) is a collective term used for the com- munication mechanism of autonomous vehicles. Each vehicle is installed with an on-board unit (OBU) for communication. Numerous network attacks are feasible for autonomous vehi- cles, and these security threats within the communication layer can be classified into distinct categories [13][14]. A. Confidentiality Attack Confidentiality is a key pillar of the CIA triad (Confidential- ity, Integrity, Availability) in network security. Attackers can compromise confidentiality in various ways. Since the network is accessible to all vehicles, a malicious node can easily eavesdrop and capture sensitive information (Eavesdropping attack). This can be done through Packet capturing, where IT PROFESSIONAL MAGAZINE 4 the attacker intercepts packets to extract confidential data. The attacker may then use this information to falsify location or traffic details. Weak encryption can also lead to Password attacks, where attackers guess passwords using dictionaries or brute force. If an attacker gains access, it can compromise both the vehicle and traffic operations. Strong encryption and hashed passwords help mitigate these threats. Current solutions to manage Confidentiality attacks often rely on public key infrastructure and secure communication protocols. B. Integrity Attack In this type of attack, the attacker compromises the integrity of the system by changing the transmitted data or traffic information. Replay attacks are a commonly used form of this attack where the past message is replayed to gain the traffic network’s trust. Also prominent are Masquerading attacks and the Illusion attack. In Masquerading attack, an attacker masquerades a valid node’s identity either by stealing or using some software bugs. By masquerading as a valid node, the attacker can intervene in the network causing various issues. Conventional methods to address Integrity attacks include integrity checks and digital signatures. However, it is possible that the key can be compromised and if an attacker gains access to the private key used for generating digital signatures, they can sign malicious data, making it appear genuine. Additionally, if an adversary gains physical or remote access to a vehicle’s systems, they may tamper with data or manipulate digital signatures to compromise its integrity. C. Availability Attack Attacking network availability is a common way to disrupt V2X communication. Traditional attacks like Denial of Service (DoS), Distributed Denial of Service (DDoS), spamming, and flooding remain significant threats. An attacker can flood the network with fake requests, exhausting resources and preventing legitimate traffic (DoS). Spamming and flooding increase delays, and when generated by botnets, they become harder to mitigate (DDoS). Specific to autonomous vehicles (AVs), Blackhole and Wormhole attacks target availability. In a Blackhole attack, a malicious node pretends to be the nearest node and drops packets, causing loss. In a Wormhole attack, malicious nodes create a tunnel to intercept and modify information, creating false traffic scenarios. AV networks are vulnerable to availability attacks that could disrupt critical systems like GPS, satellite communication, internet, and internal telemetry, leaving vehicles inoperable. Traditional countermeasures, such as redundancy, backup sen- sors, and failover systems, aim to ensure operation during disruptions. However, these may be inadequate against emerg- ing threats exploiting vulnerabilities in interconnected AV networks. D. Identification Attack Identification attacks strike on the node identity by creating false identities. The most common form of identification attack is a sybil attack where a single malicious node pretends as multiple nodes and transmits the wrong message in the network. A normal node follows the message as it seems to be received from multiple identities which may lead to traffic congestion or accidents. An attacker can also sniffs to get the key/certificate of a genuine node and later uses that to act as the node to transfer malicious message including malware and virus. Attacks such as these can lead to delays in the transmission of important messages, which could lead to collision or other navigation issues. There is also the possibility that due to the authentication issues timing attacks can cause a genuine AV to be detected as a malicious entity not allowed to interact with the network. Addressing identification attacks involves implementing robust user authentication methods, such as biometrics and device fingerprinting, alongside continuous monitoring and behavior analysis to safeguard against imper- sonation and unauthorized access. E. Port Overwriting Hardware entry points such as serial ports provide very little native protection against direct intervention. Attacks on these entry points could allow an attacker to replicate many of the discussed attacks such as FDI or replay attacks. Man-in-the- middle (MitM) are also possible via serial port interception whereby the attacker sits in between two systems and transmits the data between them. The data transmitted into and out of serial ports can lead to Side-channel attacks. Whereby data is collected illegally via data leakage in industrial equipment. If an attacker can replace the feed from a sensor or set of sensors they could reflect almost any system state they wanted to the user. Replay or Triggering attacks could be easily implemented without the level of intervention required in the physical sensing attacks. Further, because the access points for the serial ports for an AV are generally under the hood they might be harder to spot via a visual inspection of the AV. VI. CROSS-LAYER ATTACKS In addition to any vulnerabilities located in the respective layers, AVs can elucidate attack opportunities which cannot be captured in a single layer. Cross-layer attacks target multiple layers of the system simultaneously, utilise partial vulnera- bilities in each domain and exploit the interactions between them which leads to complex and severe consequences. A few potential cross-layer attacks affecting the security of AVs are as follows. A. Sensor Manipulation and Adversarial Machine Learning Cyber-Physical layer attack where an attacker manipulates the AV’s physical environment to deceive its sensors while si- multaneously exploiting vulnerabilities in the machine learning models used to process sensor data. For example, an attacker might utilise a scenery attack in combination with adversarial machine learning techniques, this could cause the vehicle to ignore critical road signs, leading to dangerous driving. IT PROFESSIONAL MAGAZINE 5 B. False Data Injection and Network Tampering Physical-communications layer attack which involves in- jecting false data into the vehicle’s sensor system while simultaneously tampering with communication protocols. For example, an attacker could introduce false GPS signals (a physical layer attack) to mislead the vehicle about its actual location. Simultaneously, they could intercept and alter V2V communications (a communication layer attack) to provide corroborative but incorrect location data. This dual manipu- lation could cause the vehicle to take dangerous actions, such as making sudden turns or stops, which might lead to accidents or traffic disruptions. C. Side-Channel Attack with Code Injection Cyber-Communications style attackers might use side- channel analysis to gather information about the vehicle’s internal operations. Once the information is extracted, it could be used to inject malicious code into the vehicle’s software through a communication interface. This malicious code could then be used to disable critical vehicle functions, disrupt communications, or even take control of the vehicle remotely. The combination of side-channel attacks with code injection through communication channels creates a potent cross-layer cyber-communications threat that severely compromises the vehicle’s safety and security. VII. CONCLUSIONS & FUTURE DIRECTIONS The AV cyber-security sector is rapidly evolving, with increasing emphasis on developing robust defense mechanisms to protect against sophisticated cyber threats. Industry leaders are prioritizing advanced encryption, secure communication protocols, and real-time threat detection to safeguard vehicle systems from potential breaches. Despite these efforts, the sec- tor faces ongoing challenges in addressing vulnerabilities and ensuring comprehensive security as the technology continues to advance and integrate with other systems. While we have discussed a number of vulnerabilities and potential solutions here, we target the below subsections as priorities for increas- ing security within the cyber-physical and communications stack. 1) Spoof Proof Sensing: Sensors are some of the best targets for attacking an AV. Physical sensors possess few opportunities for upstream authentication and security. Current sensing modules are poorly defended with many cyber attack outcomes possible via the manipulation of the underlying measurement system. From simple brake triggering attacks to more complicated attacks such as adversarial images or false data injection. It is clear that we need a framework for guaranteeing high-quality sensing protection. 2) Secure Entry Points: Weak entry points provide an attacker with multiple options for attack. From MitM attacks, side-channel attacks, FDI and replay attacks the standard protocols employed by many of the entry points on an AV offer easy attack opportunities to attackers. The distributed nature of entry points, especially across large networks makes developing generic solutions difficult. In the future, the vul- nerability of low-security access points needs to be considered and appropriate defences incorporated into the system stack. These defences can be split broadly into pre and post-intrusion defence solutions. Pre-intrusion considers those forms of pro- tection which prevent the attacker from gaining access through the port. Post-intrusion defences refer to catching attackers based on their activities once they have access to the system such as through analytics or moving target style detection schemes. 3) Software Secure by Design: A more conventional target base, the software in an AV needs to be secure by design from attack. At the coding level, secure-by-design coding tools such as the CHERI architecture or languages like RUST can help prevent common code vulnerabilities in memory. Alterations to the classification base can also be devastating for AVs making them unable or dangerous to operate. Ideally, we would develop local and centralized solutions to this problem to ensure compliance with a good classification base even when the central authority is unavailable. 4) Operational Considerations: Enhancements to AV se- curity in relation to their operational environment are also critical. Operators should consider that AV security extends beyond the domain of the vehicle into the surrounding oper- ational environment. Considerations on how to mitigate these risks should be made. 5) Post-Quantum Future Proofing: AVs are an emergent technology and the security challenges that face them will also need to be future-proofed. As viable quantum computers come online, system operators will need to address the vul- nerability of conventional encryption approaches. To mitigate the security threats possessed by quantum computers, NIST has approved a few post-quantum secured algorithms [15]. However, the wide adoption of these algorithms has many challenges. Different post-quantum algorithms might allow trade-offs between the processing time and key/signature size, which might influence the selection of the algorithm to use. Some of the algorithms are also vulnerable to side-channel attacks which need to be managed. ACKNOWLEDGMENT This work was supported by UK Research and Innovation’s Digital Security by Design (DSbD) Grant and was performed in conjunction with CyberHive. REFERENCES [1] R. Lanctot, “Accelerating the Future: The Economic Impact of the Emerging Passenger Economy,” Tech. Rep., 2017. [Online]. Available: www.strategyanalytics.com [2] K. Kim, J. S. Kim, S. Jeong, J. H. Park, and H. K. Kim, “Cybersecurity for autonomous vehicles: Review of attacks and defense,” 4 2021. [3] V. K. Kukkala, S. V. Thiruloga, and S. Pasricha, “Roadmap for Cyberse- curity in Autonomous Vehicles,” IEEE Consumer Electronics Magazine, 2022. [4] J. Petit, B. Stottelaar, M. Feiri, and F. Kargl, “Remote Attacks on Automated Vehicles Sensors: Experiments on Camera and LiDAR,” Tech. Rep. [5] G. R. Machado, E. Silva, and R. R. Goldschmidt, “Adversarial Machine Learning in Image Classification: A Survey Towards the Defender’s Perspective,” 9 2020. [Online]. Available: http://arxiv.org/abs/2009.03728 http://dx.doi.org/10.1145/3485133 IT PROFESSIONAL MAGAZINE 6 [6] Y. Cao, Y. Zhou, Q. A. Chen, C. Xiao, W. Park, K. Fu, B. Cyr, S. Rampazzi, and Z. Morley Mao, “Adversarial sensor attack on LiDAR- based perception in autonomous driving,” in Proceedings of the ACM Conference on Computer and Communications Security. Association for Computing Machinery, 11 2019, pp. 2267–2281. [7] A. Monticelli, “Electric power system state estimation,” Proceedings of the IEEE, 2000. [8] Y. Liu, P. Ning, and M. K. Reiter, “False data injection attacks against state estimation in electric power grids,” ACM Transactions on Informa- tion and System Security, 2011. [9] M. Verdi, A. Sami, J. Akhondali, F. Khomh, G. Uddin, and A. K. Motlagh, “An Empirical Study of C++ Vulnerabilities in Crowd-Sourced Code Examples,” Tech. Rep. [10] S. D. David Ward, “MISRA Standards for Automotive Software,” in The 2nd IEE Conference on Automotive Electronics. London: IET, 3 2006. [11] A. Richardson, “Complete spatial safety for C and C++ using CHERI capabilities,” University of Cambridge, Cambridge, Tech. Rep., 6 2020. [Online]. Available: https://www.cl.cam.ac.uk/ [12] R. S. Siva Kumar, M. Nystrom, J. Lambert, A. Marshall, M. Goertzel, A. Comissoneru, M. Swann, and S. Xia, “Adversarial machine learning- industry perspectives,” in Proceedings - 2020 IEEE Symposium on Security and Privacy Workshops, SPW 2020. Institute of Electrical and Electronics Engineers Inc., 5 2020, pp. 69–75. [13] R. Meneguette, R. De Grande, J. Ueyama, G. P. R. Filho, and E. Madeira, “Vehicular Edge Computing: Architecture, Resource Management, Se- curity, and Challenges,” ACM Computing Surveys, vol. 55, no. 1, pp. 1–46, 1 2023. [14] L. Br´ehon–Grataloup, R. Kacimi, and A. L. Beylot, “Mobile edge computing for V2X architectures and applications: A survey,” Computer Networks, vol. 206, 4 2022. [15] D. Moody, G. Alagic, D. C. Apon, D. A. Cooper, Q. H. Dang, J. M. Kelsey, Y.-K. Liu, C. A. Miller, R. C. Peralta, R. A. Perlner, A. Y. Robinson, D. C. Smith-Tone, and J. Alperin-Sheriff, “Status report on the second round of the NIST post-quantum cryptography standardization process,” National Institute of Standards and Technology, Gaithersburg, MD, Tech. Rep., 7 2020. [Online]. Available: https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf BIOGRAPHY Martin Higgins (S’19) is a research associate at the Univer- sity of Oxford on the Digital Security by Design Project. His research interests lie in power systems, cyber-security, false data injection attacks, and autonomous vehicles. Martin re- ceived his PhD in electrical engineering from Imperial College in 2021. Contact him at Martin.Higgins@eng.ox.ac.uk. Devki Nandan Jha is a Lecturer at Newcastle University, UK. He is also a visiting researcher at the Oxford e-Research Centre, University of Oxford, UK. He has a PhD in Computer Science from Newcastle University, Newcastle Upon Tyne, UK. His research interests include cloud computing, internet of things, trust and security, and machine learning. Contact him at Dev.Jha@ncl.ac.uk. David Blundell is the founder, MD and CTO of Cy- berHive and 100 Percent IT Ltd. His current research interests are secure distributed computing, autonomous vehicles and post-quantum encryption. Contact him at David.Blundell@cyberhive.com. David Wallom is an Associate Director of Innovation with the Oxford e-Research Centre, University of Oxford. His current research interests include applications and reuse of e- infrastructure, as well as the application of high-performance computing techniques and cyber-security. Contact him at David.Wallom@oerc.ox.ac.uk.