Proactive security defense: cyber threat intelligence modeling for connected autonomous vehicles Yinghui Wang, Yilong Ren, Zhiyong Cui, Haiyang Yu Abstract—Cybersecurity has become a crucial concern in the field of connected autonomous vehicles. Cyber threat intelligence (CTI), as the collection of cyber threat information, offers an ideal way for responding to emerging cyber threats and realizing proactive security defense. However, instant analysis and modeling of vehicle cybersecurity data is a fundamental challenge since its complex and professional context. In this paper, we suggest an automotive CTI modeling framework, Actim, to extract and analyse the interrelated relationships among cyber threat elements. Specifically, we first design a vehicle security-safety conceptual ontology model to depict various threat entity classes and their relations. Then, we manually annotate the first automobile CTI corpus by using real cybersecurity data, which comprises 908 threat intelligence texts, including 8195 entities and 4852 relationships. To effectively extract cyber threat entities and their relations, we propose an automotive CTI mining model based on cross-sentence context. Experiment results show that the proposed BERT-DocHiatt-BiLSTM-LSTM model exceeds the performance of existing methods. Finally, we define entity-relation matching rules and create a CTI knowledge graph that structurally fuses various elements of cyber threats. The Actim framework enables mining the intrinsic connections among threat entities, providing valuable insight on the evolving cyber threat landscape. Index Terms—Automotive cybersecurity, Cyber threat intel- ligence, Entity relation joint extraction, Hierarchical attention mechanisms, Cross-sentence context. I. INTRODUCTION C ONNECTED autonomous vehicles (CAVs) are equipped with advanced embedded systems and connected to various external networks for environment perception and decision-making. The CAVs facilitate significant enhance- ments in efficiency and road safety, playing a crucial part in intelligent transportation systems [1], [2]. While CAVs introduce a rang of enabling technologies, the increasing connectivity and system complexity give rise to new attack surfaces or security vulnerabilities, rendering vehicles more vulnerable to potential cyber-attacks [3], [4]. For example, two hackers remotely hacked into the Jeep Cherokee via an in- vehicle infotainment system [5]. They gained the read/write permission of controller area network (CAN), then remotely Y. Wang and Z. Cui are with the School of Transportation Science and Engineering, Beihang University, Beijing 102206, China. Y. Ren and H. Yu are with the Beijing Key Laboratory for Cooperative Vehicle Infrastructure Systems and Safety Control, Beihang University, Beijing 102206, China, and also with the Zhongguancun Laboratory, Beijing 100094, China. CorrespondingAuthor1: Haiyang Yu, South Third Street, Shahe Higher Education Park, Changping District, Beijing, 102206. Telephone number: +86- 18810953012, E-mail: hyyu@buaa.edu.cn CorrespondingAuthor2: Yilong Ren, South Third Street, Shahe Higher Education Park, Changping District, Beijing, 102206. E-mail: yilon- gren@buaa.edu.cn manipulated the steering wheel, accelerator, windshield wiper, and even diverted the vehicle from its intended driving di- rection. The remote cyber-attack incident is regarded as a watershed in the automobile industry and has attracted wide social attention. In the past few years, a notable increase in cyberattacks on automotive systems has been observed. It is forecasted that such attacks will become more common in future autonomous vehicles [6]. Successful cyber-attacks could result in the system failure, vehicle operation disruption, privacy disclosure, and economic loss, etc [7], [8]. What’s more concerned is that the safety features of automotive cyber- physical systems might be compromised. It could cause human damage and even threat national safety [9]. Obviously, the cybersecurity issues of CAVs warrant significant attention. Over the recent years, significant efforts have been con- ducted on the cybersecurity of vehicles, such as threat analysis and risk assessment (TARA), CAN bus security, authentica- tion protocols security, intrusion detection, and among others [10]–[12]. Unfortunately, the current security protections for CAVs focus mainly on specific scenarios. With the increasing electronic information components and communication inter- actions, modern vehicles have evolved into highly intricate systems of systems (SoS) [13]. Developing security measures for each element of complex vehicle systems against cyber- attacks is not realistic. Moreover, due to the diverse and dynamic nature of cyber-attacks, it is a major challenge to timely discover potential cyber threats and devise suitable security measures for CAVs [14]. Cyber threat intelligence (CTI) mining, as a more proactive and forward-thinking tech- nique, offers critical insights into emerging cyber-attacks or threats [15]. By using CTI to discover evidence-based threats, organizations can proactively predict the actions of threat actors and implement effective defense measures [16]. This empowers them to improve the security posture significantly for CAVs. A. Motivation Most of the CTI data are written in natural language. The previous CTI analysis require intensive manual inspection of the cybersecurity information descriptions, which is a time- consuming task. Therefore, some studies proposed automated CTI extraction methods in the form of indicator of compromise (IOC) from unstructured texts [17], [18]. Nevertheless, isolated IOC fails to capture the entire panorama of threat events, mak- ing it challenging for organizations to grasp a full picture of the incoming threat. In the meantime, deep learning and natural language processing technology are widely adopted in cyber arXiv:2410.16016v1 [cs.CR] 21 Oct 2024 threat intelligence extraction and analysis. Whereas, most of the recent studies merely focused on cybersecurity entity recognition, ignoring the relationships among entities [19]– [22]. Subsequently, Zhao et al. recommended a CTI framework on the basis of the heterogeneous information network to ana- lyze the dependent relationships among IOCs [23]. Similarly, Gao et al. created a threat intelligence meta schema, then modeled CTI using the heterogeneous information network [24]. This approach aimed to capture diverse types of nodes and intricate relationships among them. Unfortunately, the meta-paths used in these studies are designed manually. As the IOC types are increasing, the number of meta-paths will also grow significantly. Gradually, researchers have focused on the end-to-end joint extraction model to extract CTI entities and mine their semantic relation [25]–[27]. However, current CTI research faces three key limitations in the CAVs cybersecurity area: 1) The diversity of cybersecurity entities and relations, along with the increasing demand for cybersecurity and safety fusion analysis. Complex vehicle systems result in the diversity of cybersecurity entities and relations, thereby making it harder to extract and understand relevant information. Furthermore, cybersecurity events may involve function safety effects, such as vehicle collision, and human injury, etc. The existing studies neglected the interaction between the automobile cyber and the physical world. 2) The description of automobile CTI information is quite complex, which would result in the low accuracy of CTI mining. Different from the traditional IOCs (e.g., IP, hash, or email), the description of cybersecurity entity in automobile CTI has no specific rules or patterns. Moreover, there are many cross-sentence relational entities in automotive CTI data. These aspects will affect the precision of CTI information extraction, and might cause the omission of critical threat entities and relationships. 3) Lack of labeled CTI corpus. Obtaining real-world auto- motive CTI data can be challenging due to the regulation, industry concern, and professionalism, etc. Compared with more mature areas, the field of automotive cybersecurity lacks a large amount of tagged data for model training. We intend to design a whole scheme for automotive CTI modeling to address the above issues. We refine the challenges to achieve the research goals into two aspects: (1) How to thoroughly capture the diverse entities and their relation- ships, as well as the relationship between cybersecurity and safety? and (2) Considering its complexity and cross- sentence context, how can we effectively acquire automobile CTI knowledge? B. Contributions To combat these challenges, Actim, a cyber threat intelli- gence modeling framework is proposed to mine and analyze automotive CTI data. Specifically, Actim defines a vehicle security-safety (VSS) ontology model to represent various elements and their relations in the vehicle cybersecurity data. Then, Actim introduces a document-level entity and relation joint extraction model to handle complex entity descriptions and cross-sentence relations, thereby enabling the effectively mining of automobile CTI information. Finally, we construct a knowledge graph of automobile CTI, which merges the interrelationship among diverse elements, to depict a holistic picture of CTI. Moreover, we have created the first document- level CTI corpus in the automobile cybersecurity domain. In short, the main contributions of our paper are depicted below. • Automotive CTI semantic modeling. We propose an automotive CTI conceptual ontology model, VSS. The ontology captures complex dependencies between cyber and physical systems in CAVs. Specifically, it creates a thorough ontology view of the vehicle, component, vul- nerability, attack pattern, consequence, and other security entities, as well as relationships among them. The ontol- ogy model establishes a unified and standardized way of expressing automotive security and safety knowledge. • Document-level CTI corpus. We collect 908 cyber threat intelligence documents, then adopt the “BIOES-entity type-relation type-entity role” schema [28] to annotate the entity and relation of the automotive CTI data, called Acti corpus. The corpus contains a total of 3678 sentences, 8195 entities, and 4852 entity relations. To our best knowledge, the Acti corpus we created is the first fully manually annotated dataset for CTI modeling in the automotive cybersecurity field. • Cyber threat intelligence mining based on cross- sentence context. We propose the BERT-DocHiatt- BiLSTM-LSTM model, an automotive cyber threat in- telligence mining approach based on cross-sentence con- text. It models threat-related entities and interdependent relationships among them using an end-to-end document- level joint extraction method. This method introduces a hierarchical attention mechanism, i.e., word-level atten- tion and sentence-level attention. It enables the model to focus on more critical information in the case of complex entity description and cross-sentence relations. In total, our model has advanced performance in cyber threat intelligence mining in the automobile field. • Automotive CTI knowledge graph. We present three matching rules for the extraction of entity-relation triplets. Then, we utilize Neo4j to construct an automotive CTI knowledge graph, ActiKG. The ActiKG describes various cyber threat information structurally and relationally to effectively fuse automotive CTI knowledge. It depicts a more comprehensive landscape of cyber threats and facilitates thorough analysis of associations in vehicle cybersecurity and safety. The rest of this paper is outlined as follows. Section II offers an examination of relevant prior studies. After that, the foundational concepts and an outline of the threat intelligence modeling architecture are depicted in Section III. Section IV delves into the details of the automotive CTI mining approach. Section V details the experiments and performance outcomes of the presented method, as well as the construction of CTI knowledge graph. Finally, Section VI summarizes the paper and highlights future research directions. II. RELATED WORK In this section, we review previous research related to ontology modeling for automotive cybersecurity, and cyber threat intelligence mining methods. A. Automotive cybersecurity conceptual ontology Several ontology models have been specifically developed for the automotive cybersecurity domain. Shaaban et al. pre- sented an ontology model to verify and validate security requirements against vehicle cybersecurity issues [29]–[31]. The proposed ontology included the vehicular component, threat, vulnerability, security requirement and property ele- ment. They also extended the model to encompass the assets, broadening the scope beyond merely safety-related aspects to a wider perspective. Similarly, Hou et al. proposed a vehicle cybersecurity ontology model, which was specifically created to generate dynamic attack graphs [32]. They abstracted the security-related elements and their relationships, including the asset, vulnerability and attack. In addition, Grimm et al. dedicated to a vehicle and fleet security method, which aimed to tailor security measures with automotive context- aware [33]. In their work, an ontology model was proposed to assist achieve the above goal. They defined the vehicle, context, attack occurrence, attack type, vehicle identification number and location term. In fact, cyber-attacks may affect the physical system of vehicles. However, the above studies fail to explore the safety and cybersecurity issues simultaneously. In order to enhance preventive cybersecurity defense ca- pabilities in vehicle domain, it is crucial to acquire collab- orative information between safety and security. Venkata et al. introduced an ontology-driven framework for capturing the connections between physical and cyber systems [34]. The ontology provided the ability to analyze the consequence of cyber-attacks on physical systems. However, this study only demonstrated an ontology case for vehicle-to-infrastructure reference architecture, including the physical component, cy- ber component, abstract element, vehicle and infrastructure. Subsequently, Cappelli combined existing ontologies in the internet of things, risk, safety and security domain, to develop an integrated security-safety ontology specifically tailored for vehicle systems [35]. This study attempted to analyze the causal relationships between security and safety issues in CAVs. However, the proposed ontology fails to capture the interrelationship of diverse components in vehicles, while ignores several essential security element representations. In other words, these ontologies have not reached the detail level required to analyze the real implementation of the vehicle system. Moreover, they are hard to thoroughly describe cyber threats or attacks associated with vehicle components and technologies. B. Cyber threat intelligence modeling There are several attempts to extract CTI from open- source cybersecurity texts. Among them, some researchers employed the heterogeneous information network to analyze and model CTI. Specifically, Zhao et al. introduced a novel IOC recognition method, and employed the heterogeneous information network to analyze the dependent relationships among extracted IOCs [23]. Similarly, Gao et al. utilized the heterogeneous information network to model CTI by defining meta-paths and meta-graphs over node types [24]. Unfortunately, these studies have a main limitations: the meta- paths or meta-graphs are designed manually, and the number of them will grow significantly as the increasing IOC types. In the traditional IT domain, researchers began to focus on the joint extraction model for mining CTI entities and analyzing their relationships. Li et al. adopted Luo’s joint labeling scheme [28]and merged the BiLSTM model with a dynamic attention mechanism to propose a BiLSTM-dynamic- att-LSTM model [25]. This novel approach enabled the si- multaneous extraction of cyber entities and their relationships. Subsequently, Zuo et al. introduced a BERT-BiLSTM-att-CRF joint extraction framework [26]. The BERT model enables it to effectively capture intricate semantic features of CTI data. Guo et al. modeled the cybersecurity concepts extraction problem as a multi-sequence tagging task [27]. The Bert-BiGRU-att- CRF scheme was introduced as an effective solution for extracting cyber entities and their relationships. It should be noted that the above methods only focus on sentence-level cyber entities and relations extraction. Nevertheless, there are many cross-sentence relationships and intricate entity descrip- tions in automotive CTI data. And these current studies are hard to deal with this complex scenario. III. ARCHITECTURE OVERVIEW OF ACTIM A. Preliminaries In order to clarify our work more clearly, some preliminary definitions are first given as follows. Definition 1 (Ontology): Ontology is a way used to formally express the concepts and their relationships in a particular domain. The ontology comprises 5 mainly primitives: class (concept), relation, func- tion, axiom and instance [36]. Usually, the ontology model is formalized as: O = (C, R, F, A, I), where C represents the set of classes or concepts; R denotes the set of relations between classes; F stands the set of special relations of function classes; A means the axiom set of constraint classes and relations; and I represents the set of class instances. Definition 2 (Knowledge graph): The knowledge graph (KG) is a structured semantic knowl- edge representation that is utilized to depict entities and their interconnected relationships in the actual world [37]. In formal terms, the KG is represented as a directed graph G = (E, R, S), where E and R are the set of entities and rela- tions, respectively. S is represented as the set of triples. Each triple is formulated as S = {(eh, r, et)|eh, et ∈E, r ∈R}, where eh, r and et denote the head entity, relation, and tail entity, respectively. Entities are the essential elements in the knowledge graph, and relationships link different entities to form a graph structure. Fig. 1. The system architecture of Actim. Actim includes three main components: (a) collecting automotive cybersecurity data and modeling CTI ontology; (b) annotating CTI corpus and extracting threat entities and their relationships; and (c) constructing an automotive CTI knowledge graph by leveraging Neo4j. B. System Architecture Actim, as an automotive cyber threat intelligence modeling framework, is capable of mining entities and their relations from threat-related descriptions. It integrates diverse and het- erogeneous cybersecurity data into semantically interpretable knowledge. As depicted in Fig. 1, Actim is composed of 3 primary parts: • Data collection and ontology modeling. We first col- lect automotive security-related data from vulnerability databases, public threat intelligence platforms, and re- search literature, etc. After that, we design a security- safety conceptual ontology model to describe the interde- pendencies between cyber and physical systems in vehi- cles. This ontology helps to understand how cybersecurity issues affect physical systems safety (see Section IV.A for details). • Cyber threat entity-relation joint extraction. The BERT- DocHiatt-BiLSTM-LSTM model addresses the challenge of automotive CTI mining through utilizing hierarchical attention mechanisms and cross-sentence context. The scheme can effectively capture threat entities and their interdependent relationships. In addition, we annotate the collected automotive CTI data using the brat tool to construct the document-level corpus (see Section IV.B for details, data collection and annotation see Section V.A). • Knowledge graph construction. We present three rules for matching entity-relationship triplets. Subsequently, we leverage Neo4j to construct an automotive CTI knowl- edge graph, merging various threat-related elements ob- tained from our previous efforts. A thorough landscape of cyber threats possesses the ability to reveal the evolution trends of vehicle cybersecurity, and further analyze the correlation between vehicle cybersecurity and safety. (see Section V.C for details). IV. METHODOLOGY A. CTI ontology model construction A vehicle security-safety conceptual ontology is created through the abstraction of the related elements and their Fig. 2. Vehicle security-safety conceptual ontology. relationships from CTI data. The VSS ontology model en- compasses physical and security elements such as the vehicle, component, vulnerability, attack and consequence, etc. It pro- vides a more overall description of vehicle security and safety information. 1) Entity definition of the VSS ontology: The VSS does not intend to be a complete ontology for vehicle cybersecurity. Our goal is to create a core conceptual ontology, as indicated in Fig. 2. The CTI ontology mainly comprises 10 types of entity classes: vehicle, identity, component (asset), attack vec- tor, attack pattern, tool, vulnerability, consequence, location, course of action. The entity classes are defined as follows. • Physical-related entity classes: Vehicle class. This class refers to the vehicle model or type, e.g., the Tesla Model S, Mercedes-Benz C-Class. Component class. This class refers to any element or module of the vehicle system and network, such as software, hardware, services, firmware and data, etc. Identity class. This class represents companies, organiza- tions or groups, e.g., Acura, BMW and Chrysler, etc. • Security-related entity classes: Attack vector class. This class is also called attack surface. The main subclasses include cellular networks (3/4/5G), Wi- Fi, Bluetooth, CAN bus, cloud platforms, GPS and keyless entry systems, etc. Attack pattern class. This class represents a sequence of steps or activities undertaken by attackers to compromise as- sets. It is divided into subclasses such as replay, eavesdropping, tampering and buffer overflow, etc. Vulnerability class. This class illustrates the logical or tech- nical flaws that might be exploited for launching attacks. For example, buffer overflows, injection flaws, cross-site scripting, misconfiguration, and so on. Tool class. This class describes the software or hardware equipment that could be used to execute cyber attacks, such as vehicle diagnostic tools, CANoe, Wireshark, and so forth. Location class. The class describes the region where the attack occurred or the target organization/company belongs to. Course of action class. The class shows the actions that are taken to protect against cyber-attacks, including intrusion detection, access control, encryption and firewall, etc. • Security-safety entity class: Consequence class. The intersection of the security and safety domains is as shown in Fig. 3. Consequence class is the key elements of the VSS ontology. It describes the potential impact of cybersecurity in terms of financial, privacy, operation, and safety aspects. For example, vehicle theft, con- trol vehicle systems, data breach, service/business disruption, fraud, vehicle collision, and so on. Fig. 3. Intersection of the security and safety domains. 2) Relationship model between entity classes: The se- mantic relations between entity classes mentioned above are reflected through object properties. The following are the object properties defined in the VSS ontology. hasVulnerability property: This property represents that a specific component has a vulnerability instance. hasVulnerability (Component, Vulnerability) hasInterface property: This property denotes that a compo- nent instance has an attack vector instance. hasInterface (Component, Attack vector) hasImpact property: This property suggests that the attack pattern or vulnerability can cause some impact directly or indirectly. The relationship can be depicted using two triples. hasImpact (Attack pattern, Consequence) hasImpact (Vulnerability, Consequence) targets property: This property indicates that the attack pattern/tool targets the component, or vulnerability. The re- lationship can be described using three triples. targets (Attack pattern, Component) targets (Attack pattern, Vulnerability) targets (Tool, Vulnerability) uses property: This property represents that the tool is employed to carry out the behavior identified in the attack pattern. uses (Attack pattern, Tool) mitigates property: This property indicates that the course of action can mitigate the related attack pattern or vulnerability. The relationship can be described in two triples. mitigates (Course of action, Attack pattern) mitigates (Course of action, Vulnerability) related-to property: This property represents that two entity classes have a related relationship. The relationship can be represented in three triples. related-to (Component, Identity) related-to (Vehicle, Identity) related-to (Vulnerability, Identity) located-at property: This property represents that the identity is located at the related location, or an attack occurred in a region. The relationship can be depicted in two triples. located-at (Identity, Location) located-at (Attack pattern, Location) based-on property: This property describes that the attack pattern instance was carried out through the attack vector. based-on (Attack pattern, Attack vector) consists-of property: This property represents that two entity classes have a containment relationship. The relationship can be described in two triples. consists-of (Component, Vehicle) consists-of (Component, Component) B. Cyber entity-relation joint extraction model This paper proposes the BERT-DocHiatt-BiLSTM-LSTM model, to achieve cyber threat intelligence mining based on cross-sentence context. As illustrated in Fig. 4, the model is composed of the embedding layer, hierarchical attention mechanism, encoder layer and decoder layer. Given the input sentence S = {w1, w2, w3, ..., wn} (with n words) from the document D = {S1, S2, S3, ..., Sn} (with n sentences), the goal is to extract threat entities and relations by leveraging the context information in document D. Next, we provide a detailed description of each component in this section. (1) Embedding layer Fig. 4. BERT-DocHiatt-BiLSTM-LSTM model. For capturing the semantic information of words, each word is converted into a low-dimensional vector. The pre- trained BERT model [38] can fuse contextual information, thus better expressing the semantic features of the words. In the embedding layer, we utilize the BERT model to generate the low-dimensional, dense word embedding vector. Given the limitation of input length for the BERT model, we let the sentence sequence as input. For the input sentence S = {w1, w2, w3, ..., wn}, the BERT model processes it to yield the embedding vector E = {e1, e2, e3, ..., en}, where wn represents the n-th word in the sentence, en denotes the word vector of the n-th word. (2) Hierarchical attention mechanism Self-attention layer (word-level attention layer): Self- attention can learn the word dependencies within sentences, and compute the attention score between individual words. The self-attention mechanism is described as: Attention(Q, K, V ) = softmax(QKT √dk )V (1) where Q, K and V denote the vector matrix of input words, which are derived from sequences that undergo three different mapping transformations. QKT is the score obtained from the dot product of the Q and K. It indicates the degree of focus given to different segments of a sentence during the encoding of a particular word. √dk represents the dimension of the input vector. Dividing the QKT by the √dk helps to avoid the rise of the score as the increasing input dimensions. Multi-head attention layer (sentence-level attention layer): In order to capture rich features, a multi-head mechanism is in- troduced. Essentially, multi-head self-attention conducts mul- tiple self-attention operations simultaneously. It can capture features of different scenes and levels from multi-subspaces [39]. The multi-head attention mechanism is expressed as: MultiHead(Q, K, V ) = Concat(head1, head2, ..., headn) (2) headi = Attention(QW Q i , KW K i , ..., V W V i ) (3) where n is the number of headers, W Q i , W K i and W V i are parameter matrices. After obtaining word embedding repre- sentations with global semantic information using the BERT model, this paper applies the attention mechanism to pro- cess these embedding representations for further capturing key semantic features. Then, concatenate the BERT feature vectors of the sentence sequences processed by the attention mechanism as the vector representation of the document, D′ = {E′ 1, E′ 2, E′ 3, ..., E′ n}. Where E′ n is the embedding vector of the n-th sentence sequence in the document. To better capture contextual features between sentences and enhance the semantic representation of cross-sentence relational entities in CTI corpora, the multi-head attention mechanism is also employed after the encoder layer. (3) Encoder layer The BiLSTM, or bidirectional long short-term memory, utilizes both forward and backward LSTM [40] to effectively capture semantic information in both directions of each se- quence. It could address the issue of gradient disappearance and enhances the generation of comprehensive semantic fea- tures. The BiLSTM can be expressed as: −→ ht = LSTM(xt, −−→ ht−1) (4) ←− ht = LSTM(xt, ←−− ht+1) (5) ht = [−→ ht; ←− ht] (6) where xt denotes the input at time step t, −→ ht and ←− ht represent forward LSTM output, backward LSTM output at time step t, respectively (see Ref. [40] for details of LSTM). Assuming the input vector at the current time is D′ t, and the hidden state obtained from the previous time step is denoted as ht−1, the features learned considering the contextual information at the current time can be represented as: ht = BiLSTM(D′ t, ht−1) (7) Next, we let the encoded output of BiLSTM as the input for the multi-head attention mechanism. This allows the model to further capture contextual features between sentences. (4) Decoder layer Many entity extraction models have adopted conditional random field (CRF) as the label decoder. However, when the label space is extensive, the CRF-based decoding process can become slow. In contrast, using LSTM as the decoder can sig- nificantly accelerate model training and achieve performance comparable to CRF. Thus, faced with the rich label spaces in sequence labeling, this model employs the LSTM network as the decoding layer to obtain the label sequence. In addition, we adopt a biased objective function [41] to enhance the effect of entity tags and reduce the impact of “O” tag. This objective function is designed to bias towards relational labels, thereby enhancing the association between related entities. V. EXPERIMENTAL EVALUATION A. Dataset and experimental setting We collect automotive cybersecurity data from a set of sources, such as vulnerability databases (i.e., national vul- nerability database, NVD), threat intelligence platforms (e.g., auto-threat intelligence cyber incident repository of Upstream Security) and GitHub (i.e., automotive attack database, AAD). This paper primarily focuses on analyzing threats or vul- nerabilities that directly impact vehicles. We exclude any ransomware attacks, information leakages or other security incidents that occurred in manufacturers backend platforms, car rental platforms, and more. So far, we have collected a total of 908 description texts of automotive cyber threats. To train and evaluate the proposed BERT-DocHiatt-BiLSTM-LSTM model, the collected texts are annotated by using the “BIOES- entity type-relation type-entity role” schema (see literature [28] for details) and VSS ontology model. The annotation data is shown in Fig. 5. (a) Brat annotation (b) Label CTI corpus Fig. 5. Brat manual annotation. We leverage the open-source Brat tool to effectively label entity and relation types in automotive CTI data. The entity and relation annotation is completed manually, as depicted in Fig. 5a. Once the manual annotation process is finished, the Brat tool would automatically generate “.ann” and “.conll” files. The “.conll” file is only available in the standard BIO format. Thus, we develop a conversion script to translate all “.ann” files into the above annotation format. Take the sequence of “Monitoring CAN message.”, the correspond- ing label would be represented as “S-AP-targets-1 B-Com- targets-2 E-Com-targets-2 O”. We annotated 908 document- level corpus, which consists of 3678 sentences, 8195 labeled entities and 4852 relationships. All source code for format conversion and preprocessing of the automotive CTI cor- pus, as well as the complete dataset have been uploaded to GitHub at https://github.com/AutoCS-wyh/Automotive-cyber- threat-intelligence-corpus. In this paper, the training and test samples are randomly divided in a ratio of 8: 2. Based on the CTI corpus, the perfor- mance evaluation of the proposed BERT-DocHiatt-BiLSTM- LSTM model is carried out. We run the experiments on Intel Core i5-13400F CPU@2.50 GHz with 64 GB RAM, and the powerful NVIDIA GeForce RTX 3090 GPU. The PaddlePaddle-GPU framework is used to execute the algorithm programs. The hyperparameters settings are detailed in Table I. The proposed model uses the bert-base-cased version of the BERT pre-trained model, which includes 12 transformer layers with a hidden size of 768. The hidden neuron size of the BiLSTM and LSTM networks is 800. To alleviate the overfitting issue during training, this paper introduces the dropout mechanism to enhance the model’s generalization ability, with a dropout rate set to 0.1. In the hierarchical atten- tion mechanism, the number of heads for multi-head attention is 8. Moreover, the bias weight in the model’s loss function is set to 15. Meanwhile, the adaptive moment estimation (Adam) algorithm is adopted for optimization during model training, with a learning rate set to 2e-5 and the number of training epochs set to 180. TABLE I HYPERPARAMETERS INFORMATION Parameter name Parameter Value transformer layers 12 hidden size 768 activation function ReLU max position embedding 128 dimension of BiLSTM encoding 800 dimension of LSTM decoding 800 dropout rate 0.1 learning rate 2e-5 nhead 8 epoch 180 bias 15 B. Results and analysis To demonstrate the effectiveness of the presented BERT- DocHiatt-BiLSTM-LSTM model, we compare it with the state-of-the-art sentence-level CTI joint extraction models in the traditional IT domain, including BiLSTM-dynamic-att- LSTM [25], and Bert-BiLSTM-att-CRF [26]. In addition, we also compared our model with the BERT-DocHiatt-BiLSTM- CRF method to further evaluate the performance of the CRF and LSTM decoders. The common evaluation metrics of the knowledge extraction task, i.e., precision (P), recall (R) and F1 score, are used to evaluate the performance of the cyber threat intelligence mining model. The extraction results are deemed accurate only when the model correctly labels the entity boundary, entity type, and relation type. The results of experiments conducted using different methods on the Acti corpus are illustrated in Table II. Given the limitations of the corpus resources, we conducted document-level entity and relation joint extraction experiments using 5-fold cross- validation, and averaged the evaluation results of the five folds as the final experiment performance of the model. TABLE II COMPARISON OF EXPERIMENTAL RESULTS Model Metric P% R% F1% Sentence BiLSTM-dynamic-att-LSTM 46.03 42.85 44.38 BERT-BiLSTM-att-CRF 50.9 55.84 53.26 Document BERT-DocHiatt-BiLSTM-CRF 52.1 31.42 39.19 BERT-DocHiatt-BiLSTM-LSTM(bias) 54.25 31.79 40.08 In fact, in the field of cybersecurity for connected au- tonomous vehicles, we prioritize the precision of information extraction models. In other words, we need to ensure that the identified security entities and relationships are as accurate as possible. According to the experimental results, the proposed BERT-DocHiatt-BiLSTM-LSTM model exhibited outstanding performance in extracting automotive cyber threat intelligence information with a precision score of 54.25%. Observably, the model with the LSTM decoder performs better in the document-level entity relation joint extraction task. Further- more, this model demonstrated faster running speed, with a total runtime of 26h 44m 30s, which is only approximately half that of the BERT-DocHiatt-BiLSTM-CRF model. From the experimental results of BiLSTM-dynamic-att-LSTM and BERT-BiLSTM-att-CRF models, the BERT-based model out- performs the BiLSTM-dynamic-att-LSTM method, which also proves the exceptional capability of BERT in the entity relation extraction tasks. The reason behind this is that BERT word vector better captures grammatical and semantic information across various contexts, improving the model’s generalization ability. It is capable of effectively handling the complex semantic characteristics of automotive CTI data. In comparison to BERT-BiLSTM-att-CRF, the precision score of our model improved by 3.35%. The BERT-DocHiatt- BiLSTM-LSTM model achieves document-level feature ex- traction by leveraging cross-sentence context information. Furthermore, our approach integrates a hierarchical attention mechanism to learn feature weights of sentence sequences and contextual features between sentences. This enables the model to more effectively characterize the input sequences, thereby further improving the precision of information extraction. To conduct a more detailed evaluation of the model’s perfor- mance, we analyze the experimental results for each class of entity and relation extraction in both the BERT-BiLSTM-att- CRF and our model, as shown in Fig.6 and Fig.7. Fig. 6. Experimental results on entities. Our CTI mining model has achieved varying degrees of improvement in most entities or relations extraction compared to BERT-BiLSTM-att-CRF, especially the performance of re- lation extraction has significantly improved. In the automobile CTI corpus, the sample size of several entities and relation- ships is very small, specifically “Course of action”, and “miti- gates”. The precision score of “mitigates” relation extraction is almost 0 in both BERT-BiLSTM-att-CRF and BERT-DocHiatt- Fig. 7. Experimental results on relations. BiLSTM-LSTM models. Moreover, the CTI corpus contains numerous overlapping relationships, i.e., one entity may be in- volved in several semantic relationships simultaneously. These overlapping relations might cause ambiguities, thus making it difficult to recognize such entities and relationships. Thus, the CTI mining model proposed in this paper has room for further improvement. The BERT-DocHiatt-BiLSTM-LSTM model introduces a hierarchical attention mechanism to capture the dependencies between words within sentences, as well as the contextual features across sentences. Additionally, a bias function is adopted at the decoder layer to enhance relational connections between entities. To verify the effectiveness of these compo- nents in entity-relation joint extraction, we conduct ablation experiments to evaluate their impact on the performance of the model. The experimental results are shown in Table III. TABLE III EFFECT OF ATTENTION MECHANISM AND BIAS FUNCTION ON MODEL PERFORMANCE Model Metric P% R% F1% BERT-BiLSTM-att-LSTM 52.75 31.78 39.66 BERT-att-BiLSTM-LSTM 53.56 32.15 40.18 BERT-BiLSTM-Multi-att-LSTM 53.48 32.15 40.15 BERT-att-BiLSTM-att-LSTM 53.74 31.6 39.78 BERT-DocHiatt-BiLSTM-LSTM 52.75 31.42 39.37 BERT-DocHiatt-BiLSTM-LSTM (bias) 54.25 31.79 40.08 Clearly, the BERT-DocHiatt-BiLSTM-LSTM model, with the bias function, still has the highest precision score. How- ever, the experimental results indicate that the recall scores of the document-level joint extraction model are relatively low. It is primarily due to the limitations of document- level CTI corpus resources. To address this, we employed the data augmentation method to train the proposed model. The precision, recall, and F1 score achieved by the BERT- DocHiatt-BiLSTM-LSTM (bias) model are 72.14%, 45.53%, and 55.83% respectively. To some extent, this approach can improve the model’s performance. Nonetheless, the current data augmentation method is relatively simple. In future re- search, we will consider optimizing the data augmentation method and annotating more datasets to further expand the automotive CTI corpus. C. Automotive CTI knowledge graph construction We attempt to convert the label sequences predicted through BERT-DocHiatt-BiLSTM-LSTM model into entity-relation knowledge triples. Firstly, the cyber threat entity is obtained based on the entity boundary and type. Then, the knowledge triple is formed based on the relation type and entity role. For this purpose, we define the following three matching rules: (1) The entity is extracted based on labels that define the boundaries and types of tokens. If tokens inside an entity possess different entity type labels, the first token’s label is determined as the type label of this entity. Similarly, this principle is also applied to processing relation type and entity role label. (2) Regarding the relation type, entities can be matched only if they possess the same relation type label. Except for entities labeled with the “M” relation, which can pair with entities of any relation type. Certainly, these matching rules should follow the 18 types of triples outlined in Section IV.A. Besides, for the entity role label, an entity can only be paired with a target entity that has a distinct entity role label. (3) Entity role matching follows the bidirectional principle. The entity with entity role label “1” is looking forward and backward, searching for the entities labeled with “2” or “m”. The entity with entity role “2”, one also should search bidirectionally to match entities with entity role “1” or “m”. When dealing with the entity with entity role “m”, one should bidirectionally traverse any entities for matching. To produce ActiKG, the extracted knowledge triples are processed and outlined in the KG as Definition 2. The extracted triples, denoted as (eh, r, et), consist of a head node eh and a tail node et, both of which belong to the entity set E. Two nodes are connected through an edge r, representing the relationship between them. A sample of the created ActiKG utilizing Neo4j is demonstrated in Fig. 8. Fig. 8. A sample of the ActiKG. The ActiKG consists of circle labels and directed edges. The circle labels and their textual descriptions represent cy- ber threat entities in automotive cyber threat intelligence. It includes information about the vehicle, component, attack pat- tern, consequence and other entity instances. Different colors represent different entity types predefined in the ontology model, as shown in Table IV. The textual descriptions in the middle of the arrows represent the relationship types between different entities, which have also been predefined in Section IV.A. The ActiKG links the cyber threat entities extracted from unstructured CIT data, forming a threat intelligence knowledge graph that embodies the characteristics of security in con- nected autonomous vehicles. Notably, entity disambiguation and completion in KG are separate research problems that are out of the scope of this paper. TABLE IV ENTITY LABELS IN THE ACTIKG Label Type Security threat instance Vulnerability Bluetooth code execution vulnerability Consequence exposure of personally identifiable information Identity Mobileye Inc Tool signal jamming equipment Course of action disable their systems Attack pattern replay attack Location South African Attack vector Wi-Fi hotspot Component remote keyless system Vehicle Tesla model 3 VI. CONCLUSIONS This paper explores a new direction of proactive security defense on automobiles, which attempts to discover valuable knowledge from numerous cyber threat information. The pur- pose of our work is to capture the relationships between vehicle physical and cyber systems, and then semantically correlate the automotive cybersecurity data to timely identify potential security threats. We propose the Actim, a cyber threat intelligence modeling framework, to mine and analyze automotive CTI data by leveraging the information extraction technology. According to the actual demand for CTI analysis, we design an automotive CTI conceptual ontology, and man- ually annotate the first document-level CTI corpus based on real-world cybersecurity data. We also propose an end-to-end automotive CTI mining approach, and then construct a CTI knowledge graph to fuse diverse cyber threat elements. The proposed CTI mining framework can effectively extract vehi- cle security-safety knowledge hidden in numerous cyber threat information. It helps to timely detect potential cyber threats, and formulate appropriate security measures for automobiles. The experiment outcomes show the effectiveness of the CTI mining model presented in this article. In the future, we will attempt to formulate a more detailed operational ontology that represents intricate relationships between diverse elements. Meanwhile, we intend to work on advancing the model’s ability to learn the overlapping relational triples. Subsequently, we turn our focus to KG completion or link prediction to improve the strength of the constructed ActiKG. Additionally, the corpus will also be continuously expanded to support further automotive CTI modeling research. REFERENCES [1] W. Feng, S. Lin, N. Zhang, G. Wang, B. Ai, and L. Cai, “Joint c-v2x based offloading and resource allocation in multi-tier vehicular edge computing system,” IEEE Journal on Selected Areas in Communications, vol. 41, no. 2, pp. 432–445, 2022. [2] D. Chen and Z. Lv, “Artificial intelligence enabled digital twins for train- ing autonomous cars,” Internet of Things and Cyber-Physical Systems, vol. 2, pp. 31–41, 2022. [3] T. Limbasiya, K. Z. Teng, S. Chattopadhyay, and J. Zhou, “A systematic survey of attack detection and prevention in connected and autonomous vehicles,” Vehicular Communications, p. 100515, 2022. [4] G. Bendiab, A. Hameurlaine, G. Germanos, N. Kolokotronis, and S. Shi- aeles, “Autonomous vehicles security: Challenges and solutions using blockchain and artificial intelligence,” IEEE Transactions on Intelligent Transportation Systems, 2023. [5] C. Miller and C. Valasek, “Remote exploitation of an unaltered passenger vehicle,” Black Hat USA, vol. 2015, no. S 91, pp. 1–91, 2015. [6] V. K. Kukkala, S. V. Thiruloga, and S. Pasricha, “Roadmap for cyberse- curity in autonomous vehicles,” IEEE Consumer Electronics Magazine, vol. 11, no. 6, pp. 13–23, 2022. [7] M. Hataba, A. Sherif, M. Mahmoud, M. Abdallah, and W. Alasmary, “Security and privacy issues in autonomous vehicles: A layer-based survey,” IEEE Open Journal of the Communications Society, vol. 3, pp. 811–829, 2022. [8] P. Mansourian, N. Zhang, A. Jaekel, and M. Kneppers, “Deep learning- based anomaly detection for connected autonomous vehicles using spatiotemporal information,” IEEE Transactions on Intelligent Trans- portation Systems, 2023. [9] T. Guan, Y. Han, N. Kang, N. Tang, X. Chen, and S. Wang, “An overview of vehicular cybersecurity for intelligent connected vehicles,” Sustainability, vol. 14, no. 9, p. 5211, 2022. [10] J. Cui, L. S. Liew, G. Sabaliauskaite, and F. Zhou, “A review on safety failures, security attacks, and available countermeasures for autonomous vehicles,” Ad Hoc Networks, vol. 90, p. 101823, 2019. [11] S. K. Khan, N. Shiwakoti, P. Stasinopoulos, and Y. Chen, “Cyber-attacks in the next-generation cars, mitigation techniques, anticipated readiness and future directions,” Accident Analysis & Prevention, vol. 148, p. 105837, 2020. [12] M. Pham and K. Xiong, “A survey on security attacks and defense techniques for connected and autonomous vehicles,” Computers & Security, vol. 109, p. 102269, 2021. [13] C. Wiecher, “A feature-oriented approach: from usage scenarios to automated system of systems validation in the automotive domain,” in Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings, 2020, pp. 1–6. [14] G. Comert, M. Rahman, M. Islam, and M. Chowdhury, “Change point models for real-time cyber attack detection in connected vehicle environment,” IEEE Transactions on Intelligent Transportation Systems, vol. 23, no. 8, pp. 12 328–12 342, 2021. [15] N. Sun, C.-T. Li, H. Chan, B. D. Le, M. Z. Islam, L. Y. Zhang, M. R. Islam, and W. Armstrong, “Defining security requirements with the common criteria: Applications, adoptions, and challenges,” IEEE Access, vol. 10, pp. 44 756–44 777, 2022. [16] N. Sun, M. Ding, J. Jiang, W. Xu, X. Mo, Y. Tai, and J. Zhang, “Cyber threat intelligence mining for proactive cybersecurity defense: A survey and new perspectives,” IEEE Communications Surveys & Tutorials, 2023. [17] X. Liao, K. Yuan, X. Wang, Z. Li, L. Xing, and R. Beyah, “Acing the ioc game: Toward automatic discovery and analysis of open-source cyber threat intelligence,” in Proceedings of the 2016 ACM SIGSAC conference on computer and communications security, 2016, pp. 755–766. [18] Z. Zhu and T. Dumitras, “Chainsmith: Automatically learning the semantics of malicious campaigns by mining threat intelligence reports,” in 2018 IEEE European symposium on security and privacy (EuroS&P). IEEE, 2018, pp. 458–472. [19] N. Dion´ısio, F. Alves, P. M. Ferreira, and A. Bessani, “Cyberthreat detection from twitter using deep neural networks,” in 2019 international joint conference on neural networks (IJCNN). IEEE, 2019, pp. 1–8. [20] H. Gasmi, J. Laval, and A. Bouras, “Information extraction of cyberse- curity concepts: An lstm approach,” Applied Sciences, vol. 9, no. 19, p. 3945, 2019. [21] T. Satyapanich, F. Ferraro, and T. Finin, “Casie: Extracting cybersecurity event information from text,” in Proceedings of the AAAI conference on artificial intelligence, vol. 34, no. 05, 2020, pp. 8749–8757. [22] T. Li, Y. Guo, and A. Ju, “A self-attention-based approach for named entity recognition in cybersecurity,” in 2019 15th International Confer- ence on Computational Intelligence and Security (CIS). IEEE, 2019, pp. 147–150. [23] J. Zhao, Q. Yan, X. Liu, B. Li, and G. Zuo, “Cyber threat intelligence modeling based on heterogeneous graph convolutional network,” in 23rd international symposium on research in attacks, intrusions and defenses (RAID 2020), 2020, pp. 241–256. [24] Y. Gao, X. Li, H. Peng, B. Fang, and S. Y. Philip, “Hincti: A cyber threat intelligence modeling and identification system based on heterogeneous information network,” IEEE Transactions on Knowledge and Data Engineering, vol. 34, no. 2, pp. 708–722, 2020. [25] T. Li, Y. Guo, and A. Ju, “Knowledge triple extraction in cybersecurity with adversarial active learning,” J. Commun, vol. 41, pp. 80–91, 2020. [26] J. Zuo, Y. Gao, X. Li, and J. Yuan, “An end-to-end entity and relation joint extraction model for cyber threat intelligence,” in 2022 7th Inter- national Conference on Big Data Analytics (ICBDA). IEEE, 2022, pp. 204–209. [27] Y. Guo, Z. Liu, C. Huang, J. Liu, W. Jing, Z. Wang, and Y. Wang, “Cyberrel: Joint entity and relation extraction for cybersecurity con- cepts,” in Information and Communications Security: 23rd International Conference, ICICS 2021, Chongqing, China, November 19-21, 2021, Proceedings, Part I 23. Springer, 2021, pp. 447–463. [28] L. Luo, Z. Yang, M. Cao, L. Wang, Y. Zhang, and H. Lin, “A neural network-based joint learning approach for biomedical entity and relation extraction from biomedical literature,” Journal of biomedical informatics, vol. 103, p. 103384, 2020. [29] A. M. Shaaban, C. Schmittner, T. Gruber, A. B. Mohamed, G. Quirch- mayr, and E. Schikuta, “Ontology-based model for automotive security verification and validation,” in Proceedings of the 21st International Conference on Information Integration and Web-based Applications & Services, 2019, pp. 73–82. [30] A. M. Shaaban, C. Schmittner, T. Gruber, A. B. Mohamed, G. Quirch- mayr, E. Schikuta et al., “An automated ontology-based security require- ments identification for the vehicular domain.” J. Data Intell., vol. 1, no. 4, pp. 401–418, 2020. [31] A. M. Shaaban, C. Schmittner, T. Gruber, A. B. Mohamed, G. Quirch- mayr, and E. Schikuta, “Ontology-based security requirements frame- work for current and future vehicles,” in Data Science and Big Data Analytics in Smart Environments. CRC Press, 2021, pp. 197–217. [32] S. Hou, X. Chen, J. Ma, Z. Zhou, and H. Yu, “An ontology-based dynamic attack graph generation approach for the internet of vehicles,” Frontiers in Energy Research, vol. 10, p. 928919, 2022. [33] D. Grimm and E. Sax, “Context-aware vehicle and fleet security combining a knowledge graph and an object-oriented model,” in 2022 International Conference on Connected Vehicle and Expo (ICCVE). IEEE, 2022, pp. 1–8. [34] R. Y. Venkata, P. Kamongi, and K. Kavi, “An ontology-driven framework for security and resiliency in cyber physical systems,” ICSEA, vol. 2018, p. 23, 2018. [35] M. A. CAPPELLI, “A semantic-based artificial intelligence (ai) reason- ing tool to analyse the link between cyber security and safety for internet of vehicle (iov) and autonomous vehicles (avs),” 2022. [36] C. Tang, L. Wang, S. Tang, B. Qiang, and J. Tian, “Semantic description and verification of security policy based on ontology,” Wuhan University Journal of Natural Sciences, vol. 19, no. 5, pp. 385–392, 2014. [37] K. Liu, F. Wang, Z. Ding, S. Liang, Z. Yu, and Y. Zhou, “Recent progress of using knowledge graph for cybersecurity,” Electronics, vol. 11, no. 15, p. 2287, 2022. [38] J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova, “Bert: Pre-training of deep bidirectional transformers for language understanding,” arXiv preprint arXiv:1810.04805, 2018. [39] X. Qiao, Y. Tang, Y. Liu, M. Su, C. Wang, Y. Fu, X. Li, M. Wu, Q. Fu, and D. Zhu, “A event extraction method of document-level based on the self-attention mechanism,” in International Conference on Machine Learning for Cyber Security. Springer, 2022, pp. 609–619. [40] K. Greff, R. K. Srivastava, J. Koutn´ık, B. R. Steunebrink, and J. Schmid- huber, “Lstm: A search space odyssey,” IEEE transactions on neural networks and learning systems, vol. 28, no. 10, pp. 2222–2232, 2016. [41] S. Zheng, F. Wang, H. Bao, Y. Hao, P. Zhou, and B. Xu, “Joint extraction of entities and relations based on a novel tagging scheme,” in Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), 2017, pp. 1227– 1236.