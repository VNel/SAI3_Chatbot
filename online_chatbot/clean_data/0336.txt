On Holistic Multi-Step Cyberattack Detection via a Graph-based Correlation Approach ¨Omer Sen∗, Chijioke Eze†, Andreas Ulbig∗, Antonello Monti†, ∗IAEW, RWTH Aachen Univserity, Aachen, Germany Email: {o.sen, a.ulbig}@iaew.rwth-aachen.de †ACS, RWTH Aachen University, Aachen, Germany Email: {chijioke.eze, amonti}@eonerc.rwth-aachen.de Abstract—While digitization of distribution grids through information and communications technology brings numerous beneﬁts, it also increases the grid’s vulnerability to serious cyber attacks. Unlike conventional systems, attacks on many industrial control systems such as power grids often occur in multiple stages, with the attacker taking several steps at once to achieve its goal. Detection mechanisms with situational awareness are needed to detect orchestrated attack steps as part of a coherent attack campaign. To provide a foundation for detection and prevention of such attacks, this paper addresses the detection of multi-stage cyber attacks with the aid of a graph-based cyber intelligence database and alert correlation approach. Speciﬁcally, we propose an approach to detect multi-stage attacks by lever- aging heterogeneous data to form a knowledge base and employ a model-based correlation approach on the generated alerts to identify multi-stage cyber attack sequences taking place in the network. We investigate the detection quality of the proposed approach by using a case study of a multi-stage cyber attack campaign in a future-orientated power grid pilot. Index Terms—Cyber Intelligence Database, Cyber Security, Graph-based Correlation, Intrusion Detection, Smart Grid I. INTRODUCTION The smart grid (SG) is a gigantic network spanning over a huge geographical area with heterogeneous communication network [1]. It has been undergoing rapid transformation in recent years due to the need to integrate renewable energy sources (distributed over a large geographical area) into the grid. These transformations are turning the power grid into an intelligent interconnected system [2] with a high degree of digitization; thus, blurring the boundary not only between operational technology (OT) and information technology (IT) but also between the process network and external (for instance public networks such as Internet) network(s) [3]. The consequence of this is that the power grid paradigm is now beginning to include increased interaction between stakeholders involved in power generation, distribution, and consumption. An instance is ﬂexibility exchange within a local energy market [4]. The increased interaction between different actors not only leads to a more complex situation in terms of cyber-physical sovereignty of the grid [5] but also results in an increased threat surface for potential intrusion into the system by unauthorized third parties [6]. Mitigation of the new threat surface in the SG requires development and inte- gration of a holistic security concept in the SG. This includes preventive measures such as security-by-design principles and also detective and reactive measures [7]. Particularly, detective measures that traditionally focus only on events within the communication layer of the system (e.g., traditional intrusion detection system (IDS)) [8] must not only consider suspicious and malicious events but also their underlying meaning and implications in the context of the system [9]. This contextual consideration of information include accurate interpretation of events to reduce false positives [10] as well as details that can be used to derive missing information, resulting in reduced false negatives [11]. It has been reported that efﬁcient data collection and analysis are needed to understand the context of a given cyber attack situation. This requires acquisition and utilization of data from communication layer and data relating to the infrastructure, topology, assets, actors, mission, and their interaction to be stored in a knowledge base [12]. Thus, this paper aims to address the following challenges: (i) Development of an efﬁcient approach for collection and aggregation of heterogeneous cyber attack-related data from different domains. (ii) Development of an appropriate attack model to serve as a basis for contextual assessment of security-related data from the offensive security perspective. (iii) Development of a simple approach for correlating het- erogeneous security-related data to enable reconstruction of complex cyber attack campaigns within the SG. In this paper, we propose a framework that leverages heterogeneous cyber intelligence data to detect complex cyber attacks in SG. We summarize key contributions of this paper as follows: 1) We present the current state of the art in cyber intelligence and correlation approaches and highlight problems facing existing detection approaches. 2) We present a framework that address the problems asso- ciated with the present detection approaches. 3) We present a use case implemented in a real SG pilot to demonstrate the detection quality of our framework. Additionally, the repository hosting the code implementa- tion for the work will be made available to the public as an open-source at the end of the project in 2022. 978-1-6654-3254-2/22/$31.00 ©2022 IEEE arXiv:2211.10971v1 [cs.CR] 20 Nov 2022 The remainder of this paper are as follow. Section II dis- cusses cyber security in SG. We discuss our proposed frame- work for multi-setp attack detection in Section III and present a validation experiment we performed using the proposed framework in Section IV. Section V presents the conclusion and possible extensions to the present work. II. CYBER SECURITY IN SMART GRIDS In this section, we provide an overview of the state of the art of cyber security issues in SG with respect to the present work. A. Cyber Intelligence in Smart Grid Cyber intelligence gathering is an important task that can help in defending the power grid against cyber attacks. For instance, log-based cyber threat hunting has been employed when handling sophisticated attacks. However, it should be noted that existing approaches require signiﬁcant manual effort to retrieve relevant attack information and generally overlook rich external sources of threat knowledge such as open-source Cyber Threat Intelligence (OSCTI). To this end, [13] devel- oped an automated technique for extracting knowledge about threats (indicators of compromise, indicators of compromise (IoCs)) and their relations from unstructured OSCTI reports. The authors showed how to use the resulting knowledge to aid threat hunting activity. Further, [14] proposes a realistic and comprehensive model for detecting attacks. The method splits attack detection pro- cess into six stages: aim, scale, equipment, planning, execution and input, and validated the model using Ukrainian electricity grid attacks. The authors showed how advanced persistent graphs can be used to extract IoC from the attacker’s tactic, technique and procedure (TTP) for threat hunting purposes. The method provides a high-level representation of an attack campaign and enables quick assessment of attack progression from both attacker and defender’s perspectives. In the same vein, [15] applied natural language processing model (BERT- BiLSTM-CRF) to automatically extract threat actions and generate TTPs from advanced persistent threat reports. Similar to the above mentioned works (particularly, [14] and [15]), the present work includes a method for assessing risk and detection of attack actions. It is based on a graph- structured data model (knowledge graph) of the framework which integrates both static and dynamic network data to enable capabilities such as fast and dynamic generation of attack graphs for the network. The attack graph forms the basis for further analysis of attack progression. More details on this are presented in Section III. B. Contextual Detection of Cyber Attacks IDS has been the de facto tool for detecting attacks in networks and networked systems. An IDS can be used to monitor the information and communication technology (ICT) network or hosts attached to it for attack-related activities such as login attempts, network scans, suspicious log traf- ﬁc or syslog without considering process semantics of the power grid [16]. Generally, modern IDS achieves uses either supervised machine learning approach (misuse approach) that employs attack signatures or unsupervised machine learning approach (anomaly based approach) to automatically identify indicators of attack. A combination of the two approaches has also been proposed for improved detection capability of the IDS [17]. While the above approaches perform generally well for single-stage attacks in most cases, they have been shown to be ineffective against multi-stage attacks. In such cases, contextual information can be used to used improve performance and ensure fast detection capability. Contextual detection involves aggregation of data (for in- stance, logs and event data) from various sources (e.g. IDS, ﬁrewalls, etc), normalization of the data to a common format and ﬁnally synchronization of associated event ﬁelds (e.g. timestamps) for further data processing and for performing alert correlation [18], [19]. Apart from data gathering, attack modeling is also important for contextual detection. A com- mon way of modeling a multi-stage attacks is by creating its attack graph representation. It enables extraction of contextual information via correlation and reasoning over the attack- related data to classify or infer characteristics and relations between entities involved in the attack [20]. An attack graph captures two concepts: successor and predecessor nodes, and helps to discover different paths an attacker unleashing a multi-step attack can take to reach the target [21]. Apart from attack graph representation, other approaches have also been proposed in the research community for extracting contextual information when handling multi-stage attacks. For instance, [22] employ contextual information in the form of Pattern-of-Life (PoL), and expert knowledge on true network behavior to develop a novel IDS that can detect multi-stage attack in real-time. One of the beneﬁts of this approach is that it does not require prior training. In addition to use of PoL, [23] propose an anomaly-based IDS that improves the efﬁciency of the IDS by using Dempster Shafer Theory (DST) theory and fuzzy cognitive maps (FCMs) to encode contextual information. To improve performance and robustness to missing alerts/detections, the present work uses hidden-colored-petri net (HCPN) models [24] to identify the underlying attack behind set of alerts generated by attack detection systems. C. Problem Analysis Although several techniques and frameworks have been pro- posed to tackle cyber attacks against power grids, it is worthy of note that there are some challenges that are drastically affecting their performance [1]. One major challenge is that of gaining access to relevant cyber attack data, availability of resources to quickly process the data and skills to do so. Other key challenges facing cyber attack detection and mitigation in SGs include: • Lack of explainability of machine/deep learning models used in anomaly based IDSs • High false positives in detection results, especially in anomaly-based IDSs • Lack of ﬂexibility to changing threat landscape. This is the major issue with signature-based IDSs • Lack of overarching context regarding the attack objective for reactive countermeasures The speciﬁc property of SG enables deterministic and model-based approaches that exploit domain-speciﬁc knowl- edge. In particular, OT in SG is characterized by the following: i) the predominance of machine-to-machine communication (deterministic communication behavior), ii) homogeneity of assets (simpliﬁcation of modeling), iii) speciﬁc network re- quirements for different device types (accurate network mod- eling), iv) hierarchical control structures (plausibility check), v) long lifetime of installed ﬁeld devices (static infrastructure), vi) pre-authorization of ﬁeld devices against local servers (simple authentication process), and vii) deﬁned life cycle management and maintenance processes (remote access pro- cesses). These properties enable a more straightforward model- based detection approach where domain-speciﬁc knowledge can be structured in a given ontology model. Thus, in this paper, we propose a domain-speciﬁc knowledge-based system that can be used for multi-stage cyber attack detection. III. MULTI-STAGED ATTACK DETECTION SYSTEM In this section, we present our proposed multi-stage at- tack detection framework and the method we use in cyber- intelligence acquisition and alert correlation. A. Framework Overview Figure 1 illustrates the architecture of the proposed frame- work, which at its core realizes a knowledge-based approach to correlate and predict attack sequences. We modeled a cross-domain descriptive ontology model in RDF to improve and enrich the knowledge management process. The ontology model combines infrastructure-speciﬁc data with cyber threat information as well as dynamically retrieved indicators in a coherent and comprehensive graph-based data model. This approach helps to enrich available data and knowledge through linkage and classiﬁcation as they are collected and stored. For the connection to the knowledge base, we speciﬁ- cally developed a graph-based database connector module in Python that handles all access processes. It manages data exchange between the access-requesting module(s) and the database, handles all intervening micro-managements such as format conformance transformation and parsing as well as pre-processing. Additionally, the connector is also the main access point for external components requesting access to our database via a broker messaging system (e.g., RabbitMQ) or a direct client-server endpoint connection. Within the frame- work, we use the connector to retrieve necessary data and speciﬁcations for attack and event correlation, and prediction processes. The ﬁrst step for these processes is the extraction and gener- ation of a logic-based attack graph via the attack graph gener- ation module using Datalog. In this module, we implemented Fig. 1. Structural overview of the framework architecture with the core components of the knowledge base and attack correlation. an approach to extract factual data such as infrastructure information and cyber threat data from the knowledge base and generate the attack graph for the given attack scenario. This approach enables generation of a consistent and coherent attack graph based on currently observed and available data in the knowledge base. To better estimate the likelihood that an attack has occurred, we convert the attack graph into a correlation-enabled model in Python using NetworkX, which is then provided to the attack sequence correlation module. Until this step, all pro- cesses and computations such as knowledge base creation with (quasi-) static (infrastructure-related) information and attack graph generation and conversion are performed in larger time domains. Because the information needed for attack graph generation is unlikely to change frequently, performance- intensive tasks can be distributed into deﬁned time ranges that reﬂect the frequency of infrastructure changes. Thus, a periodic update process can be implemented for the knowledge base. Updates are performed either when changes occur within the infrastructure or at deﬁned time intervals. The updates are performed through the interconnector, which translates the structured knowledge into queries according to the ontology. To provide a basis for deriving appropriate remediation measures, we use the attack sequence in conjunction with a prediction model generated from the attack graph to forecast possible next attack steps. Fig. 2. Structural overview of the ontology model for merging heterogeneous data into a consistent cyber intelligence database. B. Knowledge Base The knowledge base aims to transform heterogeneous data into a consistent graph-based data model which is imple- mented as a No-SQL graph database using Neo4j [25]. This allows us to specify and compile the knowledge of the system including both static information such as the system topology and dynamic data such as attack indicators into the knowledge base. In this way, we can easily adopt new use cases and increase situational awareness by adding context to the received event messages and indicators. In the following, we describe the current ontology using class views. The designed ontology model is shown in Fig- ure 2. All nodes represent classes with all their possible relationships (edges) to other classes. They do not represent individual class instances (objects). The blue nodes represent the network layer. Further, we deﬁne the Internet protocol (IP) networks that are present in the infrastructure. The IP address nodes are connected to the network nodes to indicate their membership. We also deﬁne routing nodes that can connect different subnets. Often, these also have ﬁrewall functions. We deﬁne routing between hosts and networks using the route relationship. The ﬁrewall, which is part of the yellow authorization layer, can have ﬁrewall rules: allow and block rules. These are used to describe various rules that determine whether or not certain communications trafﬁc such as IP packets will be forwarded by the ﬁrewall. This information is important when creating attack graphs as it determines which host can access a given host and how. The other part of the privilege layer includes user accounts and principles which are used to specify different accounts and their privileges on each host. The host layer (green) speciﬁes which hosts exist in the infrastructure. Hosts can be assigned multiple IP addresses and thus be part of multiple networks. Software resources run on them, which in turn can use other software resources. Software resources may have ports associated with them if they are running as network services accessible through a network interface. This information is extremely important because it shows which software resources are remotely accessible and can potentially be the target of an attack vector. Further, our ontology also speciﬁes known vulnerabilities of various software resources and their properties. For this purpose, we use the common vulnerability enumeration (CVE) and the common vulnerability scoring system (CVSS), which are associated with the corresponding software resources and are shown in purple. The gray nodes represent the mission layer. The mission layer deﬁnes the critical functions provided by the infras- tructure, i.e., the potential attack targets of an attacker. For example, the operational goal of a control system is deﬁned by the mission layer, which for an energy management system (EMS) can be, for example, optimization of self-consumption, which is what the attacker potentially might try to interfere with. In general, the knowledge base helps in modeling of the dependencies and interactions between components present in the system. Further, we associate dynamic information such as alerts are with network nodes that are involved in the observation. Each observation belongs to a detector that triggered the observation. C. Alert Correlator This section describes the method we employ to correlate observations with data in the knowledge base. The correlation method is based on Petri net model [26], a mathematical modeling language typically used to describe distributed, discrete event systems and to model concurrent behavior. In the proposed approach, we employ Petri net to model cyber threats, detect multi-stage attacks, and to perform event correlation. In particular, we use HCPN models [24] because it offers richer representation than ordinary Petri net. We use “places” in the HCPN to represent security con- ditions and targets that describe the attack process while transitions represent the atomic attack steps executed by the attacker. As an extension to regular vanilla Petri nets, an HCPN also has outgoing arcs from a transition to observation nodes that can be triggered when the connected transition ﬁres. This models the situation where an attacker’s action can trigger indicators or alarms. The reason for this is that the defender cannot observe the attacker’s actions directly but only through the triggered indicators. Further, these indicators can sometimes be ambiguous or uncertain due to imprecise information provided by the sensors or the extracted security sources. The Petri net model itself, a bipartite graph, can be directly derived from the logical attack graph we generated based on our infrastructure knowledge in addition to the cyber threat information. Particularly, we use MulVal [27] to generate attack graphs and in performing risk assessment [28]. The resulting risk values from the assessment are used to calculate the probability of attack actions in terms of offensive security and to evaluate the costs and beneﬁts of attack actions from the attacker’s perspective. Thus, the concept of attack action probability in our work is understood from a decision- theoretic perspective on whether the attack action makes sense for the attacker to perform. However, this concept depends on prior knowledge about the attacker’s main objective, which is also an essential part of attack graph generation. This is why our attack graphs contain several main attack objectives (nodes without outgoing edges). Formally, we deﬁne attack action probability, Pr as Pr = p (Aa | Ag, precons) (1) where Aa denotes attack action, Ag denotes attack goal and precons denotes preconditions for the attack action. Similarly, all connections between transitions, places, and observations are assigned probability-based conﬁdence values that indicate the likelihood of the node at the outgoing end given the node at the incoming end. In this way, we can represent the uncertainty in the attacker’s actions, their preconditions, their success rate, and the false-positive and true-positive rates. We also deﬁne a location and transition corresponding to harmless actions falsely issued as alerts in the system. This facilitates mapping of alerts that are not strongly correlated with attack steps to harmless false-positive activities in the system. The probabilistic nature of our model allows us to specify various probabilistic computations according to [24]. Thus, a dynamic programming-based approach can be taken that allows us to derive a sequence of attacker actions from a sequence of alerts. We use this approach for event correlation as it requires limited assumptions and computa- tional complexity of O(m2n), where m denotes the number of transitions and n denotes the number of observations. In the end, we obtain the sequence of attack actions that maximizes the likelihood of the model. The resulting attack sequence contains a more strict path of actions that represents the attack evolution. The HCPN model represents possible attack actions on the infrastructure based on the knowledge given by the generation timestamp. As a consequence, the ﬂexibility of the model is tied to the knowledge base. The model is adapted to changes in the knowledge base by generating an updated model. By com- bining the model with a probability-based prediction model such as Bayesian network [29], likely next attack steps are predicted. In this way, we detect historical evolution of attacks based on existing observations and predict potential future actions by using Bayesian network. Because of this situation-aware detection approach, our approach can reduce false positives and false negatives rates by contextually evaluating the attack indicators within the attacker model. Thus, the attack is evaluated in terms of whether the in- dicators are plausible in their chronology and also with respect to the trajectory path of the attacker model. The drawback of the proposed approach is the increased information required for its deployment and operation. Situational awareness in our approach requires detailed information about the infrastruc- ture, devices, networking, and conﬁguration, which in a less detailed state may affect the quality of detection obtained by using our framework. IV. CASE STUDY & DISCUSSION In this section, we investigate the detection quality of the proposed framework through a case study. A. Case Study Scenario In this case study, we demonstrate the proposed framework in a scenario mainly set in a web-based technology environ- ment where a central platform acts as a demand side response (DSR) platform and performs self-consumption optimization for a microgrid. The microgrid consists of household loads with photovoltaic inverter (PV) and battery storage system (BSS). The households are connected to the DSR platform via smart meters and provide their metering data while the distributed energy resources (DERs) are controlled via photo- voltaic inverters. In addition, the DSR platform also has access to the Internet via a ﬁrewall. Further, another ﬁrewall also provides access to the process network containing the control components. Within the infrastructure, the attack scenario is deﬁned as a multi-stage attack campaign that attempts to penetrate the DSR network from the Internet to compromise the platform and cause power imbalance by manipulating process data. Speciﬁcally, the attack exploits vulnerabilities in the SSH network service (enumeration of valid usernames) and initiates a brute force attack to gain access to the DSR platform via SSH (dictionary attack). After successfully gaining access to the DSR platform, the attacker performs activities to elevate his privileges and also to gain write privileges on the platform (e.g., SUID-based privilege escalation). After gaining sufﬁ- cient privileges on the DSR platform, the attacker manipulates the smart meter data received from the DSR platform and attempts to create a false grid state that suggests a low- load situation in which the energy supply is provided by the DSR and BSS components must be reduced. The EMS logic of the DSR platform concludes that the power supplied by the PV and BSS components must be reduced and sends the corresponding control commands. However, these control commands are sent as grid-state harmful commands, i.e., false commands that compromise grid stability by causing a signiﬁ- cant power imbalance. At this point, the attacker has achieved its global objective. Detector components are deployed within the infrastructure to monitor communication behavior and process data consistency to provide attack indicators. B. Case Study Results Based on the case study scenario, the knowledge base is populated (cf. Figure 3). Particularly, the infrastructure infor- Fig. 3. Illustration of the knowledge base graph created for this case study. Fig. 4. Illustration of the resulting HCPN model for the case study. The blue colored places represent the resources gained after the attack (pre-condition), the green transition represents the actual attack actions (post-condition), while the red nodes represent the observation (alert). mation such as the facilities, assets and network components were speciﬁed according to our ontology model. Semantic information such as ﬁrewall rules and detector placement are also included. During the case study scenario execution, the observations reported by the detectors are added to the database. Based on this information, facts are extracted and used to create the attack graph to determine possible attack actions. Figure 4 illustrates the resulting HCPN model generated based on the knowledge graph and the obtained attack indica- tors. Within the generated HCPN model, the dictionary attack action is associated with the SSH login attempt and bruteforce attack indicators. Further, the DSR network access action is linked to the SSH login indicator, while the privilege escalation attack is associated with the executed program indicator. Smart meter data tampering is detected as an anomaly indicator. Based on the HCPN model, the alert correlation process generates a sequence in the model to which corresponding observations are mapped. Table I shows the result of the correlation process, where Pr represents the risk probability that the corresponding transition node is triggered, while Aa represents whether the transition node is actually triggered. The Ap attribute here represents the predicted attacker’s next steps. Because the attacker in our case study followed a strict action sequence to cause an energy imbalance in the network, the correlated sequence corresponds to the path leading to this goal based on supporting observations. TABLE I RESULT OF THE CORRELATION PROCESS IN THE CASE STUDY. Attack Step Pr Aa Ap Exploit Vulnerabilities of Web Services 0.3 - - Access Credential Data for VPN 0.53 - - VPN Server Conﬁguration Compromised 0.13 - - Insider Attack 0.33 - - Dictionary Attack 0.3 X - Access to DSR Platform 0.26 X - Escalation of Privileges 0.25 X - Remote Control of DSR Platform 0.61 - - Theft of Personal Data 0.61 - - Manipulation of Smart Meter Data 0.96 X - Manipulation of Historical Data 0.24 - - Manipulation of Future Forecast Data 0.06 - - Sending Grid Harmful Control Commands 0.93 - X Thus, the result of the correlation process fully corresponds to the actual attack path in which the attacker gained access to the DSR network through the dictionary attack, elevated its privileges on the DSR platform, and manipulated the smart meter data to cause a power imbalance. However, because there are no other observations about the power imbalance caused due to the attack, the last steps of the HCPN are not shown as activated. However, if we access the attribute Pr, the probability or risk of activating the steps, we can see that the last attack step “sending grid harmful control commands” has a relatively high probability value, indicating a very likely evolution to this branch of the model. Accordingly, the Ap attribute for this step indicates a likely next step of the attack that will occur according to the correlated attack sequence. In the context of the case study, the detected attack result of our approach corresponds to the actual course of the attack and the planned target. Both the historical and future actions were correctly detected and reported. Furthermore, in this case study, our approach performed as follows: i) population of the knowledge base took 4s for 232 nodes, ii) generation of the attack graph took 8s for 860 facts, iii) attack emulation itself took 229s for 4 attack steps, iv) attack correlation took 3s for 198 nodes, and v) it took 4s to generate and transmit the report. Considering that the last two steps in the detection are performed frequently, a detection time of less than 10s is a reasonable time frame. Thus, based on the correlation process, the attack campaign can be reconstructed in a reasonable time span. The next steps to be taken by the attacker can also be predicted. C. Discussion Our proposed framework can reliably reconstruct the attack campaign and even predict the next steps of the attack. However, to accurately reﬂect the actual situation, a sufﬁcient number of observations is required. The alert correlation approach is highly dependent on these observations and thus on the underlying placement of detectors. If there are not enough detectors to monitor the system, the bias of the correlation process is based more on the logic-based risk assessment, where the probability of easily achievable steps and objectives inﬂuences the conclusion. This can become an issue in attack strategies with multiple targets when there are multiple objectives rather than just one. A high level of observation based on a large number of detectors can reduce this ambiguity to a set of speciﬁc objectives. Thus, if there are not enough observations available, this correlation and prediction process will favor the objectives that are easy to reach from an attack perspective. Additionally, the level of information in the knowledge base, particularly the speciﬁcation of the infrastructure, plays a crit- ical role in the quality of detection. A detailed description of the underlying infrastructure and network architecture helps in accurate generation of the attack graph and thus inﬂuences the correlation and prediction methods. Missing information can lead to the creation of inaccurate attack graphs that describe a different attack model and thus a different perception of the current situation. Consequently, the attack correlation and prediction concludes to a different development model of the attack, which results to a higher number of false positives or false negatives. Therefore, the infrastructure speciﬁcation and corresponding cyber threat information need to be as accurate and complete as possible to achieve optimal correlation and prediction results. Nevertheless, in this case study investigation, we demonstrated that our proposed framework can reliably detect multi-stage cyber attacks and predict their next steps, provide high detector coverage and complete information base. V. CONCLUSION The emerging cyber threat situation for critical infrastruc- tures, especially for power grids, requires a holistic security approach consisting not only of preventive but also detective and reactive measures. To achieve this goal, we propose an approach capable of reconstructing complex cyber attack campaigns. The proposed approach is based on knowledge base that fuses heterogeneous data into a consistent graph- based data model. The knowledge base is used to detect multi- stage cyber attacks by performing HCPN-based alert corre- lation and attack step prediction using a Bayesian network. We validated the detection quality of our framework using a case study and showed that it can reliably reconstruct multi- stage cyber attacks. However, the detection quality of the framework depends on the detector coverage in the system and the completeness of the knowledge base. a possible future work would be to address the information dependency issue of the framework by developing a robust correlation approach that leverages the graph structure of the knowledge base in a multi-layer correlation approach. For instance, similarity correlation can be performed based on component attributes and the topological relationship described in the knowledge graph to identify other potential components of interest. ACKNOWLEDGMENTS This work is partly funded by the European Union’s Horizon 2020 research and Innovation pro- gramme under grant agreement N°832989. REFERENCES [1] G. Rajendran et al., “Cyber Security in Smart Grid: Challenges and Solutions,” in ICPEDC. IEEE, 2019. [2] T. Vijayapriya et al., “Smart grid: an overview,” Smart Grid and Renewable Energy, 2011. [3] B. Siemers et al., “Modern Trends and Skill Gaps of Cyber Security in Smart Grid,” in EUROCON. IEEE, 2021. [4] F. Teotia et al., “Local energy markets: Concept, design and operation,” in NPSC. IEEE, 2016. [5] M. Aldabbas et al., “Smart Sovereignty: The Security Shield for Smart Society 5.0,” 2020. [6] T. Krause et al., “Cybersecurity in Power Grids: Challenges and Oppor- tunities,” Sensors, 2021. [7] D. van der Velde et al., “Methods for Actors in the Electric Power System to Prevent, Detect and React to ICT Attacks and Failures,” in ENERGYCon. IEEE, 2020. [8] T. M. Chen et al., “Intrusion detection,” IET Publishing, 2014. [9] C. Escudero et al., “Process-aware model based IDSs for industrial control systems cybersecurity: approaches, limits and further research,” in ETFA. IEEE, 2018. [10] S. D. Anton et al., “A question of context: Enhancing intrusion detection by providing context information,” in CMI. IEEE, 2017. [11] M. Sourour et al., “Environmental awareness intrusion detection and prevention system toward reducing false positives and false negatives,” in CICS. IEEE, 2009. [12] H. Kure et al., “Cyber threat intelligence for improving cybersecurity and risk management in critical infrastructure,” Journal of Universal Computer Science, 2019. [13] P. Gao et al., “Enabling efﬁcient cyber threat hunting with cyber threat intelligence,” in ICDE. IEEE, 2021. [14] V. S. Sree et al., “Artiﬁcial Intelligence Based Predictive Threat Hunting In The Field of Cyber Security,” in GCAT. IEEE, 2021. [15] L. Zongxun et al., “Construction of TTPS From APT Reports Using Bert,” in ICCWAMTIP. IEEE, 2021. [16] J. J. Chromik et al., “Context-aware local Intrusion Detection in SCADA systems: a testbed and two showcases,” in SmartGridComm, 2017. [17] I. Aljamal et al., “Hybrid intrusion detection system using machine learning techniques in cloud computing environments,” in 2019 IEEE 17th international conference on software engineering research, man- agement and applications (SERA). IEEE, 2019, pp. 84–89. [18] B. D. Bryant et al., “A novel kill-chain framework for remote security log analysis with SIEM software,” computers & security, 2017. [19] P. Radoglou-Grammatikis et al., “Spear siem: A security information and event management system for the smart grid,” CNJ, 2021. [20] ¨O. Sen et al., “Towards an Approach to Contextual Detection of Multi- Stage Cyber Attacks in Smart Grids,” in SEST. IEEE, 2021. [21] M. Angelini et al., “An attack graph-based on-line multi-step attack detector,” in ICDCN, 2018. [22] F. J. Aparicio-Navarro et al., “Multi-stage attack detection using con- textual information,” in MILCOM. IEEE, 2018. [23] F. J. Aparicio-Navarro et al., “Addressing multi-stage attacks using expert knowledge and contextual information,” in ICIN. IEEE, 2019. [24] D. Yu et al., “Improving the quality of alerts and predicting intruder’s next goal with Hidden Colored Petri-Net,” CNJ, 2007. [25] J. J. Miller, “Graph database applications and concepts with Neo4j,” in SAIS, 2013. [26] J. L. Peterson, “Petri nets,” CSUR, 1977. [27] X. Ou et al., “MulVAL: A Logic-based Network Security Analyzer,” in USENIX security symposium. Baltimore, MD, 2005. [28] M. Frigault et al., “Measuring network security using bayesian network- based attack graphs,” in COMPSAC. IEEE, 2008. [29] S. Kondakci, “Network security risk assessment using Bayesian belief networks,” in SocialCom. IEEE, 2010.